(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/node_modules_@moralisweb3_8a58ce._.js", {

"[project]/node_modules/@moralisweb3/common-core/lib/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ApiErrorCode": (()=>ApiErrorCode),
    "ApiModule": (()=>ApiModule),
    "AuthErrorCode": (()=>AuthErrorCode),
    "AxiosRetry": (()=>AxiosRetry),
    "BigNumber": (()=>BigNumber),
    "Config": (()=>Config),
    "Core": (()=>Core),
    "CoreConfig": (()=>CoreConfig),
    "CoreError": (()=>CoreError),
    "CoreErrorCode": (()=>CoreErrorCode),
    "CoreProvider": (()=>CoreProvider),
    "LoggerController": (()=>LoggerController),
    "Module": (()=>Module),
    "ModuleType": (()=>ModuleType),
    "Modules": (()=>Modules),
    "MoralisApiError": (()=>MoralisApiError),
    "MoralisAuthError": (()=>MoralisAuthError),
    "MoralisData": (()=>MoralisData),
    "MoralisDataObject": (()=>MoralisDataObject),
    "MoralisError": (()=>MoralisError),
    "MoralisStreamError": (()=>MoralisStreamError),
    "NextPaginatedRequestResolver": (()=>NextPaginatedRequestResolver),
    "OperationRequestValidator": (()=>OperationRequestValidator),
    "OperationType": (()=>OperationType),
    "PaginatedResponseAdapter": (()=>PaginatedResponseAdapter),
    "PaginationReader": (()=>PaginationReader),
    "RequestController": (()=>RequestController),
    "ResponseAdapter": (()=>ResponseAdapter),
    "StreamErrorCode": (()=>StreamErrorCode),
    "UnreachableError": (()=>UnreachableError),
    "assertUnreachable": (()=>assertUnreachable),
    "dateInputToDate": (()=>dateInputToDate),
    "determineOperationType": (()=>determineOperationType),
    "isApiModule": (()=>isApiModule),
    "isMoralisError": (()=>isMoralisError),
    "maybe": (()=>maybe),
    "solNetworkNames": (()=>solNetworkNames),
    "toCamel": (()=>toCamel),
    "toCamelCase": (()=>toCamelCase)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$axios$2f$lib$2f$axios$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/axios/lib/axios.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$axios$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/axios/index.js [app-client] (ecmascript) <locals>");
;
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
function __generator(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}
var ModuleType;
(function(ModuleType) {
    ModuleType["API"] = "api";
    ModuleType["DEFAULT"] = "default";
})(ModuleType || (ModuleType = {}));
/**
 * Verify if the provided class is a api type.
 * Should be used as a Typescript type-guard
 *
 * @example
 * ```
 * if(isApiModule(module)){
 *  // module is types as ApiModule here
 * }
 * ```
 */ var isApiModule = function(moralisClass) {
    if (moralisClass.type === ModuleType.API) {
        return true;
    }
    return false;
};
var CoreErrorCode;
(function(CoreErrorCode) {
    // Generic Core error
    CoreErrorCode["GENERIC_CORE_ERROR"] = "C0001";
    // A module wants to register with a name that already is registered
    CoreErrorCode["DUPLICATE_MODULE"] = "C0002";
    // The module is not registered
    CoreErrorCode["MODULE_NOT_FOUND"] = "C0003";
    // Error in validation check
    CoreErrorCode["VALIDATION_ERROR"] = "C0004";
    CoreErrorCode["INVALID_ARGUMENT"] = "C0005";
    CoreErrorCode["REQUEST_ERROR"] = "C0006";
    CoreErrorCode["NO_DATA_FOUND"] = "C0007";
    CoreErrorCode["NOT_INITIALIZED"] = "C0008";
    CoreErrorCode["ALREADY_INITIALIZED"] = "C0009";
    CoreErrorCode["METHOD_FAILED"] = "C0010";
    CoreErrorCode["STATE_MACHINE_STARTED"] = "C0011";
    CoreErrorCode["STATE_MACHINE_NOT_STARTED"] = "C0012";
    CoreErrorCode["CONFIG_KEY_NOT_EXIST"] = "C0013";
    CoreErrorCode["CONFIG_INVALID_VALUE"] = "C0014";
    CoreErrorCode["CONFIG_KEY_ALREADY_EXIST"] = "C0015";
    CoreErrorCode["INVALID_DATA"] = "C0016";
    CoreErrorCode["BIG_NUMBER_ERROR"] = "C0500";
    CoreErrorCode["NOT_IMPLEMENTED"] = "C9000";
})(CoreErrorCode || (CoreErrorCode = {}));
var ApiErrorCode;
(function(ApiErrorCode) {
    ApiErrorCode["GENERIC_API_ERROR"] = "A0001";
    ApiErrorCode["PAGE_LIMIT_EXCEEDED"] = "A0002";
    ApiErrorCode["API_KEY_NOT_SET"] = "A0003";
    ApiErrorCode["INVALID_PARAMS"] = "A0004";
    ApiErrorCode["NOT_FOUND"] = "A0404";
    ApiErrorCode["NOT_IMPLEMENTED"] = "A9000";
})(ApiErrorCode || (ApiErrorCode = {}));
var AuthErrorCode;
(function(AuthErrorCode) {
    AuthErrorCode["GENERIC_AUTH_ERROR"] = "U0001";
    AuthErrorCode["INCORRECT_NETWORK"] = "U0002";
    AuthErrorCode["INCORRECT_PARAMETER"] = "U0003";
    AuthErrorCode["NOT_IMPLEMENTED"] = "U9000";
})(AuthErrorCode || (AuthErrorCode = {}));
var StreamErrorCode;
(function(StreamErrorCode) {
    StreamErrorCode["GENERIC_STREAM_ERROR"] = "S0001";
    StreamErrorCode["INCORRECT_NETWORK"] = "S0002";
    StreamErrorCode["INCORRECT_PARAMETER"] = "S0003";
    StreamErrorCode["INVALID_SIGNATURE"] = "S0004";
    StreamErrorCode["NOT_IMPLEMENTED"] = "S9000";
})(StreamErrorCode || (StreamErrorCode = {}));
var MoralisError = function(_super) {
    __extends(MoralisError, _super);
    function MoralisError(_a) {
        var message = _a.message, code = _a.code, details = _a.details, cause = _a.cause;
        var _this = // @ts-ignore Typescript does not recognise 'cause' ? OR we have wrong TS version
        _super.call(this, MoralisError.makeMessage(message, code), {
            cause: cause
        }) || this;
        _this.name = 'Moralis SDK Error';
        _this.isMoralisError = true;
        // Set prototype manually, as required since Typescript 2.2: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#example
        Object.setPrototypeOf(_this, MoralisError.prototype);
        _this.code = code;
        _this.details = details;
        if (cause) {
            _this.cause = cause;
            if ('stack' in cause) {
                _this.stack = "".concat(_this.stack, "\nCAUSE: ").concat(cause.stack);
            }
        }
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, MoralisError);
        }
        return _this;
    }
    MoralisError.makeMessage = function(message, code) {
        return "[".concat(code, "] ").concat(message);
    };
    return MoralisError;
}(Error);
var CoreError = function(_super) {
    __extends(CoreError, _super);
    function CoreError(options) {
        var _this = _super.call(this, options) || this;
        _this.name = 'Moralis SDK Core Error';
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, CoreError);
        }
        return _this;
    }
    return CoreError;
}(MoralisError);
var MoralisApiError = function(_super) {
    __extends(MoralisApiError, _super);
    function MoralisApiError(options) {
        var _this = _super.call(this, options) || this;
        _this.name = 'Moralis SDK API Error';
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, MoralisApiError);
        }
        return _this;
    }
    return MoralisApiError;
}(MoralisError);
var MoralisAuthError = function(_super) {
    __extends(MoralisAuthError, _super);
    function MoralisAuthError(options) {
        var _this = _super.call(this, options) || this;
        _this.name = 'Moralis Auth Error';
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, MoralisAuthError);
        }
        return _this;
    }
    return MoralisAuthError;
}(MoralisError);
var MoralisStreamError = function(_super) {
    __extends(MoralisStreamError, _super);
    function MoralisStreamError(options) {
        var _this = _super.call(this, options) || this;
        _this.name = 'Moralis Stream Error';
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, MoralisStreamError);
        }
        return _this;
    }
    return MoralisStreamError;
}(MoralisError);
var isMoralisError = function(error) {
    if (!(error instanceof Error)) {
        return false;
    }
    if (!error.isMoralisError) {
        return false;
    }
    return true;
};
/**
 * MoralisModues handles all registered modules.
 * Any package that is used in Moralis, should register itself via this class.
 * This allows cross-communication between modules and easy management of the modules
 *
 * This class is responsible for:
 * - registering new modules
 * - removing modules (in theory possible for exotic usecases, but might break the app if done after initialisation)
 * - getting individual modules by name, type or everything
 */ var Modules = function() {
    function Modules() {
        this.modules = new Map();
    }
    /**
     * Register and setup a new module by providing a module that is extended from BaseClass.
     * This will throw an error if the name is not unique
     * @param module the module that needs to be registered
     */ Modules.prototype.register = function(module) {
        if (this.modules.has(module.name)) {
            throw new CoreError({
                code: CoreErrorCode.DUPLICATE_MODULE,
                message: "The module \"".concat(module.name, "\" has already been registered.")
            });
        }
        this.modules.set(module.name, module);
        module.setup();
    };
    /**
     * Returns the module with the given name.
     * This module should have been registered with `register`
     * @param name the module name
     * @returns a valid BaseModule
     * @throws a CoreError if no module with the given name has been registered
     */ Modules.prototype.get = function(name) {
        var module = this.modules.get(name);
        if (!module) {
            throw new CoreError({
                code: CoreErrorCode.MODULE_NOT_FOUND,
                message: "Module \"".concat(name, "\" does not exist.")
            });
        }
        return module;
    };
    /**
     * Tries to return the module with the given name if exist. Otherwise returns null.
     * @param name the module name
     * @returns a valid BaseModule or null
     */ Modules.prototype.tryGet = function(name) {
        return this.modules.get(name) || null;
    };
    Modules.prototype.has = function(name) {
        return this.modules.has(name);
    };
    /**
     * Returns the network module with the provided name.
     * @param name the module name
     * @returns a valid ApiModule
     * @throws a CoreError if no network module with the given name has been registered
     */ Modules.prototype.getApi = function(name) {
        var module = this.modules.get(name);
        if (!module || !isApiModule(module)) {
            throw new CoreError({
                code: CoreErrorCode.MODULE_NOT_FOUND,
                message: "No ApiModule found with the name \"".concat(name, "\"")
            });
        }
        return module;
    };
    /**
     * Remove the module with the provided name, if it has been registered,
     * @param name the module name
     * @throws a CoreError if the module cannot be found.
     */ Modules.prototype.remove = function(name) {
        var isRemoved = this.modules.delete(name);
        if (!isRemoved) {
            throw new CoreError({
                code: CoreErrorCode.MODULE_NOT_FOUND,
                message: "Module \"".concat(name, "\" does not exist.")
            });
        }
    };
    /**
     * List all the registered modules
     * @returns an array of BaseModule that have been registered
     */ Modules.prototype.list = function() {
        return Array.from(this.modules.values());
    };
    /**
     * Returns the names of all registered modules
     */ Modules.prototype.listNames = function() {
        return this.list().map(function(module) {
            return module.name;
        });
    };
    /**
     * List all the registered api modules (eg. modules with the type CoreModuleType.API)
     */ Modules.prototype.listApis = function() {
        return this.list().filter(isApiModule);
    };
    return Modules;
}();
var CoreConfig = {
    logLevel: {
        name: 'logLevel',
        defaultValue: 'info'
    },
    buidEnvironment: {
        name: 'buidEnvironment',
        defaultValue: 'browser'
    },
    defaultNetwork: {
        name: 'defaultNetwork',
        defaultValue: 'Evm'
    },
    product: {
        name: 'product',
        defaultValue: undefined
    },
    /**
     * @description Maximal number of request retries.
     */ maxRetries: {
        name: 'maxRetries',
        defaultValue: 2
    }
};
/* eslint-disable no-console */ var logLevelMap = {
    verbose: 5,
    debug: 4,
    info: 3,
    warning: 2,
    error: 1,
    off: 0
};
/**
 * LoggerController, responsible to create log messages for each module.
 * It should be created with the name of the module like `new Logger('module-name')`
 * It will then prefix any logs with that module-name for easy debugging
 * It will show only logs up to the specified `logLevel` in the MoralisConfig
 */ var LoggerController = function() {
    function LoggerController(moduleName, config) {
        this.moduleName = moduleName;
        this.config = config;
    }
    LoggerController.create = function(moduleName, core) {
        return new LoggerController(moduleName, core.config);
    };
    Object.defineProperty(LoggerController.prototype, "level", {
        get: function() {
            return this.config.get(CoreConfig.logLevel);
        },
        enumerable: false,
        configurable: true
    });
    LoggerController.prototype._transport = function(level, message, details) {
        var logMessage = this._makeLogMessage(message);
        var args = [
            logMessage,
            details
        ].filter(function(arg) {
            return arg != null;
        });
        switch(level){
            case 'error':
                console.error.apply(console, args);
                break;
            case 'warn':
                console.warn.apply(console, args);
                break;
            case 'log':
                console.log.apply(console, args);
                break;
        }
    };
    LoggerController.prototype._shouldLog = function(logLevel) {
        var level = logLevelMap[logLevel];
        var acceptedLevel = logLevelMap[this.level];
        if (level > acceptedLevel) {
            return false;
        }
        return true;
    };
    LoggerController.prototype._makeLogMessage = function(message) {
        return "Moralis[".concat(this.moduleName, "]: ").concat(message);
    };
    LoggerController.prototype.error = function(error, details) {
        if (!this._shouldLog('error')) {
            return;
        }
        var message = '';
        if (typeof error === 'string') {
            message = error;
        } else if (isMoralisError(error)) {
            message = error.message;
            if (error.details) {
                if (details) {
                    details._errorDetails = error.details;
                } else {
                    details = {
                        _errorDetails: error.details
                    };
                }
            }
        } else {
            message = error.message;
        }
        this._transport('error', message, details);
    };
    LoggerController.prototype.warn = function(message, details) {
        if (!this._shouldLog('warning')) {
            return;
        }
        this._transport('warn', message, details);
    };
    LoggerController.prototype.info = function(message, details) {
        if (!this._shouldLog('info')) {
            return;
        }
        this._transport('log', message, details);
    };
    LoggerController.prototype.debug = function(message, details) {
        if (!this._shouldLog('debug')) {
            return;
        }
        this._transport('log', message, details);
    };
    LoggerController.prototype.verbose = function(message, details) {
        if (!this._shouldLog('verbose')) {
            return;
        }
        this._transport('log', message, details);
    };
    return LoggerController;
}();
var Config = function() {
    function Config() {
        this.items = new Map();
    }
    Config.prototype.registerKey = function(key, validator) {
        if (this.items.has(key.name)) {
            throw new CoreError({
                code: CoreErrorCode.CONFIG_KEY_ALREADY_EXIST,
                message: "Key \"".concat(key.name, "\" is already registered")
            });
        }
        this.items.set(key.name, {
            key: key,
            value: key.defaultValue,
            validator: validator
        });
    };
    Config.prototype.getKeys = function() {
        return Array.from(this.items.keys());
    };
    Config.prototype.hasKey = function(key) {
        return this.items.has(key.name);
    };
    Config.prototype.get = function(keyOrName) {
        return this.getItem(keyOrName).value;
    };
    Config.prototype.set = function(keyOrName, value) {
        var item = this.getItem(keyOrName);
        var error = item.validator ? item.validator(value) : null;
        if (error) {
            throw new CoreError({
                code: CoreErrorCode.CONFIG_INVALID_VALUE,
                message: "Cannot set this config. Invalid value for \"".concat(item.key.name, "\". ").concat(error)
            });
        }
        item.value = value;
    };
    Config.prototype.merge = function(values) {
        var _this = this;
        Object.keys(values).forEach(function(keyName) {
            _this.set(keyName, values[keyName]);
        });
    };
    Config.prototype.reset = function() {
        this.items.forEach(function(item) {
            item.value = item.key.defaultValue;
        });
    };
    Config.prototype.getItem = function(keyOrName) {
        var keyName = typeof keyOrName === 'string' ? keyOrName : keyOrName.name;
        var item = this.items.get(keyName);
        if (!item) {
            // This error occurs when a user tries to set a value for a specific key, but the key is not registered.
            // That situation may occur, when a moralis module is not registered (all keys are registered in the module setup step).
            // If you have this error, you should fix your code. Firstly, you should register all modules, later you can modify the configuration.
            throw new CoreError({
                code: CoreErrorCode.CONFIG_KEY_NOT_EXIST,
                message: "Key \"".concat(keyName, "\" is unregistered. Have you registered all required modules?")
            });
        }
        return item;
    };
    return Config;
}();
var CoreConfigSetup = function() {
    function CoreConfigSetup() {}
    CoreConfigSetup.register = function(config) {
        config.registerKey(CoreConfig.logLevel);
        config.registerKey(CoreConfig.buidEnvironment);
        config.registerKey(CoreConfig.defaultNetwork);
        config.registerKey(CoreConfig.product);
        config.registerKey(CoreConfig.maxRetries);
    };
    return CoreConfigSetup;
}();
var LIB_VERSION = "2.27.2";
/**
 * The MoralisData class represents the value of a native currency (like ETH, SOL, BNB etc.)
 *
 * @internal
 * @category DataType
 */ var MoralisData = function() {
    function MoralisData() {}
    return MoralisData;
}();
var MoralisDataObject = function(_super) {
    __extends(MoralisDataObject, _super);
    function MoralisDataObject() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MoralisDataObject;
}(MoralisData);
var BigNumberFormatter = function() {
    function BigNumberFormatter() {}
    BigNumberFormatter.toDecimal = function(value, decimals) {
        if (decimals < 0) {
            throw new CoreError({
                code: CoreErrorCode.BIG_NUMBER_ERROR,
                message: 'Invalid decimals'
            });
        }
        var result = value.toString();
        if (decimals === 0) {
            return result;
        }
        var isNegative = result.startsWith('-');
        if (isNegative) {
            result = result.substring(1);
        }
        result = result.padStart(decimals, '0');
        var dot = result.length - decimals;
        var whole = dot === 0 ? '0' : result.substring(0, dot);
        var fraction = result.substring(dot);
        result = "".concat(whole, ".").concat(fraction);
        while(result[result.length - 1] === '0' && result[result.length - 2] !== '.'){
            result = result.substring(0, result.length - 1);
        }
        if (isNegative) {
            result = "-".concat(result);
        }
        return result;
    };
    BigNumberFormatter.toHex = function(value) {
        var result = value.toString(16);
        var isNegative = result.startsWith('-');
        if (isNegative) {
            result = result.substring(1);
        }
        if (result.length % 2 !== 0) {
            result = "0".concat(result);
        }
        result = "0x".concat(result);
        if (isNegative) {
            result = "-".concat(result);
        }
        return result;
    };
    return BigNumberFormatter;
}();
var BigNumberParser = function() {
    function BigNumberParser() {}
    BigNumberParser.parseInt = function(value) {
        assertNotEmpty(value);
        if (typeof value === 'string') {
            if (value.length === 0) {
                throw createError('Value is empty');
            }
            var isNegativeHex = value.startsWith('-0x');
            if (isNegativeHex) {
                value = value.substring(1);
            }
            var result = BigInt(value);
            if (isNegativeHex) {
                result *= BigInt(-1);
            }
            return result;
        }
        return BigInt(value);
    };
    // TODO: refactor to reduce complexity
    // eslint-disable-next-line complexity
    BigNumberParser.parseDecimal = function(value, decimals) {
        assertNotEmpty(value);
        var multiplier = getMultiplier(decimals);
        if (typeof value === 'number') {
            return BigInt(value) * multiplier;
        }
        if (typeof value === 'bigint') {
            return value * multiplier;
        }
        var isNegative = value.startsWith('-');
        if (isNegative) {
            value = value.substring(1);
        }
        var fragments = value.split('.');
        if (fragments.length > 2) {
            throw createError('Value has more than one dot');
        }
        if (fragments.some(function(fragment) {
            return !fragment;
        })) {
            throw createError('Value has empty fragments');
        }
        var result;
        if (fragments.length === 1) {
            result = BigInt(fragments[0]) * multiplier;
        } else {
            var whole = fragments[0];
            var fraction = fragments[1];
            if (fraction.length > decimals) {
                throw createError("Value has too long fractional part: ".concat(fraction.length, ", max: ").concat(decimals));
            }
            if (fraction.length < decimals) {
                fraction = fraction.padEnd(decimals, '0');
            }
            result = BigInt(whole) * multiplier + BigInt(fraction);
        }
        if (isNegative) {
            result *= BigInt(-1);
        }
        return result;
    };
    return BigNumberParser;
}();
function assertNotEmpty(value) {
    if (value === null) {
        throw createError('Value is null');
    }
    if (value === undefined) {
        throw createError('Value is undefined');
    }
}
function getMultiplier(decimals) {
    if (decimals < 0) {
        throw createError('Invalid decimals');
    }
    // decimals = 0, multiplier = 1
    // decimals = 1, multiplier = 10
    // decimals = 2, multiplier = 100
    // ...
    var ten = BigInt(10);
    var multiplier = BigInt(1);
    while(decimals-- > 0){
        multiplier *= ten;
    }
    return multiplier;
}
function createError(message) {
    return new CoreError({
        code: CoreErrorCode.BIG_NUMBER_ERROR,
        message: message
    });
}
/**
 * The BigNumber class is a MoralisData that references to a the value of a BigNumber
 *
 * @category DataType
 */ var BigNumber = function() {
    function BigNumber(value) {
        this.value = value;
    }
    /**
     * Create a new instance of BigNumber from any valid address input.
     *
     * @param value - the BigNumberish type
     * @example BigNumber.create(12);
     * @example BigNumber.create("20");
     * @returns a new BigNumber instance
     */ BigNumber.create = function(value) {
        if (value instanceof BigNumber) {
            return value;
        }
        return new BigNumber(BigNumberParser.parseInt(value));
    };
    BigNumber.fromJSON = function(json) {
        return BigNumber.create(json);
    };
    /**
     * Creates a new BigNumber from given decimals.
     * @param value
     * @param decimals - This is optional and defaults to 0
     * @example BigNumber.fromDecimal("1.23456789", 18);
     */ BigNumber.fromDecimal = function(value, decimals) {
        if (decimals === void 0) {
            decimals = 0;
        }
        return new BigNumber(BigNumberParser.parseDecimal(value, decimals));
    };
    /**
     * @returns the value of this BigNumber as a BigInt
     * @example BigNumber.create(12).toBigInt();
     */ BigNumber.prototype.toBigInt = function() {
        return this.value;
    };
    /**
     * Adds a BigNumber to current BigNumber instance.
     * @param value - the BigNumberish to add
     * @returns the result of the addition
     * @example BigNumber.create(12).add(7);
     * @example BigNumber.create(12).add("1000000000000000000");
     */ BigNumber.prototype.add = function(value) {
        return new BigNumber(this.value + asBigInt(value));
    };
    /**
     * Subtracts a BigNumber from current BigNumber instance.
     * @param value - the BigNumberish to subtract
     * @returns the result of the subtraction
     * @example BigNumber.create(12).sub(7);
     * @example BigNumber.create("1000000000000000000").sub(20);
     */ BigNumber.prototype.sub = function(value) {
        return new BigNumber(this.value - asBigInt(value));
    };
    /**
     * Multiplies a BigNumber with current BigNumber instance.
     * @param value - the BigNumberish to multiply
     * @returns the result of the multiplication
     * @example BigNumber.create(12).mul(7);
     * @example BigNumber.create(12).mul("1000000000000000000");
     */ BigNumber.prototype.mul = function(value) {
        return new BigNumber(this.value * asBigInt(value));
    };
    /**
     * Divides a BigNumber with current BigNumber instance.
     * @param value - the BigNumberish to divide
     * @returns the result of the division
     * @example BigNumber.create(12).div(7);
     * @example BigNumber.create(1).div("1000000000000000000");
     */ BigNumber.prototype.div = function(value) {
        return new BigNumber(this.value / asBigInt(value));
    };
    /**
     * Checks the equality of the current BigNumber with another BigNumber.
     * @param value - the BigNumberish to compare
     * @returns true if the BigNumbers are equal
     * @example BigNumber.create(12).equals(BigNumber.create(12)); // true
     */ BigNumber.prototype.equals = function(value) {
        return this.value === value.toBigInt();
    };
    /**
     * Converts BigNumber instance to value in given decimals.
     * @param decimals - The decimals to convert to
     * @example BigNumber.create(12).toDecimal(18);
     */ BigNumber.prototype.toDecimal = function(decimals) {
        return BigNumberFormatter.toDecimal(this.value, decimals);
    };
    /**
     * Converts BigNumber instance to string.
     * @example BigNumber.create(12).toString();
     */ BigNumber.prototype.toString = function() {
        return this.value.toString();
    };
    /**
     * Converts BigNumber instance to hex string.
     * @example BigNumber.create(12).toHex();
     */ BigNumber.prototype.toHex = function() {
        return BigNumberFormatter.toHex(this.value);
    };
    /**
     * Converts BigNumber instance to hex string.
     * @example BigNumber.create(12).toJSON();
     */ BigNumber.prototype.toJSON = function() {
        return this.toHex();
    };
    return BigNumber;
}();
function asBigInt(value) {
    return BigNumber.create(value).toBigInt();
}
var dateInputToDate = function(value) {
    return typeof value === 'string' ? new Date(value) : value;
};
/**
 * Core is used in all Moralis applications
 * This class is **required** to be implemented in every app
 *
 * This class is responsible for:
 * - registering, removing and accessing modules
 * - accessing and changing the config
 */ var Core = function() {
    function Core(modules, config, logger) {
        var _this = this;
        this.modules = modules;
        this.config = config;
        this.logger = logger;
        this.name = Core.moduleName;
        this._isStarted = false;
        /**
         * Register all specified modules and configurations
         * @params array of all modules (any module that is extended from BaseModule) that you want to include
         */ this.registerModules = function(modules) {
            modules.forEach(_this.registerModule);
        };
        /**
         * Register a new module
         */ this.registerModule = function(module) {
            if ('create' in module) {
                module = module.create(_this);
            }
            _this.modules.register(module);
            _this.logger.verbose('Module registered', {
                module: module.name
            });
        };
        this.getModule = function(name) {
            return _this.modules.get(name);
        };
        /**
         * Start all modules, this function should be called before any interaction with a module,
         * as it is responsible for initialising the modules.
         *
         * This will call `start()` on every registered module
         */ this.start = function(providedConfig) {
            return __awaiter(_this, void 0, void 0, function() {
                var allModules;
                return __generator(this, function(_a) {
                    switch(_a.label){
                        case 0:
                            if (this._isStarted) {
                                throw new MoralisError({
                                    message: 'Modules are started already. This method should be called only one time.',
                                    code: CoreErrorCode.ALREADY_INITIALIZED
                                });
                            }
                            this._isStarted = true;
                            allModules = this.modules.list();
                            if (providedConfig) {
                                this.config.merge(providedConfig);
                            }
                            this.logger.verbose('Starting all registered modules', {
                                moduleNames: this.modules.listNames()
                            });
                            return [
                                4 /*yield*/ ,
                                Promise.all(allModules.map(function(module) {
                                    return module.start();
                                }))
                            ];
                        case 1:
                            _a.sent();
                            this.logger.verbose('Finished starting all registered modules', {
                                moduleNames: this.modules.listNames()
                            });
                            return [
                                2 /*return*/ 
                            ];
                    }
                });
            });
        };
    }
    Core.create = function() {
        var modules = new Modules();
        var config = new Config();
        var logger = new LoggerController(Core.moduleName, config);
        var core = new Core(modules, config, logger);
        CoreConfigSetup.register(config);
        return core;
    };
    Object.defineProperty(Core.prototype, "isStarted", {
        get: function() {
            return this._isStarted;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Core.prototype, "BigNumber", {
        get: function() {
            return BigNumber;
        },
        enumerable: false,
        configurable: true
    });
    Core.moduleName = 'core';
    Core.libVersion = LIB_VERSION;
    return Core;
}();
var CoreProvider = function() {
    function CoreProvider() {}
    CoreProvider.getDefault = function() {
        if (!this.core) {
            throw new CoreError({
                code: CoreErrorCode.NOT_INITIALIZED,
                message: 'Default instance of Core is not set'
            });
        }
        return this.core;
    };
    CoreProvider.setDefault = function(core) {
        if (this.core) {
            throw new CoreError({
                code: CoreErrorCode.ALREADY_INITIALIZED,
                message: 'Default instance of Core is already set'
            });
        }
        this.core = core;
    };
    return CoreProvider;
}();
/**
 * The base class of every Moralis class that gets registered as a module via MoralisModules
 * It should always be created with:
 * - `name`: name of the module (should be unique)
 * - `core`: the Core instance
 * - `type`: (optional) CoreModuleType, defaults to CoreModuleType.DEFAULT
 *
 * When creating an api, or network module, you should use the ApiModule or NetworkModule
 */ // eslint-disable-next-line @typescript-eslint/no-explicit-any
var Module = function() {
    function Module(name, core, type) {
        if (type === void 0) {
            type = ModuleType.DEFAULT;
        }
        this.name = name;
        this.core = core;
        this.type = type;
        this.logger = LoggerController.create(this.name, this.core);
    }
    /**
     * Any cleanup that needs to be done for removing this module.
     * It also should remove the module via `this.core.modules.remove(this.name)`
     */ Module.prototype.cleanUp = function() {
        this.core.modules.remove(this.name);
    };
    return Module;
}();
/**
 * The base class of every Moralis Api class that gets registered as a module via MoralisModules
 * It should always be created with:
 * - `name`: name of the module (should be unique)
 * - `core`: the Core instance
 * - `baseUrlProvider`: the provider of the base URL.
 */ // eslint-disable-next-line @typescript-eslint/no-explicit-any
var ApiModule = function(_super) {
    __extends(ApiModule, _super);
    function ApiModule(name, core, baseUrlProvider) {
        var _this = _super.call(this, name, core, ModuleType.API) || this;
        _this.baseUrlProvider = baseUrlProvider;
        return _this;
    }
    Object.defineProperty(ApiModule.prototype, "baseUrl", {
        /**
         * @description The base URL of the API.
         */ get: function() {
            if (!this._baseUrl) {
                this._baseUrl = this.baseUrlProvider();
            }
            return this._baseUrl;
        },
        enumerable: false,
        configurable: true
    });
    return ApiModule;
}(Module);
/**
 * Note this is just an interface, used in the core config.
 * The implementations are located in the @moralisweb3/common-sol-utils package.
 */ var solNetworkNames = [
    'mainnet',
    'devnet'
];
var UnreachableError = new CoreError({
    code: CoreErrorCode.GENERIC_CORE_ERROR,
    message: "Incorrect type provided, code should not reach here"
});
/**
 * Typesafe check, to make sure that code never reaches a certain point.
 * Can be used as an exhaustive check in swtich/if-else statements
 *
 * When used properly with Typescript, this code should never reach, as it is typed as 'never'
 *
 * If the code does reach this assertion an UnreachableError is thrown
 */ // eslint-disable-next-line @typescript-eslint/no-unused-vars
var assertUnreachable = function(x) {
    throw UnreachableError;
};
var AxiosRetry = function() {
    function AxiosRetry() {}
    // TODO: refactor to reduce complexity
    // eslint-disable-next-line complexity
    AxiosRetry.request = function(retryConfig, requestConfig) {
        var _a;
        return __awaiter(this, void 0, void 0, function() {
            var attempt, response, e_1, axiosError;
            return __generator(this, function(_b) {
                switch(_b.label){
                    case 0:
                        attempt = 1;
                        _b.label = 1;
                    case 1:
                        _b.trys.push([
                            1,
                            3,
                            ,
                            4
                        ]);
                        return [
                            4 /*yield*/ ,
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$axios$2f$lib$2f$axios$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].request(requestConfig)
                        ];
                    case 2:
                        response = _b.sent();
                        return [
                            2 /*return*/ ,
                            response
                        ];
                    case 3:
                        e_1 = _b.sent();
                        if (attempt >= retryConfig.maxRetries) {
                            throw e_1;
                        }
                        if (!requestConfig.method || !retryConfig.allowedMethods.includes(requestConfig.method.toUpperCase())) {
                            throw e_1;
                        }
                        if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$axios$2f$lib$2f$axios$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].isAxiosError(e_1)) {
                            throw e_1;
                        }
                        axiosError = e_1;
                        if (!((_a = axiosError.response) === null || _a === void 0 ? void 0 : _a.status) || !retryConfig.allowedResponseStatuses.includes(axiosError.response.status)) {
                            throw e_1;
                        }
                        if (retryConfig.beforeRetry) {
                            retryConfig.beforeRetry(attempt, axiosError);
                        }
                        return [
                            3 /*break*/ ,
                            4
                        ];
                    case 4:
                        attempt++;
                        return [
                            3 /*break*/ ,
                            1
                        ];
                    case 5:
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    return AxiosRetry;
}();
/**
 * Verify if the error is an AxiosError that is caused by a HTTP API error.
 */ var isApiRequestError = function(error) {
    // Check if the error is an axios error
    if (!(error instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$axios$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["AxiosError"])) {
        return false;
    }
    // Check if the error is a result of a 400 or 500 response
    if (error.code !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$axios$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["AxiosError"].ERR_BAD_REQUEST && error.code !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$axios$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["AxiosError"].ERR_BAD_RESPONSE) {
        return false;
    }
    return true;
};
/**
 * Extract the message from a ApiRequestError. Note that this is implemented based on how the Moralis APIs return Errors.
 * This can be in the form:
 * - { message: 'some message' }
 * - { message: ['some message', 'some other message'] }
 * - { }
 */ var getMessageFromApiRequestError = function(error) {
    var _a = error.response.data, message = _a.message, details = _a.details;
    var result = 'Unknown error (no error info returned from API)';
    if (Array.isArray(message)) {
        result = message.join(', ');
    } else if (typeof message === 'string') {
        result = message;
    }
    if (details) {
        result += " ".concat(JSON.stringify(details));
    }
    return result;
};
/**
 * A controller responsible to handle all requests in Moralis,
 * compatible with browser, nodejJs and react-native
 */ var RequestController = function() {
    function RequestController(config, logger) {
        this.config = config;
        this.logger = logger;
    }
    RequestController.create = function(core) {
        return new RequestController(core.config, core.logger);
    };
    RequestController.prototype.request = function(config) {
        return __awaiter(this, void 0, void 0, function() {
            var maxRetries, retryConfig, response, e_1, error;
            var _this = this;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        this.logger.verbose('[RequestController] request started', {
                            url: config.url,
                            method: config.method,
                            body: config.data
                        });
                        maxRetries = this.config.get(CoreConfig.maxRetries);
                        retryConfig = {
                            maxRetries: maxRetries,
                            allowedMethods: [
                                'GET',
                                'OPTIONS'
                            ],
                            allowedResponseStatuses: [
                                408,
                                413,
                                429,
                                500,
                                502,
                                503,
                                504
                            ],
                            beforeRetry: function(attempt, error) {
                                _this.logger.verbose('[RequestController] request retry', {
                                    url: config.url,
                                    method: config.method,
                                    body: config.data,
                                    error: error,
                                    attempt: attempt
                                });
                            }
                        };
                        _a.label = 1;
                    case 1:
                        _a.trys.push([
                            1,
                            3,
                            ,
                            4
                        ]);
                        return [
                            4 /*yield*/ ,
                            AxiosRetry.request(retryConfig, __assign(__assign({}, config), {
                                timeout: 20000,
                                maxContentLength: Infinity,
                                maxBodyLength: Infinity
                            }))
                        ];
                    case 2:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            response.data
                        ];
                    case 3:
                        e_1 = _a.sent();
                        error = this.makeError(e_1);
                        this.logger.verbose('[RequestController] request error', {
                            url: config.url,
                            method: config.method,
                            body: config.data,
                            cause: error.cause,
                            name: error.name,
                            details: error.details
                        });
                        throw error;
                    case 4:
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    RequestController.prototype.makeError = function(error) {
        if (isApiRequestError(error)) {
            var _a = error.response, status_1 = _a.status, statusText = _a.statusText;
            var apiMessage = getMessageFromApiRequestError(error);
            return new CoreError({
                code: CoreErrorCode.REQUEST_ERROR,
                message: "Request failed, ".concat(statusText, "(").concat(status_1, "): ").concat(apiMessage),
                cause: error,
                details: {
                    status: status_1,
                    response: error.response
                }
            });
        }
        var err = error instanceof Error ? error : new Error("".concat(error));
        return new CoreError({
            code: CoreErrorCode.REQUEST_ERROR,
            message: "Request failed: ".concat(err.message),
            cause: err
        });
    };
    RequestController.prototype.post = function(url, searchParams, body, options, abortSignal) {
        return this.request({
            url: url,
            params: searchParams,
            method: 'POST',
            data: body,
            headers: options === null || options === void 0 ? void 0 : options.headers,
            signal: abortSignal
        });
    };
    RequestController.prototype.put = function(url, searchParams, body, options, abortSignal) {
        return this.request({
            url: url,
            params: searchParams,
            method: 'PUT',
            data: body,
            headers: options === null || options === void 0 ? void 0 : options.headers,
            signal: abortSignal
        });
    };
    RequestController.prototype.get = function(url, searchParams, options, abortSignal) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                return [
                    2 /*return*/ ,
                    this.request({
                        url: url,
                        params: searchParams,
                        method: 'GET',
                        headers: options === null || options === void 0 ? void 0 : options.headers,
                        signal: abortSignal
                    })
                ];
            });
        });
    };
    RequestController.prototype.delete = function(url, searchParams, body, options, abortSignal) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                return [
                    2 /*return*/ ,
                    this.request({
                        url: url,
                        params: searchParams,
                        method: 'DELETE',
                        data: body,
                        headers: options === null || options === void 0 ? void 0 : options.headers,
                        signal: abortSignal
                    })
                ];
            });
        });
    };
    return RequestController;
}();
var OperationRequestValidator = function() {
    function OperationRequestValidator(operation) {
        this.allParamNames = __spreadArray(__spreadArray(__spreadArray([], operation.urlPathParamNames || [], true), operation.urlSearchParamNames || [], true), operation.bodyParamNames || [], true);
    }
    OperationRequestValidator.prototype.validate = function(request) {
        var requestParamNames = Object.keys(request);
        for(var _i = 0, requestParamNames_1 = requestParamNames; _i < requestParamNames_1.length; _i++){
            var paramName = requestParamNames_1[_i];
            if (!this.allParamNames.includes(paramName)) {
                var allParamsNames = this.allParamNames.join(', ');
                throw new MoralisError({
                    code: CoreErrorCode.INVALID_ARGUMENT,
                    message: "Request contains unknown parameter: ".concat(paramName, ". This operation supports the following parameters: ").concat(allParamsNames)
                });
            }
        }
    };
    return OperationRequestValidator;
}();
var OperationType;
(function(OperationType) {
    OperationType["NON_NULLABLE"] = "nonNullable";
    OperationType["NULLABLE"] = "nullable";
    OperationType["PAGINATED"] = "paginated";
})(OperationType || (OperationType = {}));
function determineOperationType(operation) {
    if (operation.firstPageIndex === 0 || operation.firstPageIndex === 1) {
        return OperationType.PAGINATED;
    }
    if (operation.isNullable) {
        return OperationType.NULLABLE;
    }
    return OperationType.NON_NULLABLE;
}
var NextPaginatedRequestResolver = function() {
    function NextPaginatedRequestResolver() {}
    NextPaginatedRequestResolver.resolve = function(firstPageIndex, request, pagination) {
        if (pagination.cursor) {
            return __assign(__assign({}, request), {
                cursor: pagination.cursor
            });
        }
        if (typeof pagination.total === 'number') {
            var currentPage = firstPageIndex === 1 ? pagination.page : pagination.page + 1;
            var hasNextPage = pagination.total > pagination.pageSize * currentPage;
            if (hasNextPage) {
                var offset = (pagination.page + 1) * (request.limit || 500);
                return __assign(__assign({}, request), {
                    offset: offset
                });
            }
        }
        return null;
    };
    return NextPaginatedRequestResolver;
}();
var PaginationReader = function() {
    function PaginationReader() {}
    PaginationReader.read = function(jsonResponse) {
        var _a, _b;
        return {
            page: (_a = jsonResponse.page) !== null && _a !== void 0 ? _a : 0,
            pageSize: (_b = jsonResponse.page_size) !== null && _b !== void 0 ? _b : 0,
            total: jsonResponse.total,
            cursor: jsonResponse.cursor
        };
    };
    return PaginationReader;
}();
var ResponseAdapter = function() {
    function ResponseAdapter(jsonResponse, getResponse) {
        this.jsonResponse = jsonResponse;
        this.getResponse = getResponse;
    }
    Object.defineProperty(ResponseAdapter.prototype, "result", {
        get: function() {
            return this.getResponse();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ResponseAdapter.prototype, "raw", {
        get: function() {
            return this.jsonResponse;
        },
        enumerable: false,
        configurable: true
    });
    ResponseAdapter.prototype.toJSON = function() {
        return this.jsonResponse;
    };
    return ResponseAdapter;
}();
var PaginatedResponseAdapter = function() {
    function PaginatedResponseAdapter(pagination, jsonResponse, getResult, nextHandler) {
        var _this = this;
        this.pagination = pagination;
        this.jsonResponse = jsonResponse;
        this.getResult = getResult;
        this.nextHandler = nextHandler;
        this.hasNext = function() {
            return !!_this.nextHandler;
        };
        this.next = function() {
            if (!_this.nextHandler) {
                throw new MoralisError({
                    code: CoreErrorCode.NO_DATA_FOUND,
                    message: 'Page limit exceeded! Before call this method check an existence of the next page by .hasNext() method.'
                });
            }
            return _this.nextHandler();
        };
    }
    Object.defineProperty(PaginatedResponseAdapter.prototype, "result", {
        get: function() {
            return this.getResult();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PaginatedResponseAdapter.prototype, "raw", {
        get: function() {
            return this.jsonResponse;
        },
        enumerable: false,
        configurable: true
    });
    PaginatedResponseAdapter.prototype.toJSON = function() {
        return this.jsonResponse;
    };
    return PaginatedResponseAdapter;
}();
var toCamel = function(value) {
    return value.replace(/([-_][a-z])/gi, function($1) {
        return $1.toUpperCase().replace('-', '').replace('_', '');
    });
};
var isObject = function(o) {
    return o === Object(o) && !Array.isArray(o) && typeof o !== 'function';
};
var toCamelCase = function(data) {
    if (isObject(data)) {
        var n_1 = {};
        Object.keys(data).forEach(function(k) {
            // @ts-ignore TODO: fix typing
            n_1[toCamel(k)] = toCamelCase(data[k]);
        });
        return n_1;
    }
    if (Array.isArray(data)) {
        // @ts-ignore TODO: difficult to type with recursive arrays
        return data.map(function(i) {
            return toCamelCase(i);
        });
    }
    return data;
};
function maybe(value, transform) {
    if (value == null) {
        return undefined;
    }
    if (transform) {
        return transform(value);
    }
    return value;
}
;
}}),
"[project]/node_modules/@moralisweb3/api-utils/lib/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ApiUtils": (()=>ApiUtils),
    "ApiUtilsConfig": (()=>ApiUtilsConfig),
    "NullableOperationResolver": (()=>NullableOperationResolver),
    "OperationResolver": (()=>OperationResolver),
    "OperationV3Resolver": (()=>OperationV3Resolver),
    "PaginatedOperationResolver": (()=>PaginatedOperationResolver),
    "PaginatedOperationV3Resolver": (()=>PaginatedOperationV3Resolver),
    "PaginatedResponseV3Adapter": (()=>PaginatedResponseV3Adapter),
    "convertOperationToDescriptor": (()=>convertOperationToDescriptor),
    "getSdkDetailsHeaders": (()=>getSdkDetailsHeaders)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-core/lib/esm/index.js [app-client] (ecmascript)");
;
var ApiUtilsConfig = {
    apiKey: {
        name: 'apiKey',
        defaultValue: null
    }
};
// TODO: we need to delete this file when this function will be not used.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function convertOperationToDescriptor(operation) {
    return {
        name: operation.name,
        method: operation.method.toLowerCase(),
        bodyParamNames: operation.bodyParamNames || [],
        urlPattern: operation.urlPathPattern,
        urlPatternParamNames: operation.urlPathParamNames
    };
}
var _a;
var Environment;
(function(Environment) {
    Environment["BROWSER"] = "browser";
    Environment["NODE"] = "node";
})(Environment || (Environment = {}));
var sdkNameForEnvironment = (_a = {}, _a[Environment.BROWSER] = 'Javascript SDK', _a[Environment.NODE] = 'NodeJS SDK', _a);
var currentEnvironment = getEnvironment();
function detectIsBrowser() {
    try {
        // @ts-ignore
        // eslint-disable-next-line no-undef
        return typeof window !== 'undefined' && typeof window.document !== 'undefined';
    } catch (error) {
        return false;
    }
}
function getEnvironment() {
    if (detectIsBrowser()) {
        return Environment.BROWSER;
    }
    // Otherwise we use NodeJs as default
    // (in theory this will also account for other environments like webworker etc. but we don't support this at the moment)
    return Environment.NODE;
}
/**
 * Gets the platform name, this is the name of the SDK,
 * Note: previously this was always named 'JS SDK', now we separate by environment / package-origin
 */ function getSdkName(environment, product) {
    // If the product is set in the config, we use this as a name, this is done in the SDKs like React/Next etc.
    if (product) {
        return product;
    }
    // Otherwise we use the name based on the environment
    return sdkNameForEnvironment[environment];
}
/**
 * Additional data for the api to specify SDK details of the request
 */ var getSdkDetailsHeaders = function(product) {
    var sdkName = getSdkName(currentEnvironment, product);
    return {
        'x-moralis-platform': sdkName,
        'x-moralis-platform-version': __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Core"].libVersion,
        'x-moralis-build-target': currentEnvironment
    };
};
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
function __generator(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
var OperationRequestBuilder = function() {
    function OperationRequestBuilder(operation, core) {
        this.operation = operation;
        this.core = core;
    }
    OperationRequestBuilder.prototype.prepareUrl = function(baseUrl, request) {
        var _this = this;
        var _a;
        var urlParams = this.operation.getRequestUrlParams(request, this.core);
        var urlPath = this.operation.urlPathPattern;
        for(var _i = 0, _b = (_a = this.operation.urlPathParamNames) !== null && _a !== void 0 ? _a : []; _i < _b.length; _i++){
            var paramName = _b[_i];
            var paramValue = urlParams[paramName];
            if (paramValue === undefined || paramValue === null) {
                throw new Error("Param ".concat(paramName, " is required"));
            }
            urlPath = urlPath.replace("{".concat(paramName, "}"), paramValue);
        }
        var url = "".concat(baseUrl).concat(urlPath);
        var urlSearchParams = {};
        Object.keys(urlParams).filter(function(paramName) {
            var _a;
            return !((_a = _this.operation.urlPathParamNames) === null || _a === void 0 ? void 0 : _a.includes(paramName));
        }).forEach(function(paramName) {
            var paramValue = urlParams[paramName];
            if (paramValue !== undefined && paramValue !== null) {
                urlSearchParams[paramName] = paramValue;
            }
        });
        return {
            url: url,
            urlSearchParams: urlSearchParams
        };
    };
    OperationRequestBuilder.prototype.prepareBody = function(request) {
        if (!this.operation.bodyType && !this.operation.getRequestBody) {
            return undefined;
        }
        if (!this.operation.getRequestBody) {
            throw new Error("getRequestBody is not implemented for operation ".concat(this.operation.name));
        }
        if (!this.operation.bodyParamNames) {
            throw new Error("bodyParamNames are empty for operation ".concat(this.operation.name));
        }
        var body = this.operation.getRequestBody(request, this.core);
        if (this.operation.bodyType === 'properties') {
            return body;
        }
        if (this.operation.bodyType === 'raw') {
            return body;
        }
        throw new Error("Not supported body type: ".concat(this.operation.bodyType));
    };
    OperationRequestBuilder.prototype.prepareHeaders = function() {
        var apiKey = this.core.config.get(ApiUtilsConfig.apiKey);
        var product = this.core.config.get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CoreConfig"].product);
        if (!apiKey) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MoralisApiError"]({
                code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ApiErrorCode"].API_KEY_NOT_SET,
                message: 'apiKey is not set'
            });
        }
        var headers = getSdkDetailsHeaders(product);
        headers['x-api-key'] = apiKey;
        return headers;
    };
    return OperationRequestBuilder;
}();
var OperationResolver = function() {
    function OperationResolver(operation, baseUrl, core) {
        var _this = this;
        this.operation = operation;
        this.baseUrl = baseUrl;
        this.core = core;
        this.requestValidator = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationRequestValidator"](this.operation);
        this.requestBuilder = new OperationRequestBuilder(this.operation, this.core);
        this.requestController = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RequestController"].create(this.core);
        this.fetch = function(request) {
            return __awaiter(_this, void 0, void 0, function() {
                var _a, url, urlSearchParams, body, jsonResponse;
                var _this = this;
                return __generator(this, function(_b) {
                    switch(_b.label){
                        case 0:
                            this.requestValidator.validate(request);
                            _a = this.requestBuilder.prepareUrl(this.baseUrl, request), url = _a.url, urlSearchParams = _a.urlSearchParams;
                            body = this.requestBuilder.prepareBody(request);
                            return [
                                4 /*yield*/ ,
                                this.requestController.request({
                                    method: this.operation.method,
                                    url: url,
                                    params: urlSearchParams,
                                    headers: this.requestBuilder.prepareHeaders(),
                                    data: body
                                })
                            ];
                        case 1:
                            jsonResponse = _b.sent();
                            return [
                                2 /*return*/ ,
                                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ResponseAdapter"](jsonResponse, function() {
                                    return _this.operation.deserializeResponse(jsonResponse, request, _this.core);
                                })
                            ];
                    }
                });
            });
        };
        if (operation.isNullable) {
            throw new Error("Operation ".concat(operation.name, " has invalid value for isNullable property"));
        }
    }
    return OperationResolver;
}();
function isNotFoundError(e) {
    var _a;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isMoralisError"])(e)) {
        if (((_a = e.details) === null || _a === void 0 ? void 0 : _a.status) === 404) {
            return true;
        }
        if (e.code === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ApiErrorCode"].NOT_FOUND) {
            return true;
        }
    }
    return false;
}
var NullableOperationResolver = function() {
    function NullableOperationResolver(operation, baseUrl, core) {
        var _this = this;
        this.operation = operation;
        this.baseUrl = baseUrl;
        this.core = core;
        this.requestValidator = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationRequestValidator"](this.operation);
        this.requestBuilder = new OperationRequestBuilder(this.operation, this.core);
        this.requestController = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RequestController"].create(this.core);
        this.fetch = function(request) {
            return __awaiter(_this, void 0, void 0, function() {
                var result, e_1;
                return __generator(this, function(_a) {
                    switch(_a.label){
                        case 0:
                            this.requestValidator.validate(request);
                            _a.label = 1;
                        case 1:
                            _a.trys.push([
                                1,
                                3,
                                ,
                                4
                            ]);
                            return [
                                4 /*yield*/ ,
                                this._fetch(request)
                            ];
                        case 2:
                            result = _a.sent();
                            // TODO: this block should be deleted after the back-end adjustments.
                            if (!result.raw || typeof result.raw === 'object' && Object.keys(result.raw).length === 0) {
                                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MoralisApiError"]({
                                    code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ApiErrorCode"].NOT_FOUND,
                                    message: 'The resource is not found'
                                });
                            }
                            return [
                                2 /*return*/ ,
                                result
                            ];
                        case 3:
                            e_1 = _a.sent();
                            if (isNotFoundError(e_1)) {
                                return [
                                    2 /*return*/ ,
                                    null
                                ];
                            }
                            throw e_1;
                        case 4:
                            return [
                                2 /*return*/ 
                            ];
                    }
                });
            });
        };
        if (!operation.isNullable) {
            throw new Error("Operation ".concat(operation.name, " has invalid value for isNullable property"));
        }
    }
    NullableOperationResolver.prototype._fetch = function(request) {
        return __awaiter(this, void 0, void 0, function() {
            var _a, url, urlSearchParams, body, jsonResponse;
            var _this = this;
            return __generator(this, function(_b) {
                switch(_b.label){
                    case 0:
                        _a = this.requestBuilder.prepareUrl(this.baseUrl, request), url = _a.url, urlSearchParams = _a.urlSearchParams;
                        body = this.requestBuilder.prepareBody(request);
                        return [
                            4 /*yield*/ ,
                            this.requestController.request({
                                method: this.operation.method,
                                url: url,
                                params: urlSearchParams,
                                headers: this.requestBuilder.prepareHeaders(),
                                data: body
                            })
                        ];
                    case 1:
                        jsonResponse = _b.sent();
                        return [
                            2 /*return*/ ,
                            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ResponseAdapter"](jsonResponse, function() {
                                return _this.operation.deserializeResponse(jsonResponse, request, _this.core);
                            })
                        ];
                }
            });
        });
    };
    return NullableOperationResolver;
}();
var PaginatedOperationResolver = function() {
    function PaginatedOperationResolver(operation, baseUrl, core) {
        var _this = this;
        this.operation = operation;
        this.baseUrl = baseUrl;
        this.core = core;
        this.requestValidator = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationRequestValidator"](this.operation);
        this.requestBuilder = new OperationRequestBuilder(this.operation, this.core);
        this.requestController = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RequestController"].create(this.core);
        this.fetch = function(request) {
            return __awaiter(_this, void 0, void 0, function() {
                var _a, url, urlSearchParams, body, jsonResponse, pagination, nextRequest;
                var _this = this;
                return __generator(this, function(_b) {
                    switch(_b.label){
                        case 0:
                            this.requestValidator.validate(request);
                            _a = this.requestBuilder.prepareUrl(this.baseUrl, request), url = _a.url, urlSearchParams = _a.urlSearchParams;
                            body = this.requestBuilder.prepareBody(request);
                            return [
                                4 /*yield*/ ,
                                this.requestController.request({
                                    method: this.operation.method,
                                    url: url,
                                    params: urlSearchParams,
                                    headers: this.requestBuilder.prepareHeaders(),
                                    data: body
                                })
                            ];
                        case 1:
                            jsonResponse = _b.sent();
                            pagination = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginationReader"].read(jsonResponse);
                            nextRequest = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["NextPaginatedRequestResolver"].resolve(this.operation.firstPageIndex, request, pagination);
                            return [
                                2 /*return*/ ,
                                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedResponseAdapter"](pagination, jsonResponse, function() {
                                    return _this.operation.deserializeResponse(jsonResponse, request, _this.core);
                                }, nextRequest ? function() {
                                    return _this.fetch(nextRequest);
                                } : undefined)
                            ];
                    }
                });
            });
        };
        if (operation.firstPageIndex !== 0 && operation.firstPageIndex !== 1) {
            throw new Error("Operation ".concat(operation.name, " has invalid value for firstPageIndex property"));
        }
    }
    return PaginatedOperationResolver;
}();
var OperationV3Resolver = function() {
    function OperationV3Resolver(operation, baseUrl, core) {
        this.operation = operation;
        this.baseUrl = baseUrl;
        this.core = core;
        this.requestController = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RequestController"].create(this.core);
    }
    OperationV3Resolver.prototype.request = function(request, body) {
        return __awaiter(this, void 0, void 0, function() {
            var urlParamNames, requestJSON, url, searchParams, bodyJSON, responseJson;
            var _this = this;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        urlParamNames = this.operation.parameterNames.filter(function(name) {
                            return _this.operation.routePattern.includes("{".concat(name, "}"));
                        });
                        requestJSON = this.operation.serializeRequest ? this.operation.serializeRequest(request) : {};
                        url = urlParamNames.reduce(function(current, name) {
                            var value = requestJSON[name];
                            current = current.replace("{".concat(name, "}"), String(value));
                            return current;
                        }, this.operation.routePattern);
                        searchParams = this.operation.parameterNames.filter(function(name) {
                            return !urlParamNames.includes(name);
                        }).reduce(function(current, name) {
                            current[name] = requestJSON[name];
                            return current;
                        }, {});
                        bodyJSON = body && this.operation.serializeBody ? this.operation.serializeBody(body) : undefined;
                        return [
                            4 /*yield*/ ,
                            this.requestController.request({
                                url: url,
                                params: searchParams,
                                baseURL: this.resolveBaseUrl(request),
                                method: this.operation.httpMethod,
                                data: bodyJSON,
                                headers: this.prepareHeaders()
                            })
                        ];
                    case 1:
                        responseJson = _a.sent();
                        if (!responseJson || !this.operation.parseResponse) {
                            if (this.operation.hasResponse) {
                                throw new Error('Expected response, but API has returned empty response');
                            }
                            // TODO: find a better way to handle this
                            return [
                                2 /*return*/ ,
                                {
                                    response: null,
                                    responseJson: null
                                }
                            ];
                        }
                        return [
                            2 /*return*/ ,
                            {
                                response: this.operation.parseResponse(responseJson),
                                responseJson: responseJson
                            }
                        ];
                }
            });
        });
    };
    OperationV3Resolver.prototype.resolve = function(request, body) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.request(request, body)
                        ];
                    case 1:
                        return [
                            2 /*return*/ ,
                            _a.sent().response
                        ];
                }
            });
        });
    };
    /**
     * @deprecated This method is dedicated to V2 API only.
     */ OperationV3Resolver.prototype.fetch = function(request, body) {
        return __awaiter(this, void 0, void 0, function() {
            var data;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.request(request, body)
                        ];
                    case 1:
                        data = _a.sent();
                        return [
                            2 /*return*/ ,
                            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ResponseAdapter"](data.responseJson, function() {
                                return data.response;
                            })
                        ];
                }
            });
        });
    };
    OperationV3Resolver.prototype.resolveBaseUrl = function(request) {
        return typeof this.baseUrl === 'string' ? this.baseUrl : this.baseUrl(request);
    };
    OperationV3Resolver.prototype.prepareHeaders = function() {
        var apiKey = this.core.config.get(ApiUtilsConfig.apiKey);
        var product = this.core.config.get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CoreConfig"].product);
        if (!apiKey) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MoralisApiError"]({
                code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ApiErrorCode"].API_KEY_NOT_SET,
                message: 'apiKey is not set'
            });
        }
        var headers = getSdkDetailsHeaders();
        headers['x-api-key'] = "".concat(apiKey);
        headers['Authorization'] = "Bearer ".concat(apiKey);
        if (product) {
            headers['x-moralis-product'] = product;
        }
        return headers;
    };
    return OperationV3Resolver;
}();
var PaginatedResponseV3Adapter = function() {
    function PaginatedResponseV3Adapter(response, json, nextHandler) {
        this.response = response;
        this.json = json;
        this.nextHandler = nextHandler;
    }
    Object.defineProperty(PaginatedResponseV3Adapter.prototype, "result", {
        get: function() {
            if (!this.response.result) {
                throw new Error('No result');
            }
            return this.response.result;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PaginatedResponseV3Adapter.prototype, "pagination", {
        get: function() {
            return {
                total: this.response.total || 0,
                page: this.response.page || 0,
                pageSize: this.response.pageSize || 0,
                cursor: this.response.cursor
            };
        },
        enumerable: false,
        configurable: true
    });
    PaginatedResponseV3Adapter.prototype.hasNext = function() {
        return !!this.nextHandler;
    };
    PaginatedResponseV3Adapter.prototype.next = function() {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                if (!this.nextHandler) {
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MoralisError"]({
                        code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CoreErrorCode"].NO_DATA_FOUND,
                        message: 'Page limit exceeded! Before call this method check an existence of the next page by .hasNext() method.'
                    });
                }
                return [
                    2 /*return*/ ,
                    this.nextHandler()
                ];
            });
        });
    };
    /**
     * @deprecated Use `toJSON()` method from the result.
     */ PaginatedResponseV3Adapter.prototype.raw = function() {
        return this.json;
    };
    /**
     * @deprecated Use `toJSON()` method from the result.
     */ PaginatedResponseV3Adapter.prototype.toJSON = function() {
        return this.json;
    };
    return PaginatedResponseV3Adapter;
}();
var PaginatedOperationV3Resolver = function() {
    function PaginatedOperationV3Resolver(operation, baseUrl, core) {
        this.resolver = new OperationV3Resolver(operation, baseUrl, core);
    }
    /**
     * @deprecated This method is dedicated to V2 API only.
     */ PaginatedOperationV3Resolver.prototype.fetch = function(request, body) {
        return __awaiter(this, void 0, void 0, function() {
            var data, nextHandler;
            var _this = this;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.resolver.request(request, body)
                        ];
                    case 1:
                        data = _a.sent();
                        nextHandler = null;
                        if (data.responseJson.cursor) {
                            nextHandler = function() {
                                return __awaiter(_this, void 0, void 0, function() {
                                    var nextRequest;
                                    return __generator(this, function(_a) {
                                        nextRequest = __assign(__assign({}, request), {
                                            cursor: data.response.cursor
                                        });
                                        return [
                                            2 /*return*/ ,
                                            this.fetch(nextRequest, body)
                                        ];
                                    });
                                });
                            };
                        }
                        return [
                            2 /*return*/ ,
                            new PaginatedResponseV3Adapter(data.response, data.responseJson, nextHandler)
                        ];
                }
            });
        });
    };
    return PaginatedOperationV3Resolver;
}();
var ApiUtilsConfigSetup = function() {
    function ApiUtilsConfigSetup() {}
    ApiUtilsConfigSetup.register = function(config) {
        if (!config.hasKey(ApiUtilsConfig.apiKey)) {
            config.registerKey(ApiUtilsConfig.apiKey);
        }
    };
    return ApiUtilsConfigSetup;
}();
var ApiUtils = function(_super) {
    __extends(ApiUtils, _super);
    function ApiUtils(core) {
        return _super.call(this, ApiUtils.moduleName, core) || this;
    }
    ApiUtils.create = function(core) {
        return new ApiUtils(core !== null && core !== void 0 ? core : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CoreProvider"].getDefault());
    };
    ApiUtils.prototype.setup = function() {
        ApiUtilsConfigSetup.register(this.core.config);
    };
    ApiUtils.prototype.start = function() {
    // Nothing...
    };
    ApiUtils.moduleName = 'api';
    return ApiUtils;
}(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Module"]);
;
}}),
"[project]/node_modules/@moralisweb3/aptos-api/lib/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AptosApi": (()=>AptosApi)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-core/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/api-utils/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$aptos$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-aptos-utils/lib/esm/index.js [app-client] (ecmascript)");
;
;
;
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var MAINNET_BASE_URL = 'https://aptos-mainnet.aws-prod-api-1.moralis.io';
var TESTNET_BASE_URL = 'https://aptos-testnet.aws-prod-api-1.moralis.io';
var AptosApi = function(_super) {
    __extends(AptosApi, _super);
    function AptosApi(core) {
        var _this = _super.call(this) || this;
        _this.core = core;
        return _this;
    }
    AptosApi.create = function(core) {
        if (!core) {
            core = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CoreProvider"].getDefault();
        }
        return new AptosApi(core);
    };
    AptosApi.prototype.createEndpoint = function(operation) {
        var _this = this;
        return function(request) {
            var resolver = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](operation, createBaseUrlResolver(_this.core), _this.core);
            return resolver.resolve(request, null);
        };
    };
    AptosApi.prototype.createEndpointWithBody = function(operation) {
        var _this = this;
        return function(request, body) {
            var resolver = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](operation, createBaseUrlResolver(_this.core), _this.core);
            return resolver.resolve(request, body);
        };
    };
    AptosApi.moduleName = 'aptApi';
    return AptosApi;
}(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$aptos$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AbstractClient"]);
function createBaseUrlResolver(core) {
    return function(request) {
        var network = request.network;
        if (network) {
            var finalNetwork = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$aptos$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AptosNetworkResolver"].resolve(network, core);
            switch(finalNetwork){
                case 'mainnet':
                    return MAINNET_BASE_URL;
                case 'testnet':
                    return TESTNET_BASE_URL;
                default:
                    throw new Error('Not supported network');
            }
        }
        return MAINNET_BASE_URL;
    };
}
;
}}),
"[project]/node_modules/@moralisweb3/common-sol-utils/node_modules/base-x/src/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
// base-x encoding / decoding
// Copyright (c) 2018 base-x contributors
// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)
// Distributed under the MIT software license, see the accompanying
// file LICENSE or http://www.opensource.org/licenses/mit-license.php.
function base(ALPHABET) {
    if (ALPHABET.length >= 255) {
        throw new TypeError('Alphabet too long');
    }
    var BASE_MAP = new Uint8Array(256);
    for(var j = 0; j < BASE_MAP.length; j++){
        BASE_MAP[j] = 255;
    }
    for(var i = 0; i < ALPHABET.length; i++){
        var x = ALPHABET.charAt(i);
        var xc = x.charCodeAt(0);
        if (BASE_MAP[xc] !== 255) {
            throw new TypeError(x + ' is ambiguous');
        }
        BASE_MAP[xc] = i;
    }
    var BASE = ALPHABET.length;
    var LEADER = ALPHABET.charAt(0);
    var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up
    ;
    var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up
    ;
    function encode(source) {
        if (source instanceof Uint8Array) {} else if (ArrayBuffer.isView(source)) {
            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
        } else if (Array.isArray(source)) {
            source = Uint8Array.from(source);
        }
        if (!(source instanceof Uint8Array)) {
            throw new TypeError('Expected Uint8Array');
        }
        if (source.length === 0) {
            return '';
        }
        // Skip & count leading zeroes.
        var zeroes = 0;
        var length = 0;
        var pbegin = 0;
        var pend = source.length;
        while(pbegin !== pend && source[pbegin] === 0){
            pbegin++;
            zeroes++;
        }
        // Allocate enough space in big-endian base58 representation.
        var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
        var b58 = new Uint8Array(size);
        // Process the bytes.
        while(pbegin !== pend){
            var carry = source[pbegin];
            // Apply "b58 = b58 * 256 + ch".
            var i = 0;
            for(var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++){
                carry += 256 * b58[it1] >>> 0;
                b58[it1] = carry % BASE >>> 0;
                carry = carry / BASE >>> 0;
            }
            if (carry !== 0) {
                throw new Error('Non-zero carry');
            }
            length = i;
            pbegin++;
        }
        // Skip leading zeroes in base58 result.
        var it2 = size - length;
        while(it2 !== size && b58[it2] === 0){
            it2++;
        }
        // Translate the result into a string.
        var str = LEADER.repeat(zeroes);
        for(; it2 < size; ++it2){
            str += ALPHABET.charAt(b58[it2]);
        }
        return str;
    }
    function decodeUnsafe(source) {
        if (typeof source !== 'string') {
            throw new TypeError('Expected String');
        }
        if (source.length === 0) {
            return new Uint8Array();
        }
        var psz = 0;
        // Skip and count leading '1's.
        var zeroes = 0;
        var length = 0;
        while(source[psz] === LEADER){
            zeroes++;
            psz++;
        }
        // Allocate enough space in big-endian base256 representation.
        var size = (source.length - psz) * FACTOR + 1 >>> 0 // log(58) / log(256), rounded up.
        ;
        var b256 = new Uint8Array(size);
        // Process the characters.
        while(source[psz]){
            // Decode character
            var carry = BASE_MAP[source.charCodeAt(psz)];
            // Invalid character
            if (carry === 255) {
                return;
            }
            var i = 0;
            for(var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++){
                carry += BASE * b256[it3] >>> 0;
                b256[it3] = carry % 256 >>> 0;
                carry = carry / 256 >>> 0;
            }
            if (carry !== 0) {
                throw new Error('Non-zero carry');
            }
            length = i;
            psz++;
        }
        // Skip leading zeroes in b256.
        var it4 = size - length;
        while(it4 !== size && b256[it4] === 0){
            it4++;
        }
        var vch = new Uint8Array(zeroes + (size - it4));
        var j = zeroes;
        while(it4 !== size){
            vch[j++] = b256[it4++];
        }
        return vch;
    }
    function decode(string) {
        var buffer = decodeUnsafe(string);
        if (buffer) {
            return buffer;
        }
        throw new Error('Non-base' + BASE + ' character');
    }
    return {
        encode: encode,
        decodeUnsafe: decodeUnsafe,
        decode: decode
    };
}
module.exports = base;
}}),
"[project]/node_modules/@moralisweb3/common-sol-utils/node_modules/bs58/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const basex = __turbopack_require__("[project]/node_modules/@moralisweb3/common-sol-utils/node_modules/base-x/src/index.js [app-client] (ecmascript)");
const ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';
module.exports = basex(ALPHABET);
}}),
"[project]/node_modules/@moralisweb3/common-sol-utils/lib/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "CommonSolUtils": (()=>CommonSolUtils),
    "CommonSolUtilsConfig": (()=>CommonSolUtilsConfig),
    "CommonSolUtilsConfigSetup": (()=>CommonSolUtilsConfigSetup),
    "GetTokenMetadataOperation": (()=>GetTokenMetadataOperation),
    "GetTokenPriceOperation": (()=>GetTokenPriceOperation),
    "SolAddress": (()=>SolAddress),
    "SolGetTokenMetadataNetworkEnum": (()=>SolGetTokenMetadataNetworkEnum),
    "SolGetTokenPriceNetworkEnum": (()=>SolGetTokenPriceNetworkEnum),
    "SolMetaplexToken": (()=>SolMetaplexToken),
    "SolNative": (()=>SolNative),
    "SolNetwork": (()=>SolNetwork),
    "SolNetworkResolver": (()=>SolNetworkResolver),
    "SolSPLNativePrice": (()=>SolSPLNativePrice),
    "SolSPLTokenPrice": (()=>SolSPLTokenPrice),
    "SolTokenMetadata": (()=>SolTokenMetadata),
    "getBalanceOperation": (()=>getBalanceOperation),
    "getNFTMetadataOperation": (()=>getNFTMetadataOperation),
    "getNFTsOperation": (()=>getNFTsOperation),
    "getPortfolioOperation": (()=>getPortfolioOperation),
    "getSPLOperation": (()=>getSPLOperation),
    "getTokenPriceOperation": (()=>getTokenPriceOperation),
    "operations": (()=>operations),
    "operationsV2": (()=>operationsV2),
    "operationsV2All": (()=>operationsV2All)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/bn.js/lib/bn.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$node_modules$2f$bs58$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-sol-utils/node_modules/bs58/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/buffer/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-core/lib/esm/index.js [app-client] (ecmascript)");
;
;
;
;
/**
 * Copied (and remove obsolete functionalities) from https://github.com/solana-labs/solana-web3.js/blob/master/src/publickey.ts because
 * - We only care about address validation and conversion
 * - Resolving this dependency in UMD gives dependency errors
 */ /**
 * Size of public key in bytes
 */ var PUBLIC_KEY_LENGTH = 32;
function isPublicKeyData(value) {
    return value._bn !== undefined;
}
var PublicKey = function() {
    /**
     * Create a new PublicKey object
     * @param value ed25519 public key as buffer or base-58 encoded string
     */ function PublicKey(value) {
        if (isPublicKeyData(value)) {
            this._bn = value._bn;
        } else {
            if (typeof value === 'string') {
                // assume base 58 encoding by default
                var decoded = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$node_modules$2f$bs58$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].decode(value);
                if (decoded.length !== PUBLIC_KEY_LENGTH) {
                    throw new Error("Invalid public key input");
                }
                this._bn = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"](decoded);
            } else {
                this._bn = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"](value);
            }
            if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {
                throw new Error("Invalid public key input");
            }
        }
    }
    /**
     * Return the base-58 representation of the public key
     */ PublicKey.prototype.toBase58 = function() {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$node_modules$2f$bs58$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].encode(this.toBytes());
    };
    /**
     * Return the byte array representation of the public key in big endian
     */ PublicKey.prototype.toBytes = function() {
        var buf = this.toBuffer();
        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
    };
    /**
     * Return the Buffer representation of the public key in big endian
     */ PublicKey.prototype.toBuffer = function() {
        var b = this._bn.toArrayLike(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"]);
        if (b.length === PUBLIC_KEY_LENGTH) {
            return b;
        }
        var zeroPad = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(32);
        b.copy(zeroPad, 32 - b.length);
        return zeroPad;
    };
    Object.defineProperty(PublicKey.prototype, Symbol.toStringTag, {
        get: function() {
            return "PublicKey(".concat(this.toString(), ")");
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Return the base-58 representation of the public key
     */ PublicKey.prototype.toString = function() {
        return this.toBase58();
    };
    return PublicKey;
}();
/**
 * A representation of an address on the Solana network.
 *
 * Use this class any time you work with an address.
 *
 * @category DataType
 */ var SolAddress = function() {
    function SolAddress(address) {
        this.address = address;
    }
    /**
     * Create a new instance of SolAddress from any valid address input.
     *
     * @example `const address = SolAddress.create("9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM")`
     * @throws an error when a passed address is invalid.
     */ SolAddress.create = function(address) {
        return address instanceof SolAddress ? address : new SolAddress(SolAddress.parse(address));
    };
    SolAddress.fromJSON = function(address) {
        return SolAddress.create(address);
    };
    SolAddress.parse = function(address) {
        try {
            var publicKey = new PublicKey(address);
            return publicKey.toBase58();
        } catch (e) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CoreError"]({
                code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CoreErrorCode"].INVALID_ARGUMENT,
                message: "Invalid Solana address provided: ".concat(address),
                cause: e
            });
        }
    };
    /**
     * @deprecated This method will be removed soon. To format the value, use one of the properties.
     */ SolAddress.prototype.format = function() {
        return this.address;
    };
    /**
     * Checks the equality of the current address with another Solana address.
     * @example `address.equals("9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM")`
     * @example `address.equals(SolAddress.create("9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"))`
     */ SolAddress.prototype.equals = function(address) {
        return this.address === SolAddress.create(address).address;
    };
    /**
     * @returns a string representing the address.
     * @example address.toString(); // "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
     */ SolAddress.prototype.toString = function() {
        return this.address;
    };
    /**
     * @returns a string representing the address.
     * @example address.toJSON(); // "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
     */ SolAddress.prototype.toJSON = function() {
        return this.address;
    };
    return SolAddress;
}();
var solNetworkNames = [
    'mainnet',
    'devnet'
];
/**
 * A representation of a Solana network.
 *
 * @category DataType
 */ var SolNetwork = function() {
    function SolNetwork(network) {
        this.network = network;
    }
    Object.defineProperty(SolNetwork, "MAINNET", {
        /**
         * Returns MAINNET network
         *
         * @example SolNetwork.MAINNET
         */ get: function() {
            return SolNetwork.create('mainnet');
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SolNetwork, "DEVNET", {
        /**
         * Returns DEVNET network
         *
         * @example SolNetwork.MAINNET
         */ get: function() {
            return SolNetwork.create('devnet');
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Create a new instance of SolNetwork from any valid network input.
     *
     * @example `const network = SolNetwork.create("mainnet")`
     * @throws an error when a passed network is invalid.
     */ SolNetwork.create = function(network) {
        return network instanceof SolNetwork ? network : new SolNetwork(SolNetwork.parse(network));
    };
    SolNetwork.fromJSON = function(network) {
        return SolNetwork.create(network);
    };
    SolNetwork.parse = function(network) {
        if (typeof network === 'string') {
            if (!solNetworkNames.includes(network)) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CoreError"]({
                    code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CoreErrorCode"].INVALID_ARGUMENT,
                    message: "Solana network is not supported: ".concat(network)
                });
            }
        }
        return network;
    };
    /**
     * @deprecated This method will be removed soon. To format the value, use one of the properties.
     */ SolNetwork.prototype.format = function() {
        return this.network;
    };
    /**
     * Checks the equality of the current network with another Solana network.
     * @example `network.equals("mainnet")`
     * @example `network.equals(SolNetwork.create("mainnet"))`
     */ SolNetwork.prototype.equals = function(network) {
        return this.network === SolNetwork.create(network).network;
    };
    /**
     * @returns a string representing the network.
     * @example network.toJSON(); // "mainnet"
     */ SolNetwork.prototype.toJSON = function() {
        return this.network;
    };
    /**
     * @returns a string representing the network.
     * @example network.toString(); // "mainnet"
     */ SolNetwork.prototype.toString = function() {
        return this.network;
    };
    return SolNetwork;
}();
var unitToDecimals = {
    solana: 9,
    lamports: 0
};
/**
 * The SolNative class is a MoralisData that references to the value of Solana native currency SOL
 *
 * @category DataType
 */ var SolNative = function() {
    function SolNative(rawValue) {
        this.rawValue = rawValue;
    }
    /**
     * Create a new instance of SolNative from any valid {@link SolNativeish} value.
     * @param value - the value to create the SolNative from
     * @param unit - the unit of the value (optional), defaults to `solana`
     * @returns a new instance of SolNative
     * @example
     * ```ts
     * const native = SolNative.create(2, 'lamports');
     * const native = SolNative.create(2);
     *```
     */ SolNative.create = function(value, unit) {
        if (value instanceof SolNative) {
            return value;
        }
        return new SolNative(SolNative.parse(value, unit));
    };
    SolNative.fromJSON = function(json) {
        return SolNative.create(json, 'lamports');
    };
    SolNative.parse = function(value, unit) {
        if (unit === void 0) {
            unit = 'solana';
        }
        var decimal;
        if (typeof unit === 'number') {
            decimal = unit;
        } else if (unitToDecimals[unit] !== undefined) {
            decimal = unitToDecimals[unit];
        } else {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CoreError"]({
                code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CoreErrorCode"].INVALID_ARGUMENT,
                message: "Not supported Solana unit: ".concat(unit)
            });
        }
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BigNumber"].fromDecimal(value.toString(), decimal);
    };
    /**
     * Compares two SolNativeish values.
     * @param valueA - the first value to compare
     * @param valueB - the second value to compare
     * @returns true if the values are equal
     * @example
     * ```ts
     * SolNative.equals(SolNative.create(1), SolNative.create(1)); // true
     * ```
     */ SolNative.equals = function(valueA, valueB) {
        var solNativeA = SolNative.create(valueA);
        var solNativeB = SolNative.create(valueB);
        return solNativeA.lamports === solNativeB.lamports;
    };
    /**
     * Compares SolNative with current instance.
     * @param value - the value to compare with
     * @returns true if the values are equal
     * @example
     * ```ts
     * const native = SolNative.create(2, 'lamports');
     * native.equals(SolNative.create(1)); // false
     * ```
     */ SolNative.prototype.equals = function(value) {
        return SolNative.equals(this, value);
    };
    /**
     * @deprecated This method will be removed soon. To format the value, use one of the properties.
     */ SolNative.prototype.format = function() {
        // TODO: add `format` argument
        return this.lamports;
    };
    /**
     * Converts the SolNative to a string.
     * @returns the value of the SolNative as a string
     * @example `native.toJSON()`
     */ SolNative.prototype.toJSON = function() {
        return this.lamports;
    };
    /**
     * Converts the SolNative to a string.
     * @returns the value of the SolNative as a string
     * @example `native.toString()`
     */ SolNative.prototype.toString = function() {
        return this.lamports;
    };
    Object.defineProperty(SolNative.prototype, "value", {
        /**
         * @returns the value of the SolNative as a BigNumber
         * @example `native.value`
         */ get: function() {
            return this.rawValue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SolNative.prototype, "solana", {
        /**
         * Converts the SolNative to a solana unit.
         * @returns the value of the SolNative as a solana string
         * @example `native.solana`
         */ get: function() {
            return this.rawValue.toDecimal(unitToDecimals['solana']);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SolNative.prototype, "lamports", {
        /**
         * Converts the SolNative to a string.
         * @returns the value of the SolNative as a string
         * @example `native.lamports`
         */ get: function() {
            return this.rawValue.toString();
        },
        enumerable: false,
        configurable: true
    });
    return SolNative;
}();
// $ref: #/components/schemas/SPLNativePrice
// type: SPLNativePrice
// properties:
// - value ($ref: #/components/schemas/SPLNativePrice/properties/value)
// - decimals ($ref: #/components/schemas/SPLNativePrice/properties/decimals)
// - name ($ref: #/components/schemas/SPLNativePrice/properties/name)
// - symbol ($ref: #/components/schemas/SPLNativePrice/properties/symbol)
var SolSPLNativePrice = function() {
    function SolSPLNativePrice(input) {
        this.value = input.value;
        this.decimals = input.decimals;
        this.name = input.name;
        this.symbol = input.symbol;
    }
    SolSPLNativePrice.create = function(input) {
        if (input instanceof SolSPLNativePrice) {
            return input;
        }
        return new SolSPLNativePrice(input);
    };
    SolSPLNativePrice.fromJSON = function(json) {
        var input = {
            value: json.value,
            decimals: json.decimals,
            name: json.name,
            symbol: json.symbol
        };
        return SolSPLNativePrice.create(input);
    };
    SolSPLNativePrice.prototype.toJSON = function() {
        return {
            value: this.value,
            decimals: this.decimals,
            name: this.name,
            symbol: this.symbol
        };
    };
    return SolSPLNativePrice;
}();
var SolSPLTokenPrice = function() {
    function SolSPLTokenPrice(input) {
        this.nativePrice = input.nativePrice ? SolSPLNativePrice.create(input.nativePrice) : undefined;
        this.usdPrice = input.usdPrice;
        this.exchangeAddress = input.exchangeAddress ? SolAddress.create(input.exchangeAddress) : undefined;
        this.exchangeName = input.exchangeName;
    }
    SolSPLTokenPrice.create = function(input) {
        if (input instanceof SolSPLTokenPrice) {
            return input;
        }
        return new SolSPLTokenPrice(input);
    };
    SolSPLTokenPrice.fromJSON = function(json) {
        var input = {
            nativePrice: json.nativePrice ? SolSPLNativePrice.fromJSON(json.nativePrice) : undefined,
            usdPrice: json.usdPrice,
            exchangeAddress: json.exchangeAddress ? SolAddress.fromJSON(json.exchangeAddress) : undefined,
            exchangeName: json.exchangeName
        };
        return SolSPLTokenPrice.create(input);
    };
    SolSPLTokenPrice.prototype.toJSON = function() {
        return {
            nativePrice: this.nativePrice ? this.nativePrice.toJSON() : undefined,
            usdPrice: this.usdPrice,
            exchangeAddress: this.exchangeAddress ? this.exchangeAddress.toJSON() : undefined,
            exchangeName: this.exchangeName
        };
    };
    return SolSPLTokenPrice;
}();
var GetTokenPriceOperation = {
    operationId: "getTokenPrice",
    groupName: "token",
    httpMethod: "get",
    routePattern: "/token/{network}/{address}/price",
    parameterNames: [
        "network",
        "address"
    ],
    hasResponse: true,
    hasBody: false,
    parseResponse: function(json) {
        return SolSPLTokenPrice.fromJSON(json);
    },
    serializeRequest: function(request) {
        var network = SolNetwork.create(request.network);
        var address = SolAddress.create(request.address);
        return {
            network: network.toJSON(),
            address: address.toJSON()
        };
    }
};
// $ref: #/components/schemas/MetaplexToken
// type: MetaplexToken
// properties:
// - metadataUri ($ref: #/components/schemas/MetaplexToken/properties/metadataUri)
// - masterEdition ($ref: #/components/schemas/MetaplexToken/properties/masterEdition)
// - isMutable ($ref: #/components/schemas/MetaplexToken/properties/isMutable)
// - primarySaleHappened ($ref: #/components/schemas/MetaplexToken/properties/primarySaleHappened)
// - sellerFeeBasisPoints ($ref: #/components/schemas/MetaplexToken/properties/sellerFeeBasisPoints)
// - updateAuthority ($ref: #/components/schemas/MetaplexToken/properties/updateAuthority)
var SolMetaplexToken = function() {
    function SolMetaplexToken(input) {
        this.metadataUri = input.metadataUri;
        this.masterEdition = input.masterEdition;
        this.isMutable = input.isMutable;
        this.primarySaleHappened = input.primarySaleHappened;
        this.sellerFeeBasisPoints = input.sellerFeeBasisPoints;
        this.updateAuthority = input.updateAuthority;
    }
    SolMetaplexToken.create = function(input) {
        if (input instanceof SolMetaplexToken) {
            return input;
        }
        return new SolMetaplexToken(input);
    };
    SolMetaplexToken.fromJSON = function(json) {
        var input = {
            metadataUri: json.metadataUri,
            masterEdition: json.masterEdition,
            isMutable: json.isMutable,
            primarySaleHappened: json.primarySaleHappened,
            sellerFeeBasisPoints: json.sellerFeeBasisPoints,
            updateAuthority: json.updateAuthority
        };
        return SolMetaplexToken.create(input);
    };
    SolMetaplexToken.prototype.toJSON = function() {
        return {
            metadataUri: this.metadataUri,
            masterEdition: this.masterEdition,
            isMutable: this.isMutable,
            primarySaleHappened: this.primarySaleHappened,
            sellerFeeBasisPoints: this.sellerFeeBasisPoints,
            updateAuthority: this.updateAuthority
        };
    };
    return SolMetaplexToken;
}();
var SolTokenMetadata = function() {
    function SolTokenMetadata(input) {
        this.mint = input.mint;
        this.standard = input.standard;
        this.name = input.name;
        this.symbol = input.symbol;
        this.metaplex = SolMetaplexToken.create(input.metaplex);
    }
    SolTokenMetadata.create = function(input) {
        if (input instanceof SolTokenMetadata) {
            return input;
        }
        return new SolTokenMetadata(input);
    };
    SolTokenMetadata.fromJSON = function(json) {
        var input = {
            mint: json.mint,
            standard: json.standard,
            name: json.name,
            symbol: json.symbol,
            metaplex: SolMetaplexToken.fromJSON(json.metaplex)
        };
        return SolTokenMetadata.create(input);
    };
    SolTokenMetadata.prototype.toJSON = function() {
        return {
            mint: this.mint,
            standard: this.standard,
            name: this.name,
            symbol: this.symbol,
            metaplex: this.metaplex.toJSON()
        };
    };
    return SolTokenMetadata;
}();
var GetTokenMetadataOperation = {
    operationId: "getTokenMetadata",
    groupName: "token",
    httpMethod: "get",
    routePattern: "/token/{network}/{address}/metadata",
    parameterNames: [
        "network",
        "address"
    ],
    hasResponse: true,
    hasBody: false,
    parseResponse: function(json) {
        return SolTokenMetadata.fromJSON(json);
    },
    serializeRequest: function(request) {
        var network = SolNetwork.create(request.network);
        var address = SolAddress.create(request.address);
        return {
            network: network.toJSON(),
            address: address.toJSON()
        };
    }
};
var operations = [
    GetTokenPriceOperation,
    GetTokenMetadataOperation
];
// $ref: #/paths/~1token~1{network}~1{address}~1price/get/parameters/0/schema
// typeName: getTokenPrice_network_Enum
var SolGetTokenPriceNetworkEnum = function() {
    function SolGetTokenPriceNetworkEnum() {}
    SolGetTokenPriceNetworkEnum.create = function(input) {
        return input;
    };
    SolGetTokenPriceNetworkEnum.fromJSON = function(json) {
        return json;
    };
    return SolGetTokenPriceNetworkEnum;
}();
// $ref: #/paths/~1token~1{network}~1{address}~1metadata/get/parameters/0/schema
// typeName: getTokenMetadata_network_Enum
var SolGetTokenMetadataNetworkEnum = function() {
    function SolGetTokenMetadataNetworkEnum() {}
    SolGetTokenMetadataNetworkEnum.create = function(input) {
        return input;
    };
    SolGetTokenMetadataNetworkEnum.fromJSON = function(json) {
        return json;
    };
    return SolGetTokenMetadataNetworkEnum;
}();
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}
var CommonSolUtilsConfig = {
    defaultSolNetwork: {
        name: 'defaultSolNetwork',
        defaultValue: 'mainnet'
    }
};
var CommonSolUtilsConfigSetup = function() {
    function CommonSolUtilsConfigSetup() {}
    CommonSolUtilsConfigSetup.register = function(config) {
        config.registerKey(CommonSolUtilsConfig.defaultSolNetwork);
    };
    return CommonSolUtilsConfigSetup;
}();
var CommonSolUtils = function(_super) {
    __extends(CommonSolUtils, _super);
    function CommonSolUtils(core) {
        return _super.call(this, CommonSolUtils.moduleName, core) || this;
    }
    CommonSolUtils.create = function(core) {
        return new CommonSolUtils(core !== null && core !== void 0 ? core : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CoreProvider"].getDefault());
    };
    CommonSolUtils.prototype.setup = function() {
        CommonSolUtilsConfigSetup.register(this.core.config);
    };
    CommonSolUtils.prototype.start = function() {
    // Nothing
    };
    Object.defineProperty(CommonSolUtils.prototype, "SolAddress", {
        get: function() {
            return SolAddress;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommonSolUtils.prototype, "SolNative", {
        get: function() {
            return SolNative;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommonSolUtils.prototype, "SolNetwork", {
        get: function() {
            return SolNetwork;
        },
        enumerable: false,
        configurable: true
    });
    CommonSolUtils.moduleName = 'solUtils';
    return CommonSolUtils;
}(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Module"]);
var SolNetworkResolver = function() {
    function SolNetworkResolver() {}
    SolNetworkResolver.resolve = function(network, core) {
        if (!network) {
            network = core.config.get(CommonSolUtilsConfig.defaultSolNetwork);
        }
        return SolNetwork.create(network).network;
    };
    return SolNetworkResolver;
}();
/** Gets native balance owned by the given network and address */ var getBalanceOperation = {
    method: 'GET',
    name: 'getBalance',
    id: 'balance',
    groupName: 'account',
    urlPathParamNames: [
        'network',
        'address'
    ],
    urlPathPattern: '/account/{network}/{address}/balance',
    getRequestUrlParams: getRequestUrlParams$5,
    deserializeResponse: deserializeResponse$5,
    serializeRequest: serializeRequest$5,
    deserializeRequest: deserializeRequest$5
};
// Methods
function getRequestUrlParams$5(request, core) {
    return {
        network: SolNetworkResolver.resolve(request.network, core),
        address: SolAddress.create(request.address).address
    };
}
function deserializeResponse$5(jsonResponse) {
    return SolNative.create(jsonResponse.lamports);
}
function serializeRequest$5(request, core) {
    return {
        address: SolAddress.create(request.address).address,
        network: SolNetworkResolver.resolve(request.network, core)
    };
}
function deserializeRequest$5(jsonRequest) {
    return {
        network: SolNetwork.create(jsonRequest.network),
        address: SolAddress.create(jsonRequest.address)
    };
}
/** Gets NFTs owned by the given network and address */ var getNFTsOperation = {
    method: 'GET',
    name: 'getNFTs',
    id: 'getNFTs',
    groupName: 'account',
    urlPathParamNames: [
        'network',
        'address'
    ],
    urlPathPattern: '/account/{network}/{address}/nft',
    getRequestUrlParams: getRequestUrlParams$4,
    deserializeResponse: deserializeResponse$4,
    serializeRequest: serializeRequest$4,
    deserializeRequest: deserializeRequest$4
};
// Methods
function getRequestUrlParams$4(request, core) {
    return {
        network: SolNetworkResolver.resolve(request.network, core),
        address: SolAddress.create(request.address).address
    };
}
function deserializeResponse$4(jsonResponse) {
    return jsonResponse.map(function(item) {
        return {
            associatedTokenAddress: SolAddress.create(item.associatedTokenAddress),
            mint: SolAddress.create(item.mint),
            name: item.name,
            symbol: item.symbol
        };
    });
}
function serializeRequest$4(request, core) {
    return {
        address: SolAddress.create(request.address).address,
        network: SolNetworkResolver.resolve(request.network, core)
    };
}
function deserializeRequest$4(jsonRequest) {
    return {
        network: SolNetwork.create(jsonRequest.network),
        address: SolAddress.create(jsonRequest.address)
    };
}
/** Gets the portfolio of the given network and address */ var getPortfolioOperation = {
    method: 'GET',
    name: 'getPortfolio',
    id: 'getPortfolio',
    groupName: 'account',
    urlPathParamNames: [
        'network',
        'address'
    ],
    urlPathPattern: '/account/{network}/{address}/portfolio',
    getRequestUrlParams: getRequestUrlParams$3,
    deserializeResponse: deserializeResponse$3,
    serializeRequest: serializeRequest$3,
    deserializeRequest: deserializeRequest$3
};
// Methods
function getRequestUrlParams$3(request, core) {
    return {
        network: SolNetworkResolver.resolve(request.network, core),
        address: SolAddress.create(request.address).address
    };
}
function deserializeResponse$3(jsonResponse) {
    return {
        nativeBalance: SolNative.create(jsonResponse.nativeBalance.lamports, 'lamports'),
        nfts: jsonResponse.nfts.map(function(nft) {
            return {
                associatedTokenAddress: SolAddress.create(nft.associatedTokenAddress),
                mint: SolAddress.create(nft.mint),
                name: nft.name,
                symbol: nft.symbol
            };
        }),
        tokens: jsonResponse.tokens.map(function(token) {
            return {
                associatedTokenAddress: SolAddress.create(token.associatedTokenAddress),
                mint: SolAddress.create(token.mint),
                amount: SolNative.create(token.amountRaw, 'lamports'),
                name: token.name,
                symbol: token.symbol
            };
        })
    };
}
function serializeRequest$3(request, core) {
    return {
        address: SolAddress.create(request.address).address,
        network: SolNetworkResolver.resolve(request.network, core)
    };
}
function deserializeRequest$3(jsonRequest) {
    return {
        network: SolNetwork.create(jsonRequest.network),
        address: SolAddress.create(jsonRequest.address)
    };
}
/** Gets token balances owned by the given network and address */ var getSPLOperation = {
    method: 'GET',
    name: 'getSPL',
    id: 'getSPL',
    groupName: 'account',
    urlPathParamNames: [
        'network',
        'address'
    ],
    urlPathPattern: '/account/{network}/{address}/tokens',
    getRequestUrlParams: getRequestUrlParams$2,
    deserializeResponse: deserializeResponse$2,
    serializeRequest: serializeRequest$2,
    deserializeRequest: deserializeRequest$2
};
// Methods
function getRequestUrlParams$2(request, core) {
    return {
        network: SolNetworkResolver.resolve(request.network, core),
        address: SolAddress.create(request.address).address
    };
}
function deserializeResponse$2(jsonResponse) {
    return jsonResponse.map(function(token) {
        return {
            associatedTokenAddress: SolAddress.create(token.associatedTokenAddress),
            mint: SolAddress.create(token.mint),
            amount: SolNative.create(token.amountRaw, 'lamports'),
            name: token.name,
            symbol: token.symbol
        };
    });
}
function serializeRequest$2(request, core) {
    return {
        address: SolAddress.create(request.address).address,
        network: SolNetworkResolver.resolve(request.network, core)
    };
}
function deserializeRequest$2(jsonRequest) {
    return {
        network: SolNetwork.create(jsonRequest.network),
        address: SolAddress.create(jsonRequest.address)
    };
}
/** Gets the contract level metadata (mint, standard, name, symbol, metaplex) for the given network and contract */ var getNFTMetadataOperation = {
    method: 'GET',
    name: 'getNFTMetadata',
    id: 'getNFTMetadata',
    groupName: 'nft',
    urlPathParamNames: [
        'network',
        'address'
    ],
    urlPathPattern: '/nft/{network}/{address}/metadata',
    getRequestUrlParams: getRequestUrlParams$1,
    deserializeResponse: deserializeResponse$1,
    serializeRequest: serializeRequest$1,
    deserializeRequest: deserializeRequest$1
};
// Methods
function getRequestUrlParams$1(request, core) {
    return {
        network: SolNetworkResolver.resolve(request.network, core),
        address: SolAddress.create(request.address).address
    };
}
function deserializeResponse$1(jsonResponse) {
    return {
        mint: SolAddress.create(jsonResponse.mint),
        standard: jsonResponse.standard,
        name: jsonResponse.name,
        symbol: jsonResponse.symbol,
        metaplex: {
            metadataUri: jsonResponse.metaplex.metadataUri,
            updateAuthority: SolAddress.create(jsonResponse.metaplex.updateAuthority),
            sellerFeeBasisPoints: jsonResponse.metaplex.sellerFeeBasisPoints,
            primarySaleHappened: jsonResponse.metaplex.primarySaleHappened,
            isMutable: jsonResponse.metaplex.isMutable,
            masterEdition: jsonResponse.metaplex.masterEdition
        }
    };
}
function serializeRequest$1(request, core) {
    return {
        address: SolAddress.create(request.address).address,
        network: SolNetworkResolver.resolve(request.network, core)
    };
}
function deserializeRequest$1(jsonRequest) {
    return {
        network: SolNetwork.create(jsonRequest.network),
        address: SolAddress.create(jsonRequest.address)
    };
}
/** Gets the token price (usd and native) for a given contract address and network */ var getTokenPriceOperation = {
    method: 'GET',
    name: 'getTokenPrice',
    id: 'getTokenPrice',
    groupName: 'token',
    urlPathParamNames: [
        'network',
        'address'
    ],
    urlPathPattern: '/token/{network}/{address}/price',
    getRequestUrlParams: getRequestUrlParams,
    deserializeResponse: deserializeResponse,
    serializeRequest: serializeRequest,
    deserializeRequest: deserializeRequest
};
// Methods
function getRequestUrlParams(request, core) {
    var network = SolNetworkResolver.resolve(request.network, core);
    if (network !== 'mainnet') {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MoralisApiError"]({
            message: "Incorrct value for 'network', getTokenPrice is only available on mainnet",
            code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ApiErrorCode"].INVALID_PARAMS
        });
    }
    return {
        network: SolNetworkResolver.resolve(request.network, core),
        address: SolAddress.create(request.address).address
    };
}
function deserializeResponse(jsonResponse) {
    return SolSPLTokenPrice.fromJSON(jsonResponse);
}
function serializeRequest(request, core) {
    return {
        address: SolAddress.create(request.address).address,
        network: SolNetworkResolver.resolve(request.network, core)
    };
}
function deserializeRequest(jsonRequest) {
    return {
        network: SolNetwork.create(jsonRequest.network),
        address: SolAddress.create(jsonRequest.address)
    };
}
var operationsV2 = [
    getBalanceOperation,
    getNFTsOperation,
    getPortfolioOperation,
    getSPLOperation,
    getNFTMetadataOperation
];
/**
 * @deprecated This list includes upgraded operations to the hybrid approach in the old format.
 */ var operationsV2All = __spreadArray(__spreadArray([], operationsV2, true), [
    getTokenPriceOperation
], false);
;
}}),
"[project]/node_modules/@moralisweb3/common-auth-utils/lib/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getAddressesOperation": (()=>getAddressesOperation),
    "operations": (()=>operations),
    "removeBindOperation": (()=>removeBindOperation),
    "requestBindOperation": (()=>requestBindOperation),
    "requestChallengeAptosOperation": (()=>requestChallengeAptosOperation),
    "requestChallengeEvmOperation": (()=>requestChallengeEvmOperation),
    "requestChallengeSolanaOperation": (()=>requestChallengeSolanaOperation),
    "verifyChallengeAptosOperation": (()=>verifyChallengeAptosOperation),
    "verifyChallengeEvmOperation": (()=>verifyChallengeEvmOperation),
    "verifyChallengeSolanaOperation": (()=>verifyChallengeSolanaOperation),
    "verifyRemoveBindOperation": (()=>verifyRemoveBindOperation),
    "verifyRequestBindOperation": (()=>verifyRequestBindOperation)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$aptos$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-aptos-utils/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-core/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-evm-utils/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-sol-utils/lib/esm/index.js [app-client] (ecmascript)");
;
;
;
;
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __rest(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
var verifyChallengeAptosOperation = {
    method: 'POST',
    name: 'verifyChallengeAptos',
    id: 'verifyChallengeAptos',
    groupName: 'aptos',
    urlPathPattern: '/challenge/verify/aptos',
    bodyParamNames: [
        'message',
        'signature'
    ],
    bodyType: 'properties',
    getRequestUrlParams: getRequestUrlParams$a,
    getRequestBody: getRequestBody$9,
    serializeRequest: serializeRequest$a,
    deserializeRequest: deserializeRequest$a,
    deserializeResponse: deserializeResponse$a
};
// Methods
function getRequestUrlParams$a() {
    return {};
}
function getRequestBody$9(request) {
    return {
        message: request.message,
        signature: request.signature
    };
}
function deserializeResponse$a(_a) {
    var network = _a.network, jsonResponse = __rest(_a, [
        "network"
    ]);
    return __assign(__assign({}, jsonResponse), {
        network: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$aptos$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AptosNetwork"].create(network),
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$aptos$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AptosAddress"].create(jsonResponse.address),
        expirationTime: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybe"])(jsonResponse.expirationTime, function(value) {
            return new Date(value);
        }),
        notBefore: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybe"])(jsonResponse.notBefore, function(value) {
            return new Date(value);
        })
    });
}
function serializeRequest$a(request) {
    return {
        message: request.message,
        signature: request.signature
    };
}
function deserializeRequest$a(jsonRequest) {
    return {
        message: jsonRequest.message,
        signature: jsonRequest.signature
    };
}
/** The back channel challenge containing the id to store on the api and the message to be signed by the user */ var requestChallengeAptosOperation = {
    method: 'POST',
    name: 'requestChallengeAptos',
    id: 'requestChallengeAptos',
    groupName: 'aptos',
    urlPathPattern: '/challenge/request/aptos',
    bodyParamNames: [
        'domain',
        'network',
        'address',
        'statement',
        'uri',
        'expirationTime',
        'notBefore',
        'resources',
        'timeout',
        'publicKey'
    ],
    bodyType: 'properties',
    getRequestUrlParams: getRequestUrlParams$9,
    getRequestBody: getRequestBody$8,
    serializeRequest: serializeRequest$9,
    deserializeRequest: deserializeRequest$9,
    deserializeResponse: deserializeResponse$9
};
// Methods
function getRequestUrlParams$9() {
    return {};
}
function getRequestBody$8(request) {
    return {
        domain: request.domain,
        network: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$aptos$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AptosNetwork"].create(request.network).toString(),
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$aptos$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AptosAddress"].create(request.address).toString(),
        publicKey: request.publicKey,
        statement: request.statement,
        uri: request.uri,
        expirationTime: request.expirationTime,
        notBefore: request.notBefore,
        resources: request.resources,
        timeout: request.timeout
    };
}
function deserializeResponse$9(jsonResponse) {
    return jsonResponse;
}
function serializeRequest$9(request, core) {
    return {
        domain: request.domain,
        network: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$aptos$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AptosNetworkResolver"].resolve(request.network, core),
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$aptos$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AptosAddress"].create(request.address).toString(),
        publicKey: request.publicKey,
        statement: request.statement,
        uri: request.uri,
        expirationTime: request.expirationTime,
        notBefore: request.notBefore,
        resources: request.resources,
        timeout: request.timeout
    };
}
function deserializeRequest$9(jsonRequest) {
    return {
        domain: jsonRequest.domain,
        network: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$aptos$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AptosNetwork"].create(jsonRequest.network),
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$aptos$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AptosAddress"].create(jsonRequest.address),
        publicKey: jsonRequest.publicKey,
        statement: jsonRequest.statement,
        uri: jsonRequest.uri,
        expirationTime: jsonRequest.expirationTime,
        notBefore: jsonRequest.notBefore,
        resources: jsonRequest.resources,
        timeout: jsonRequest.timeout
    };
}
var verifyChallengeEvmOperation = {
    method: 'POST',
    name: 'verifyChallengeEvm',
    id: 'verifyChallengeEvm',
    groupName: 'evm',
    urlPathPattern: '/challenge/verify/evm',
    bodyParamNames: [
        'message',
        'signature'
    ],
    bodyType: 'properties',
    getRequestUrlParams: getRequestUrlParams$8,
    getRequestBody: getRequestBody$7,
    serializeRequest: serializeRequest$8,
    deserializeRequest: deserializeRequest$8,
    deserializeResponse: deserializeResponse$8
};
// Methods
function getRequestUrlParams$8() {
    return {};
}
function getRequestBody$7(request) {
    return {
        message: request.message,
        signature: request.signature
    };
}
function deserializeResponse$8(_a) {
    var chainId = _a.chainId, jsonResponse = __rest(_a, [
        "chainId"
    ]);
    return __assign(__assign({}, jsonResponse), {
        chain: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EvmChain"].create(chainId),
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EvmAddress"].create(jsonResponse.address),
        expirationTime: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybe"])(jsonResponse.expirationTime, function(value) {
            return new Date(value);
        }),
        notBefore: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybe"])(jsonResponse.notBefore, function(value) {
            return new Date(value);
        })
    });
}
function serializeRequest$8(request) {
    return {
        message: request.message,
        signature: request.signature
    };
}
function deserializeRequest$8(jsonRequest) {
    return {
        message: jsonRequest.message,
        signature: jsonRequest.signature
    };
}
/** The back channel challenge containing the id to store on the api and the message to be signed by the user */ var requestChallengeEvmOperation = {
    method: 'POST',
    name: 'requestChallengeEvm',
    id: 'requestChallengeEvm',
    groupName: 'evm',
    urlPathPattern: '/challenge/request/evm',
    bodyParamNames: [
        'domain',
        'chainId',
        'address',
        'statement',
        'uri',
        'expirationTime',
        'notBefore',
        'resources',
        'timeout'
    ],
    bodyType: 'properties',
    getRequestUrlParams: getRequestUrlParams$7,
    getRequestBody: getRequestBody$6,
    serializeRequest: serializeRequest$7,
    deserializeRequest: deserializeRequest$7,
    deserializeResponse: deserializeResponse$7
};
// Methods
function getRequestUrlParams$7() {
    return {};
}
function getRequestBody$6(request, core) {
    return {
        domain: request.domain,
        chainId: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EvmChainResolver"].resolve(request.chainId, core).hex,
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EvmAddress"].create(request.address).checksum,
        statement: request.statement,
        uri: request.uri,
        expirationTime: request.expirationTime,
        notBefore: request.notBefore,
        resources: request.resources,
        timeout: request.timeout
    };
}
function deserializeResponse$7(jsonResponse) {
    return jsonResponse;
}
function serializeRequest$7(request, core) {
    return {
        domain: request.domain,
        chainId: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EvmChainResolver"].resolve(request.chainId, core).decimal.toString(),
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EvmAddress"].create(request.address).checksum,
        statement: request.statement,
        uri: request.uri,
        expirationTime: request.expirationTime,
        notBefore: request.notBefore,
        resources: request.resources,
        timeout: request.timeout
    };
}
function deserializeRequest$7(jsonRequest, core) {
    return {
        domain: jsonRequest.domain,
        chainId: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EvmChainResolver"].resolve(jsonRequest.chainId, core),
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EvmAddress"].create(jsonRequest.address),
        statement: jsonRequest.statement,
        uri: jsonRequest.uri,
        expirationTime: jsonRequest.expirationTime,
        notBefore: jsonRequest.notBefore,
        resources: jsonRequest.resources,
        timeout: jsonRequest.timeout
    };
}
var getAddressesOperation = {
    method: 'GET',
    name: 'getAddresses',
    id: 'getAddresses',
    groupName: 'evm',
    urlPathPattern: '/profile/{profileId}/addresses',
    urlPathParamNames: [
        'profileId'
    ],
    getRequestUrlParams: getRequestUrlParams$6,
    serializeRequest: serializeRequest$6,
    deserializeRequest: deserializeRequest$6,
    deserializeResponse: deserializeResponse$6
};
// Methods
function getRequestUrlParams$6(request) {
    return {
        profileId: request.profileId
    };
}
function deserializeResponse$6(jsonResponse) {
    return jsonResponse;
}
function serializeRequest$6(request) {
    return request;
}
function deserializeRequest$6(jsonRequest) {
    return jsonRequest;
}
var removeBindOperation = {
    method: 'POST',
    name: 'removeBind',
    id: 'removeBind',
    groupName: 'evm',
    urlPathPattern: '/bind/remove',
    bodyParamNames: [
        'blockchainType',
        'address',
        'profileId',
        'publicKey'
    ],
    bodyType: 'properties',
    getRequestUrlParams: getRequestUrlParams$5,
    getRequestBody: getRequestBody$5,
    serializeRequest: serializeRequest$5,
    deserializeRequest: deserializeRequest$5,
    deserializeResponse: deserializeResponse$5
};
// Methods
function getRequestUrlParams$5() {
    return {};
}
function getRequestBody$5(request) {
    return {
        blockchainType: request.blockchainType,
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EvmAddress"].create(request.address).checksum,
        profileId: request.profileId,
        publicKey: request.publicKey
    };
}
function deserializeResponse$5(jsonResponse) {
    return jsonResponse;
}
function serializeRequest$5(request) {
    return {
        blockchainType: request.blockchainType,
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EvmAddress"].create(request.address).checksum,
        profileId: request.profileId,
        publicKey: request.publicKey
    };
}
function deserializeRequest$5(jsonRequest) {
    return {
        blockchainType: jsonRequest.blockchainType,
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EvmAddress"].create(jsonRequest.address),
        profileId: jsonRequest.profileId,
        publicKey: jsonRequest.publicKey
    };
}
var requestBindOperation = {
    method: 'POST',
    name: 'requestBind',
    id: 'requestBind',
    groupName: 'evm',
    urlPathPattern: '/bind/request',
    bodyParamNames: [
        'addresses'
    ],
    bodyType: 'properties',
    getRequestUrlParams: getRequestUrlParams$4,
    getRequestBody: getRequestBody$4,
    serializeRequest: serializeRequest$4,
    deserializeRequest: deserializeRequest$4,
    deserializeResponse: deserializeResponse$4
};
// Methods
function getRequestUrlParams$4() {
    return {};
}
function getRequestBody$4(request) {
    return {
        addresses: request.addresses.map(function(address) {
            return {
                blockchainType: address.blockchainType,
                address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EvmAddress"].create(address.address).checksum
            };
        })
    };
}
function deserializeResponse$4(jsonResponse) {
    return jsonResponse;
}
function serializeRequest$4(request) {
    return {
        addresses: request.addresses.map(function(address) {
            return {
                blockchainType: address.blockchainType,
                address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EvmAddress"].create(address.address).checksum
            };
        })
    };
}
function deserializeRequest$4(jsonRequest) {
    return {
        addresses: jsonRequest.addresses.map(function(address) {
            return {
                blockchainType: address.blockchainType,
                address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EvmAddress"].create(address.address)
            };
        })
    };
}
var verifyRemoveBindOperation = {
    method: 'POST',
    name: 'verifyRemoveBind',
    id: 'verifyRemoveBind',
    groupName: 'evm',
    urlPathPattern: '/bind/remove/verify',
    bodyParamNames: [
        'message',
        'signature'
    ],
    bodyType: 'properties',
    getRequestUrlParams: getRequestUrlParams$3,
    getRequestBody: getRequestBody$3,
    serializeRequest: serializeRequest$3,
    deserializeRequest: deserializeRequest$3,
    deserializeResponse: deserializeResponse$3
};
// Methods
function getRequestUrlParams$3() {
    return {};
}
function getRequestBody$3(request) {
    return {
        message: request.message,
        signature: request.signature
    };
}
function deserializeResponse$3(jsonResponse) {
    return jsonResponse;
}
function serializeRequest$3(request) {
    return {
        message: request.message,
        signature: request.signature
    };
}
function deserializeRequest$3(jsonRequest) {
    return {
        message: jsonRequest.message,
        signature: jsonRequest.signature
    };
}
var verifyRequestBindOperation = {
    method: 'POST',
    name: 'verifyRequestBind',
    id: 'verifyRequestBind',
    groupName: 'evm',
    urlPathPattern: '/bind/request/verify',
    bodyParamNames: [
        'verifications'
    ],
    bodyType: 'properties',
    getRequestUrlParams: getRequestUrlParams$2,
    getRequestBody: getRequestBody$2,
    serializeRequest: serializeRequest$2,
    deserializeRequest: deserializeRequest$2,
    deserializeResponse: deserializeResponse$2
};
// Methods
function getRequestUrlParams$2() {
    return {};
}
function getRequestBody$2(request) {
    return {
        verifications: request.verifications
    };
}
function deserializeResponse$2(jsonResponse) {
    return jsonResponse;
}
function serializeRequest$2(request) {
    return {
        verifications: request.verifications
    };
}
function deserializeRequest$2(jsonRequest) {
    return {
        verifications: jsonRequest.verifications
    };
}
var verifyChallengeSolanaOperation = {
    method: 'POST',
    name: 'verifyChallengeSolana',
    id: 'verifyChallengeSolana',
    groupName: 'solana',
    urlPathPattern: '/challenge/verify/solana',
    bodyParamNames: [
        'message',
        'signature'
    ],
    bodyType: 'properties',
    getRequestUrlParams: getRequestUrlParams$1,
    getRequestBody: getRequestBody$1,
    serializeRequest: serializeRequest$1,
    deserializeRequest: deserializeRequest$1,
    deserializeResponse: deserializeResponse$1
};
// Methods
function getRequestUrlParams$1() {
    return {};
}
function getRequestBody$1(request) {
    return {
        message: request.message,
        signature: request.signature
    };
}
function deserializeResponse$1(_a) {
    var network = _a.network, jsonResponse = __rest(_a, [
        "network"
    ]);
    return __assign(__assign({}, jsonResponse), {
        solNetwork: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SolNetwork"].create(network),
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SolAddress"].create(jsonResponse.address),
        expirationTime: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybe"])(jsonResponse.expirationTime, function(value) {
            return new Date(value);
        }),
        notBefore: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybe"])(jsonResponse.notBefore, function(value) {
            return new Date(value);
        })
    });
}
function serializeRequest$1(request) {
    return {
        message: request.message,
        signature: request.signature
    };
}
function deserializeRequest$1(jsonRequest) {
    return {
        message: jsonRequest.message,
        signature: jsonRequest.signature
    };
}
/** The back channel challenge containing the id to store on the api and the message to be signed by the user */ var requestChallengeSolanaOperation = {
    method: 'POST',
    name: 'requestChallengeSolana',
    id: 'requestChallengeSolana',
    groupName: 'solana',
    urlPathPattern: '/challenge/request/solana',
    bodyParamNames: [
        'domain',
        'network',
        'address',
        'statement',
        'uri',
        'expirationTime',
        'notBefore',
        'resources',
        'timeout'
    ],
    bodyType: 'properties',
    getRequestUrlParams: getRequestUrlParams,
    getRequestBody: getRequestBody,
    serializeRequest: serializeRequest,
    deserializeRequest: deserializeRequest,
    deserializeResponse: deserializeResponse
};
// Methods
function getRequestUrlParams() {
    return {};
}
function getRequestBody(request) {
    return {
        domain: request.domain,
        network: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SolNetwork"].create(request.network).network,
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SolAddress"].create(request.address).address,
        statement: request.statement,
        uri: request.uri,
        expirationTime: request.expirationTime,
        notBefore: request.notBefore,
        resources: request.resources,
        timeout: request.timeout
    };
}
function deserializeResponse(jsonResponse) {
    return jsonResponse;
}
function serializeRequest(request) {
    return {
        domain: request.domain,
        network: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SolNetwork"].create(request.network).network,
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SolAddress"].create(request.address).address,
        statement: request.statement,
        uri: request.uri,
        expirationTime: request.expirationTime,
        notBefore: request.notBefore,
        resources: request.resources,
        timeout: request.timeout
    };
}
function deserializeRequest(jsonRequest) {
    return {
        domain: jsonRequest.domain,
        network: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SolNetwork"].create(jsonRequest.network),
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SolAddress"].create(jsonRequest.address),
        statement: jsonRequest.statement,
        uri: jsonRequest.uri,
        expirationTime: jsonRequest.expirationTime,
        notBefore: jsonRequest.notBefore,
        resources: jsonRequest.resources,
        timeout: jsonRequest.timeout
    };
}
var operations = [
    requestChallengeSolanaOperation,
    requestChallengeEvmOperation,
    requestChallengeAptosOperation,
    verifyChallengeSolanaOperation,
    verifyChallengeEvmOperation,
    verifyChallengeAptosOperation,
    getAddressesOperation,
    removeBindOperation,
    requestBindOperation,
    verifyRemoveBindOperation,
    verifyRequestBindOperation
];
;
}}),
"[project]/node_modules/@moralisweb3/auth/lib/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Auth": (()=>Auth),
    "BASE_URL": (()=>BASE_URL)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/api-utils/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$auth$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-auth-utils/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-evm-utils/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-sol-utils/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$aptos$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-aptos-utils/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-core/lib/esm/index.js [app-client] (ecmascript)");
;
;
;
;
;
;
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __rest(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
function __generator(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
var AuthNetworkType;
(function(AuthNetworkType) {
    AuthNetworkType["EVM"] = "evm";
    AuthNetworkType["SOLANA"] = "solana";
    AuthNetworkType["APTOS"] = "aptos";
})(AuthNetworkType || (AuthNetworkType = {}));
var makeEvmRequestMessage = function(core, _a) {
    var chain = _a.chain, address = _a.address;
    _a.networkType;
    var options = __rest(_a, [
        "chain",
        "address",
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$auth$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["requestChallengeEvmOperation"], BASE_URL, core).fetch(__assign({
        chainId: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EvmChain"].create(chain).hex,
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EvmAddress"].create(address).checksum
    }, options));
};
var makeSolRequestMessage = function(core, _a) {
    var address = _a.address;
    _a.networkType;
    var solNetwork = _a.solNetwork, options = __rest(_a, [
        "address",
        "networkType",
        "solNetwork"
    ]);
    // Backwards compatibility for 'solNetwork' option
    if (!options.network && solNetwork) {
        options.network = solNetwork;
    }
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$auth$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["requestChallengeSolanaOperation"], BASE_URL, core).fetch(__assign({
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SolAddress"].create(address).toString()
    }, options));
};
var makeAptosRequestMessage = function(core, _a) {
    var address = _a.address;
    _a.networkType;
    var options = __rest(_a, [
        "address",
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$auth$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["requestChallengeAptosOperation"], BASE_URL, core).fetch(__assign({
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$aptos$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AptosAddress"].create(address).toString()
    }, options));
};
var makeRequestMessage = function(core) {
    return function(options) {
        return __awaiter(void 0, void 0, void 0, function() {
            return __generator(this, function(_a) {
                switch(options.networkType){
                    case AuthNetworkType.EVM:
                        return [
                            2 /*return*/ ,
                            makeEvmRequestMessage(core, options)
                        ];
                    case AuthNetworkType.SOLANA:
                        return [
                            2 /*return*/ ,
                            makeSolRequestMessage(core, options)
                        ];
                    case AuthNetworkType.APTOS:
                        return [
                            2 /*return*/ ,
                            makeAptosRequestMessage(core, options)
                        ];
                    default:
                        if (!options.networkType) {
                            return [
                                2 /*return*/ ,
                                makeEvmRequestMessage(core, options)
                            ];
                        }
                        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MoralisAuthError"]({
                            code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AuthErrorCode"].INCORRECT_NETWORK,
                            message: "Incorrect networkType provided. Got \"".concat(options.networkType, "\", Valid values are: ").concat(Object.values(AuthNetworkType).map(function(value) {
                                return "\"".concat(value, "\"");
                            }).join(', '))
                        });
                }
            });
        });
    };
};
var makeEvmVerify = function(core, _a) {
    _a.networkType;
    _a.network;
    var options = __rest(_a, [
        "networkType",
        "network"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$auth$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["verifyChallengeEvmOperation"], BASE_URL, core).fetch({
        message: options.message,
        signature: options.signature
    });
};
var makeSolVerify = function(core, _a) {
    _a.networkType;
    _a.network;
    var options = __rest(_a, [
        "networkType",
        "network"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$auth$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["verifyChallengeSolanaOperation"], BASE_URL, core).fetch({
        message: options.message,
        signature: options.signature
    });
};
var makeAptosVerify = function(core, _a) {
    _a.networkType;
    var options = __rest(_a, [
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$auth$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["verifyChallengeAptosOperation"], BASE_URL, core).fetch({
        message: options.message,
        signature: options.signature
    });
};
var makeVerify = function(core) {
    return function(options) {
        return __awaiter(void 0, void 0, void 0, function() {
            return __generator(this, function(_a) {
                // Backwards compatibility for the 'network' parameter
                if (!options.networkType && options.network) {
                    options.networkType = options.network;
                }
                switch(options.networkType){
                    case AuthNetworkType.EVM:
                        return [
                            2 /*return*/ ,
                            makeEvmVerify(core, options)
                        ];
                    case AuthNetworkType.SOLANA:
                        return [
                            2 /*return*/ ,
                            makeSolVerify(core, options)
                        ];
                    case AuthNetworkType.APTOS:
                        return [
                            2 /*return*/ ,
                            makeAptosVerify(core, options)
                        ];
                    default:
                        if (!options.networkType) {
                            return [
                                2 /*return*/ ,
                                makeEvmVerify(core, options)
                            ];
                        }
                        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MoralisAuthError"]({
                            code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AuthErrorCode"].INCORRECT_NETWORK,
                            message: "Incorrect network provided. Got \"".concat(options.networkType, "\", Valid values are: ").concat(Object.values(AuthNetworkType).map(function(value) {
                                return "\"".concat(value, "\"");
                            }).join(', '))
                        });
                }
            });
        });
    };
};
var BASE_URL = 'https://authapi.moralis.io';
var Auth = function(_super) {
    __extends(Auth, _super);
    function Auth(core) {
        var _this = _super.call(this, Auth.moduleName, core, function() {
            return BASE_URL;
        }) || this;
        // Client-side compatible operation, structured in a predictable way as defined in the operation
        // TODO: generate in seperate package "client-evm-auth" (similar to client-evm-auth)
        _this.evm = {
            getAddresses: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$auth$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressesOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            removeBind: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$auth$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["removeBindOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            requestBind: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$auth$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["requestBindOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            requestChallengeEvm: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$auth$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["requestChallengeEvmOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            verifyRemoveBind: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$auth$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["verifyRemoveBindOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            verifyRequestBind: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$auth$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["verifyRequestBindOperation"], _this.baseUrl, _this.core).fetch(request);
            }
        };
        // Client-side compatible operation, structured in a predictable way as defined in the operation
        // TODO: generate in separate package "client-evm-auth" (similar to client-evm-auth)
        _this.solana = {
            requestChallengeSol: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$auth$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["requestChallengeSolanaOperation"], _this.baseUrl, _this.core).fetch(request);
            }
        };
        // Resolves to requestChallengeEvm/requestChallengeSol depending on provided options (defaults to evm)
        _this.requestMessage = function(options) {
            return makeRequestMessage(_this.core)(options);
        };
        return _this;
    }
    Auth.create = function(core) {
        return new Auth(core !== null && core !== void 0 ? core : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CoreProvider"].getDefault());
    };
    Auth.prototype.setup = function() {
    // Nothing
    };
    Auth.prototype.start = function() {
    // Nothing
    };
    Auth.prototype.verify = function(options) {
        return makeVerify(this.core)(options);
    };
    Auth.moduleName = 'auth';
    return Auth;
}(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ApiModule"]);
;
}}),
"[project]/node_modules/@moralisweb3/streams/lib/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "BatchProcessor": (()=>BatchProcessor),
    "CollectionNameBuilder": (()=>CollectionNameBuilder),
    "Erc20ApprovalDocumentBuilder": (()=>Erc20ApprovalDocumentBuilder),
    "Erc20ApprovalsProcessor": (()=>Erc20ApprovalsProcessor),
    "Erc20TransferDocumentBuilder": (()=>Erc20TransferDocumentBuilder),
    "Erc20TransfersProcessor": (()=>Erc20TransfersProcessor),
    "InternalTxDocumentBuilder": (()=>InternalTxDocumentBuilder),
    "InternalTxsProcessor": (()=>InternalTxsProcessor),
    "LogDocumentBuilder": (()=>LogDocumentBuilder),
    "LogDocumentValueFormatter": (()=>LogDocumentValueFormatter),
    "LogParser": (()=>LogParser),
    "LogsProcessor": (()=>LogsProcessor),
    "NftApprovalDocumentBuilder": (()=>NftApprovalDocumentBuilder),
    "NftApprovalsProcessor": (()=>NftApprovalsProcessor),
    "NftTransferDocumentBuilder": (()=>NftTransferDocumentBuilder),
    "NftTransfersProcessor": (()=>NftTransfersProcessor),
    "ParamNameResolver": (()=>ParamNameResolver),
    "Streams": (()=>Streams),
    "TxDocumentBuilder": (()=>TxDocumentBuilder),
    "TxsProcessor": (()=>TxsProcessor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ethereumjs$2d$util$2f$dist$2e$browser$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/ethereumjs-util/dist.browser/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@ethersproject/bignumber/lib.esm/bignumber.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$abi$2f$lib$2e$esm$2f$interface$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@ethersproject/abi/lib.esm/interface.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-core/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/api-utils/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-streams-utils/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@ethersproject/strings/lib.esm/utf8.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@ethersproject/sha2/lib.esm/sha2.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
function __rest(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}
var StreamNetwork;
(function(StreamNetwork) {
    StreamNetwork["APTOS"] = "aptos";
    StreamNetwork["EVM"] = "evm";
})(StreamNetwork || (StreamNetwork = {}));
var IncorrectNetworkError = function(_super) {
    __extends(IncorrectNetworkError, _super);
    function IncorrectNetworkError(network) {
        return _super.call(this, {
            code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StreamErrorCode"].INCORRECT_NETWORK,
            message: "Incorrect network provided. Got \"".concat(network, "\", Valid values are: ").concat(Object.values(StreamNetwork).map(function(value) {
                return "\"".concat(value, "\"");
            }).join(', '))
        }) || this;
    }
    return IncorrectNetworkError;
}(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MoralisStreamError"]);
var makeCreateAptosStream = function(core, baseUrl, _a) {
    _a.networkType;
    var options = __rest(_a, [
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createStreamAptosOperation"], baseUrl, core).fetch(options);
};
var makeCreateEvmStream = function(core, baseUrl, _a) {
    _a.networkType;
    var options = __rest(_a, [
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createStreamEvmOperation"], baseUrl, core).fetch(options);
};
var makeCreateStream = function(core, baseUrl) {
    return function(createStreamOptions) {
        switch(createStreamOptions.networkType){
            case StreamNetwork.APTOS:
                return makeCreateAptosStream(core, baseUrl, createStreamOptions);
            case StreamNetwork.EVM:
                return makeCreateEvmStream(core, baseUrl, createStreamOptions);
            default:
                if (createStreamOptions.networkType === undefined) {
                    return makeCreateEvmStream(core, baseUrl, createStreamOptions);
                }
                throw new IncorrectNetworkError(createStreamOptions.networkType);
        }
    };
};
var makeUpdateAptosStream = function(core, baseUrl, _a) {
    _a.networkType;
    var options = __rest(_a, [
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["updateStreamAptosOperation"], baseUrl, core).fetch(options);
};
var makeUpdateEvmStream = function(core, baseUrl, _a) {
    _a.networkType;
    var options = __rest(_a, [
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["updateStreamEvmOperation"], baseUrl, core).fetch(options);
};
var makeUpdateStream = function(core, baseUrl) {
    return function(updateStreamOptions) {
        switch(updateStreamOptions.networkType){
            case StreamNetwork.APTOS:
                return makeUpdateAptosStream(core, baseUrl, updateStreamOptions);
            case StreamNetwork.EVM:
                return makeUpdateEvmStream(core, baseUrl, updateStreamOptions);
            default:
                if (updateStreamOptions.networkType === undefined) {
                    return makeUpdateEvmStream(core, baseUrl, updateStreamOptions);
                }
                throw new IncorrectNetworkError(updateStreamOptions.networkType);
        }
    };
};
var makeDeleteAptosStream = function(core, baseUrl, _a) {
    _a.networkType;
    var options = __rest(_a, [
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deleteStreamAptosOperation"], baseUrl, core).fetch(options);
};
var makeDeleteEvmStream = function(core, baseUrl, _a) {
    _a.networkType;
    var options = __rest(_a, [
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deleteStreamEvmOperation"], baseUrl, core).fetch(options);
};
var makeDeleteStream = function(core, baseUrl) {
    return function(deleteStreamOptions) {
        switch(deleteStreamOptions.networkType){
            case StreamNetwork.APTOS:
                return makeDeleteAptosStream(core, baseUrl, deleteStreamOptions);
            case StreamNetwork.EVM:
                return makeDeleteEvmStream(core, baseUrl, deleteStreamOptions);
            default:
                if (deleteStreamOptions.networkType === undefined) {
                    return makeDeleteEvmStream(core, baseUrl, deleteStreamOptions);
                }
                throw new IncorrectNetworkError(deleteStreamOptions.networkType);
        }
    };
};
var makeGetAptosStream$1 = function(core, baseUrl, _a) {
    _a.networkType;
    var options = __rest(_a, [
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStreamsAptosOperation"], baseUrl, core).fetch(options);
};
var makeGetEvmStream$1 = function(core, baseUrl, _a) {
    _a.networkType;
    var options = __rest(_a, [
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStreamsEvmOperation"], baseUrl, core).fetch(options);
};
var makeGetStreams = function(core, baseUrl) {
    return function(getStreamsOptions) {
        switch(getStreamsOptions.networkType){
            case StreamNetwork.APTOS:
                return makeGetAptosStream$1(core, baseUrl, getStreamsOptions);
            case StreamNetwork.EVM:
                return makeGetEvmStream$1(core, baseUrl, getStreamsOptions);
            default:
                if (getStreamsOptions.networkType === undefined) {
                    return makeGetEvmStream$1(core, baseUrl, getStreamsOptions);
                }
                throw new IncorrectNetworkError(getStreamsOptions.networkType);
        }
    };
};
var SHA3_NULL_S = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';
var isHexStrict = function(hex) {
    return /^(-)?0x[0-9a-f]*$/i.test(hex);
};
var sha3 = function(value) {
    var bufferValue;
    if (isHexStrict(value) && /^0x/i.test(value.toString())) {
        bufferValue = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ethereumjs$2d$util$2f$dist$2e$browser$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBuffer"])(value);
    } else {
        // Assume value is an arbitrary string
        bufferValue = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(value, 'utf-8');
    }
    var returnValue = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ethereumjs$2d$util$2f$dist$2e$browser$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bufferToHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ethereumjs$2d$util$2f$dist$2e$browser$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keccak256"])(bufferValue));
    if (returnValue === SHA3_NULL_S) {
        return null;
    }
    return returnValue;
};
var StreamsConfig = {
    streamsSecret: {
        name: 'streamsSecret',
        defaultValue: null
    }
};
var makeVerifySignature = function(config) {
    return function(_a) {
        var body = _a.body, signature = _a.signature;
        var secret = config.get(StreamsConfig.streamsSecret);
        if (!secret) {
            secret = config.get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ApiUtilsConfig"].apiKey);
        }
        if (!secret) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MoralisStreamError"]({
                code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StreamErrorCode"].GENERIC_STREAM_ERROR,
                message: 'Unable to verify signature without an api key or streams secret'
            });
        }
        var generatedSignature = sha3(JSON.stringify(body) + secret);
        if (signature !== generatedSignature) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MoralisStreamError"]({
                code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StreamErrorCode"].INVALID_SIGNATURE,
                message: 'Signature is not valid'
            });
        }
        return true;
    };
};
var makeAddAddressAptosStream = function(core, baseUrl, _a) {
    _a.networkType;
    var options = __rest(_a, [
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addAddressAptosOperation"], baseUrl, core).fetch(options);
};
var makeAddAddressEvmStream = function(core, baseUrl, _a) {
    _a.networkType;
    var options = __rest(_a, [
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addAddressEvmOperation"], baseUrl, core).fetch(options);
};
var makeAddAddress = function(core, baseUrl) {
    return function(addAddressOptions) {
        switch(addAddressOptions.networkType){
            case StreamNetwork.APTOS:
                return makeAddAddressAptosStream(core, baseUrl, addAddressOptions);
            case StreamNetwork.EVM:
                return makeAddAddressEvmStream(core, baseUrl, addAddressOptions);
            default:
                if (addAddressOptions.networkType === undefined) {
                    return makeAddAddressEvmStream(core, baseUrl, addAddressOptions);
                }
                throw new IncorrectNetworkError(addAddressOptions.networkType);
        }
    };
};
var makeUpdateAptosStreamStatus = function(core, baseUrl, _a) {
    _a.networkType;
    var options = __rest(_a, [
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["updateStreamStatusAptosOperation"], baseUrl, core).fetch(options);
};
var makeUpdateEvmStreamStatus = function(core, baseUrl, _a) {
    _a.networkType;
    var options = __rest(_a, [
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["updateStreamStatusEvmOperation"], baseUrl, core).fetch(options);
};
var makeUpdateStreamStatus = function(core, baseUrl) {
    return function(updateStreamOptions) {
        switch(updateStreamOptions.networkType){
            case StreamNetwork.APTOS:
                return makeUpdateAptosStreamStatus(core, baseUrl, updateStreamOptions);
            case StreamNetwork.EVM:
                return makeUpdateEvmStreamStatus(core, baseUrl, updateStreamOptions);
            default:
                if (updateStreamOptions.networkType === undefined) {
                    return makeUpdateEvmStreamStatus(core, baseUrl, updateStreamOptions);
                }
                throw new IncorrectNetworkError(updateStreamOptions.networkType);
        }
    };
};
var hasAbis = function(webhookData) {
    if (!webhookData.abi || webhookData.abi.length < 1) {
        return false;
    }
    return true;
};
var isWebhook = function(webhookData) {
    if (typeof webhookData !== 'object' || webhookData === null || !('logs' in webhookData)) {
        return false;
    }
    return true;
};
var CollectionNameBuilder = function() {
    function CollectionNameBuilder() {
        this.cache = {};
        this.cacheLimit = 256;
    }
    CollectionNameBuilder.prototype.build = function(tag) {
        var result = this.cache[tag];
        if (!result) {
            result = this.process(tag);
            if (this.cacheLimit > 0) {
                // Simple anti DDOS protection.
                this.cache[tag] = result;
                this.cacheLimit--;
            }
        }
        return result;
    };
    CollectionNameBuilder.prototype.process = function(tag) {
        var parts = tag.split(/[^a-zA-Z0-9_]/).filter(function(p) {
            return !!p;
        }).map(function(p) {
            return p.substring(0, 1).toUpperCase() + p.substring(1).toLowerCase();
        });
        if (parts.length < 1) {
            throw new Error("Cannot build table name from value \"".concat(tag, "\""));
        }
        return parts.join('');
    };
    return CollectionNameBuilder;
}();
var SimpleProcessor = function() {
    function SimpleProcessor(collectionNameBuilder, documentBuilder) {
        this.collectionNameBuilder = collectionNameBuilder;
        this.documentBuilder = documentBuilder;
    }
    SimpleProcessor.prototype.process = function(items, batch) {
        var updates = [];
        if (items) {
            for(var _i = 0, items_1 = items; _i < items_1.length; _i++){
                var item = items_1[_i];
                var document_1 = this.documentBuilder(item, batch.block, batch.confirmed, batch.chainId);
                updates.push({
                    collectionName: this.collectionNameBuilder.build(batch.tag),
                    document: document_1
                });
            }
        }
        return updates;
    };
    return SimpleProcessor;
}();
var Sha256 = function() {
    function Sha256() {}
    Sha256.hash = function(value) {
        var bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$strings$2f$lib$2e$esm$2f$utf8$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toUtf8Bytes"])(value);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$sha2$2f$lib$2e$esm$2f$sha2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sha256"])(bytes);
    };
    return Sha256;
}();
var LogRelatedId = function() {
    function LogRelatedId() {}
    LogRelatedId.create = function(chainId, transactionHash, logIndex) {
        var safeTransactionHash = transactionHash.toLowerCase();
        return Sha256.hash("".concat(chainId, ";").concat(safeTransactionHash, ";").concat(logIndex));
    };
    return LogRelatedId;
}();
var TriggerItemsBuilder = function() {
    function TriggerItemsBuilder() {}
    TriggerItemsBuilder.build = function(triggers) {
        if (!triggers || triggers.length === 0) {
            return undefined;
        }
        return triggers.map(function(trigger) {
            return {
                name: String(trigger.name),
                value: convertValue(trigger.value)
            };
        });
    };
    return TriggerItemsBuilder;
}();
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function convertValue(value) {
    var type = typeof value;
    if (type === 'string' || type === 'number' || type === 'boolean') {
        return value;
    }
    if (Array.isArray(value)) {
        return value.map(convertValue);
    }
    return String(value);
}
var Erc20TransferDocumentBuilder = function() {
    function Erc20TransferDocumentBuilder() {}
    Erc20TransferDocumentBuilder.build = function(transfer, block, confirmed, chainId) {
        var chain = Number(chainId);
        var document = {
            id: LogRelatedId.create(chain, transfer.transactionHash, transfer.logIndex),
            transactionHash: transfer.transactionHash,
            contract: transfer.contract,
            logIndex: transfer.logIndex,
            from: transfer.from,
            to: transfer.to,
            value: transfer.value,
            tokenDecimals: parseInt(transfer.tokenDecimals, 10),
            tokenName: transfer.tokenName,
            tokenSymbol: transfer.tokenSymbol,
            blockHash: block.hash,
            blockTimestamp: parseInt(block.timestamp, 10),
            blockNumber: parseInt(block.number, 10),
            confirmed: confirmed,
            chainId: chain,
            triggers: TriggerItemsBuilder.build(transfer.triggers)
        };
        return document;
    };
    return Erc20TransferDocumentBuilder;
}();
var Erc20TransfersProcessor = function() {
    function Erc20TransfersProcessor(collectionNameBuilder) {
        this.collectionNameBuilder = collectionNameBuilder;
        this.simpleProcessor = new SimpleProcessor(this.collectionNameBuilder, Erc20TransferDocumentBuilder.build);
    }
    Erc20TransfersProcessor.prototype.process = function(batch) {
        return this.simpleProcessor.process(batch.erc20Transfers, batch);
    };
    return Erc20TransfersProcessor;
}();
var Erc20ApprovalDocumentBuilder = function() {
    function Erc20ApprovalDocumentBuilder() {}
    Erc20ApprovalDocumentBuilder.build = function(approval, block, confirmed, chainId) {
        var chain = Number(chainId);
        var document = {
            id: LogRelatedId.create(chain, approval.transactionHash, approval.logIndex),
            transactionHash: approval.transactionHash,
            contract: approval.contract,
            logIndex: approval.logIndex,
            owner: approval.owner,
            spender: approval.spender,
            value: approval.value,
            tokenDecimals: parseInt(approval.tokenDecimals, 10),
            tokenName: approval.tokenName,
            tokenSymbol: approval.tokenSymbol,
            blockHash: block.hash,
            blockTimestamp: parseInt(block.timestamp, 10),
            blockNumber: parseInt(block.number, 10),
            confirmed: confirmed,
            chainId: chain,
            triggers: TriggerItemsBuilder.build(approval.triggers)
        };
        return document;
    };
    return Erc20ApprovalDocumentBuilder;
}();
var Erc20ApprovalsProcessor = function() {
    function Erc20ApprovalsProcessor(collectionNameBuilder) {
        this.collectionNameBuilder = collectionNameBuilder;
        this.processor = new SimpleProcessor(this.collectionNameBuilder, Erc20ApprovalDocumentBuilder.build);
    }
    Erc20ApprovalsProcessor.prototype.process = function(batch) {
        return this.processor.process(batch.erc20Approvals, batch);
    };
    return Erc20ApprovalsProcessor;
}();
var TxRelatedId = function() {
    function TxRelatedId() {}
    TxRelatedId.create = function(chainId, transactionHash) {
        var safeTransactionHash = transactionHash.toLowerCase();
        return Sha256.hash("".concat(chainId, ";").concat(safeTransactionHash));
    };
    return TxRelatedId;
}();
var InternalTxDocumentBuilder = function() {
    function InternalTxDocumentBuilder() {}
    InternalTxDocumentBuilder.build = function(tx, block, confirmed, chainId) {
        var chain = Number(chainId);
        return {
            id: TxRelatedId.create(chain, tx.transactionHash),
            hash: tx.transactionHash,
            chainId: chain,
            from: tx.from,
            to: tx.to,
            value: tx.value,
            gas: parseInt(tx.gas || '0', 10),
            blockHash: block.hash,
            blockTimestamp: parseInt(block.timestamp, 10),
            blockNumber: parseInt(block.number, 10),
            confirmed: confirmed
        };
    };
    return InternalTxDocumentBuilder;
}();
var InternalTxsProcessor = function() {
    function InternalTxsProcessor(collectionNameBuilder) {
        this.collectionNameBuilder = collectionNameBuilder;
        this.simpleProcessor = new SimpleProcessor(this.collectionNameBuilder, InternalTxDocumentBuilder.build);
    }
    InternalTxsProcessor.prototype.process = function(batch) {
        return this.simpleProcessor.process(batch.txsInternal, batch);
    };
    return InternalTxsProcessor;
}();
var LogDocumentValueFormatter = function() {
    function LogDocumentValueFormatter() {}
    LogDocumentValueFormatter.format = function(param) {
        switch(param.type){
            case 'string':
                return param.value;
            case 'address':
                return param.value.toLowerCase();
            default:
                if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$bignumber$2f$lib$2e$esm$2f$bignumber$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BigNumber"].isBigNumber(param.value)) {
                    return param.value.toString();
                }
                return param.value.toString();
        }
    };
    return LogDocumentValueFormatter;
}();
var ParamNameResolver = function() {
    function ParamNameResolver(restrictedNames) {
        this.restrictedNames = restrictedNames;
        this.usedNames = [];
    }
    ParamNameResolver.prototype.iterate = function(object, callback) {
        var _this = this;
        // We need to always keep parameters in the same order
        // because the RowParamNameResolver is order-sensitive.
        var sortedNames = Object.keys(object).sort(function(a, b) {
            return a.localeCompare(b);
        });
        sortedNames.forEach(function(name) {
            var safeName = _this.resolve(name);
            callback(safeName, object[name]);
        });
    };
    ParamNameResolver.prototype.resolve = function(name) {
        if (this.isUsed(name)) {
            do {
                name = "_".concat(name);
            }while (this.isUsed(name))
        }
        this.usedNames.push(name);
        return name;
    };
    ParamNameResolver.prototype.isUsed = function(name) {
        return this.restrictedNames.includes(name) || this.usedNames.includes(name);
    };
    return ParamNameResolver;
}();
var paramNames = [
    'id',
    'name',
    'logIndex',
    'transactionHash',
    'address',
    'blockHash',
    'blockTimestamp',
    'blockNumber',
    'confirmed',
    'chainId',
    'triggers'
];
var restrictedParamNames = __spreadArray(__spreadArray([], paramNames, true), [
    // Some extra names
    '_id',
    'uniqueId',
    'updatedAt',
    'createdAt',
    'user',
    'userId'
], false);
var LogDocumentBuilder = function() {
    function LogDocumentBuilder() {}
    LogDocumentBuilder.build = function(log, parsedLog, block, confirmed, chainId) {
        var nameResolver = new ParamNameResolver(restrictedParamNames);
        var chain = Number(chainId);
        var document = {
            id: LogRelatedId.create(chain, log.transactionHash, log.logIndex),
            name: parsedLog.name,
            logIndex: parseInt(log.logIndex, 10),
            transactionHash: log.transactionHash,
            address: log.address,
            blockHash: block.hash,
            blockTimestamp: parseInt(block.timestamp, 10),
            blockNumber: parseInt(block.number, 10),
            confirmed: confirmed,
            chainId: chain,
            triggers: TriggerItemsBuilder.build(log.triggers)
        };
        nameResolver.iterate(parsedLog.params, function(safeParamName, paramValue) {
            document[safeParamName] = LogDocumentValueFormatter.format(paramValue);
        });
        return document;
    };
    return LogDocumentBuilder;
}();
var LogParser = function() {
    function LogParser(abiItems) {
        this.abiInterface = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$abi$2f$lib$2e$esm$2f$interface$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Interface"](abiItems);
    }
    LogParser.prototype.read = function(log) {
        // Solidity supports max 3 topics. https://docs.soliditylang.org/en/latest/contracts.html#events
        var topics = [
            log.topic0,
            log.topic1,
            log.topic2,
            log.topic3
        ].filter(function(t) {
            return t !== null;
        });
        // Do not call the `this.abiInterface.parseLog()` method here! The @ethersproject/abi package (5.7.0) has a bug,
        // that doesn't return `args` with named keys in a specific case. That problem doesn't occur when we call directly the decodeEventLog() method.
        var eventFragment = this.abiInterface.getEvent(topics[0]);
        var args = this.abiInterface.decodeEventLog(eventFragment, log.data, topics);
        var params = {};
        eventFragment.inputs.forEach(function(input, index) {
            var type = input.type, name = input.name;
            var value = args[index];
            if (value instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$abi$2f$lib$2e$esm$2f$interface$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Indexed"]) {
                value = value.hash;
            }
            params[name] = {
                type: type,
                value: value
            };
        });
        return {
            name: eventFragment.name,
            params: params
        };
    };
    return LogParser;
}();
var LogsProcessor = function() {
    function LogsProcessor(collectionNameBuilder) {
        this.collectionNameBuilder = collectionNameBuilder;
    }
    LogsProcessor.prototype.process = function(batch) {
        var updates = [];
        if (batch.abi.length < 1) {
            return updates;
        }
        var logParser = new LogParser(batch.abi);
        for(var _i = 0, _a = batch.logs; _i < _a.length; _i++){
            var log = _a[_i];
            var logParams = logParser.read(log);
            var document_1 = LogDocumentBuilder.build(log, logParams, batch.block, batch.confirmed, batch.chainId);
            updates.push({
                collectionName: this.collectionNameBuilder.build(batch.tag),
                document: document_1
            });
        }
        return updates;
    };
    return LogsProcessor;
}();
var NftTransferDocumentBuilder = function() {
    function NftTransferDocumentBuilder() {}
    NftTransferDocumentBuilder.build = function(transfer, block, confirmed, chainId) {
        var chain = Number(chainId);
        var document = {
            id: LogRelatedId.create(chain, transfer.transactionHash, transfer.logIndex),
            transactionHash: transfer.transactionHash,
            contract: transfer.contract,
            logIndex: transfer.logIndex,
            operator: transfer.operator,
            from: transfer.from,
            to: transfer.to,
            tokenId: transfer.tokenId,
            amount: transfer.amount,
            tokenContractType: transfer.tokenContractType,
            tokenName: transfer.tokenName,
            tokenSymbol: transfer.tokenSymbol,
            blockHash: block.hash,
            blockTimestamp: parseInt(block.timestamp, 10),
            blockNumber: parseInt(block.number, 10),
            confirmed: confirmed,
            chainId: chain,
            triggers: TriggerItemsBuilder.build(transfer.triggers)
        };
        return document;
    };
    return NftTransferDocumentBuilder;
}();
var NftTransfersProcessor = function() {
    function NftTransfersProcessor(collectionNameBuilder) {
        this.collectionNameBuilder = collectionNameBuilder;
        this.simpleProcessor = new SimpleProcessor(this.collectionNameBuilder, NftTransferDocumentBuilder.build);
    }
    NftTransfersProcessor.prototype.process = function(batch) {
        return this.simpleProcessor.process(batch.nftTransfers, batch);
    };
    return NftTransfersProcessor;
}();
var NftApprovalDocumentBuilder = function() {
    function NftApprovalDocumentBuilder() {}
    NftApprovalDocumentBuilder.build = function(approval, block, confirmed, chainId) {
        var chain = Number(chainId);
        var document = {
            id: LogRelatedId.create(chain, approval.transactionHash, approval.logIndex),
            transactionHash: approval.transactionHash,
            contract: approval.contract,
            logIndex: approval.logIndex,
            operator: approval.operator,
            account: approval.account,
            approvedAll: approval.approvedAll,
            tokenId: approval.tokenId,
            tokenContractType: approval.tokenContractType,
            tokenName: approval.tokenName,
            tokenSymbol: approval.tokenSymbol,
            blockHash: block.hash,
            blockTimestamp: parseInt(block.timestamp, 10),
            blockNumber: parseInt(block.number, 10),
            confirmed: confirmed,
            chainId: chain
        };
        return document;
    };
    return NftApprovalDocumentBuilder;
}();
var NftApprovalsProcessor = function() {
    function NftApprovalsProcessor(collectionNameBuilder) {
        this.collectionNameBuilder = collectionNameBuilder;
        this.simpleProcessor = new SimpleProcessor(this.collectionNameBuilder, NftApprovalDocumentBuilder.build);
    }
    NftApprovalsProcessor.prototype.process = function(batch) {
        return this.simpleProcessor.process(batch.nftTokenApprovals, batch);
    };
    return NftApprovalsProcessor;
}();
var TxDocumentBuilder = function() {
    function TxDocumentBuilder() {}
    TxDocumentBuilder.build = function(tx, block, confirmed, chainId) {
        var chain = Number(chainId);
        return {
            id: TxRelatedId.create(chain, tx.hash),
            hash: tx.hash,
            chainId: chain,
            transactionIndex: parseInt(tx.transactionIndex, 10),
            gas: parseInt(tx.gas, 10),
            gasPrice: parseInt(tx.gasPrice, 10),
            nonce: parseInt(tx.nonce, 10),
            fromAddress: tx.fromAddress,
            toAddress: tx.toAddress,
            value: tx.value || '0',
            input: tx.input,
            type: parseInt(tx.type, 10),
            receiptStatus: parseInt(tx.receiptStatus, 10),
            receiptGasUsed: parseInt(tx.receiptGasUsed, 10),
            receiptCumulativeGasUsed: parseInt(tx.receiptCumulativeGasUsed, 10),
            blockHash: block.hash,
            blockTimestamp: parseInt(block.timestamp, 10),
            blockNumber: parseInt(block.number, 10),
            confirmed: confirmed,
            triggers: TriggerItemsBuilder.build(tx.triggers)
        };
    };
    return TxDocumentBuilder;
}();
var TxsProcessor = function() {
    function TxsProcessor(collectionNameBuilder) {
        this.collectionNameBuilder = collectionNameBuilder;
        this.processor = new SimpleProcessor(this.collectionNameBuilder, TxDocumentBuilder.build);
    }
    TxsProcessor.prototype.process = function(batch) {
        return this.processor.process(batch.txs, batch);
    };
    return TxsProcessor;
}();
var BatchProcessor = function() {
    function BatchProcessor(erc20ApprovalsProcessor, erc20TransfersProcessor, internalTxsProcessor, logsProcessor, nftApprovalsProcessor, nftTransfersProcessor, txsProcessor) {
        this.erc20ApprovalsProcessor = erc20ApprovalsProcessor;
        this.erc20TransfersProcessor = erc20TransfersProcessor;
        this.internalTxsProcessor = internalTxsProcessor;
        this.logsProcessor = logsProcessor;
        this.nftApprovalsProcessor = nftApprovalsProcessor;
        this.nftTransfersProcessor = nftTransfersProcessor;
        this.txsProcessor = txsProcessor;
    }
    BatchProcessor.create = function() {
        var nameBuilder = new CollectionNameBuilder();
        return new BatchProcessor(new Erc20ApprovalsProcessor(nameBuilder), new Erc20TransfersProcessor(nameBuilder), new InternalTxsProcessor(nameBuilder), new LogsProcessor(nameBuilder), new NftApprovalsProcessor(nameBuilder), new NftTransfersProcessor(nameBuilder), new TxsProcessor(nameBuilder));
    };
    BatchProcessor.prototype.process = function(batch) {
        var _this = this;
        return {
            erc20Approvals: function() {
                return _this.erc20ApprovalsProcessor.process(batch);
            },
            erc20Transfers: function() {
                return _this.erc20TransfersProcessor.process(batch);
            },
            internalTxs: function() {
                return _this.internalTxsProcessor.process(batch);
            },
            logs: function() {
                return _this.logsProcessor.process(batch);
            },
            nftApprovals: function() {
                return _this.nftApprovalsProcessor.process(batch);
            },
            nftTransfers: function() {
                return _this.nftTransfersProcessor.process(batch);
            },
            txs: function() {
                return _this.txsProcessor.process(batch);
            }
        };
    };
    return BatchProcessor;
}();
var parseLog = function(webhookData) {
    if (!isWebhook(webhookData)) {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MoralisStreamError"]({
            code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StreamErrorCode"].GENERIC_STREAM_ERROR,
            message: 'Cannot decode the logs. No logs found in the webhook, or invalid webhook provided.'
        });
    }
    if (!hasAbis(webhookData)) {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MoralisStreamError"]({
            code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StreamErrorCode"].GENERIC_STREAM_ERROR,
            message: 'Cannot decode the logs. No abis found in the provided webhook.'
        });
    }
    var logs = webhookData.logs, abi = webhookData.abi;
    var decodedLogs = [];
    logs.forEach(function(currentLog) {
        var params = new LogParser(abi).read(currentLog).params;
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        var decodedLog = {};
        for(var key in params){
            if (Object.prototype.hasOwnProperty.call(params, key)) {
                var element = params[key];
                decodedLog[key] = element.value;
            }
        }
        decodedLogs.push(decodedLog);
    });
    return decodedLogs;
};
var makeGetAptosAddresses = function(core, baseUrl, _a) {
    _a.networkType;
    var options = __rest(_a, [
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressesAptosOperation"], baseUrl, core).fetch(options);
};
var makeGetEvmAddresses = function(core, baseUrl, _a) {
    _a.networkType;
    var options = __rest(_a, [
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddressesEvmOperation"], baseUrl, core).fetch(options);
};
var makeGetAddresses = function(core, baseUrl) {
    return function(getAddressesOptions) {
        switch(getAddressesOptions.networkType){
            case StreamNetwork.APTOS:
                return makeGetAptosAddresses(core, baseUrl, getAddressesOptions);
            case StreamNetwork.EVM:
                return makeGetEvmAddresses(core, baseUrl, getAddressesOptions);
            default:
                if (getAddressesOptions.networkType === undefined) {
                    return makeGetEvmAddresses(core, baseUrl, getAddressesOptions);
                }
                throw new IncorrectNetworkError(getAddressesOptions.networkType);
        }
    };
};
var makeDeleteAddressAptosStream = function(core, baseUrl, _a) {
    _a.networkType;
    var options = __rest(_a, [
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deleteAddressAptosOperation"], baseUrl, core).fetch(options);
};
var makeDeleteAddressEvmStream = function(core, baseUrl, _a) {
    _a.networkType;
    var options = __rest(_a, [
        "networkType"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deleteAddressEvmOperation"], baseUrl, core).fetch(options);
};
var makeDeleteAddress = function(core, baseUrl) {
    return function(deleteAddressOptions) {
        switch(deleteAddressOptions.networkType){
            case StreamNetwork.APTOS:
                return makeDeleteAddressAptosStream(core, baseUrl, deleteAddressOptions);
            case StreamNetwork.EVM:
                return makeDeleteAddressEvmStream(core, baseUrl, deleteAddressOptions);
            default:
                if (deleteAddressOptions.networkType === undefined) {
                    return makeDeleteAddressEvmStream(core, baseUrl, deleteAddressOptions);
                }
                throw new IncorrectNetworkError(deleteAddressOptions.networkType);
        }
    };
};
var makeGetAptosStream = function(core, baseUrl, _a) {
    _a.networkType;
    _a.network;
    var options = __rest(_a, [
        "networkType",
        "network"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStreamAptosOperation"], baseUrl, core).fetch(options);
};
var makeGetEvmStream = function(core, baseUrl, _a) {
    _a.networkType;
    _a.network;
    var options = __rest(_a, [
        "networkType",
        "network"
    ]);
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStreamEvmOperation"], baseUrl, core).fetch(options);
};
var makeGetStreamById = function(core, baseUrl) {
    return function(getStreamOptions) {
        // Backwards compatibility for the 'network' parameter
        if (!getStreamOptions.networkType && getStreamOptions.network) {
            getStreamOptions.networkType = getStreamOptions.network;
        }
        switch(getStreamOptions.networkType){
            case StreamNetwork.APTOS:
                return makeGetAptosStream(core, baseUrl, getStreamOptions);
            case StreamNetwork.EVM:
                return makeGetEvmStream(core, baseUrl, getStreamOptions);
            default:
                if (getStreamOptions.networkType === undefined) {
                    return makeGetEvmStream(core, baseUrl, getStreamOptions);
                }
                throw new IncorrectNetworkError(getStreamOptions.networkType);
        }
    };
};
var StreamsConfigSetup = function() {
    function StreamsConfigSetup() {}
    StreamsConfigSetup.register = function(config) {
        config.registerKey(StreamsConfig.streamsSecret);
    };
    return StreamsConfigSetup;
}();
var BASE_URL = 'https://api.moralis-streams.com';
var Streams = function(_super) {
    __extends(Streams, _super);
    function Streams(core) {
        var _this = _super.call(this, Streams.moduleName, core, function() {
            return BASE_URL;
        }) || this;
        _this.add = makeCreateStream(_this.core, BASE_URL);
        _this.update = makeUpdateStream(_this.core, BASE_URL);
        _this.delete = makeDeleteStream(_this.core, BASE_URL);
        _this.getAll = makeGetStreams(_this.core, BASE_URL);
        _this.getById = makeGetStreamById(_this.core, BASE_URL);
        _this.updateStatus = makeUpdateStreamStatus(_this.core, BASE_URL);
        _this.addAddress = makeAddAddress(_this.core, BASE_URL);
        _this.getAddresses = makeGetAddresses(_this.core, BASE_URL);
        _this.deleteAddress = makeDeleteAddress(_this.core, BASE_URL);
        _this.getHistory = _this.createPaginatedFetcher(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getHistoryOperation"]);
        _this.getLogs = _this.createPaginatedFetcher(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLogsOperation"]);
        _this.retry = _this.createFetcher(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["replayHistoryOperation"]);
        _this._getStats = _this.createFetcher(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStatsOperation"]);
        _this.getStats = function() {
            return _this._getStats({});
        };
        _this.getStatsById = _this.createFetcher(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStatsByIdOperation"]);
        _this.setSettings = _this.createFetcher(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setSettingsOperation"]);
        _this._readSettings = _this.createFetcher(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$streams$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getSettingsOperation"]);
        _this.readSettings = function() {
            return _this._readSettings({});
        };
        _this.verifySignature = function(options) {
            return makeVerifySignature(_this.core.config)(options);
        };
        _this.parsedLogs = function(webhookData) {
            return parseLog(webhookData);
        };
        return _this;
    }
    Streams.create = function(core) {
        return new Streams(core !== null && core !== void 0 ? core : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CoreProvider"].getDefault());
    };
    Streams.prototype.setup = function() {
        StreamsConfigSetup.register(this.core.config);
    };
    Streams.prototype.start = function() {
    // Nothing
    };
    Streams.prototype.createFetcher = function(operation) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](operation, BASE_URL, this.core).fetch;
    };
    Streams.prototype.createPaginatedFetcher = function(operation) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](operation, BASE_URL, this.core).fetch;
    };
    Streams.moduleName = 'streams';
    return Streams;
}(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ApiModule"]);
;
}}),
"[project]/node_modules/@moralisweb3/evm-api/lib/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "EvmApi": (()=>EvmApi)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/api-utils/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-evm-utils/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-core/lib/esm/index.js [app-client] (ecmascript)");
;
;
;
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var EvmApiConfig = {
    evmApiBaseUrl: {
        name: 'evmApiBaseUrl',
        defaultValue: 'https://deep-index.moralis.io/api/v2.2'
    }
};
var EvmApiConfigSetup = function() {
    function EvmApiConfigSetup() {}
    EvmApiConfigSetup.register = function(config) {
        config.registerKey(EvmApiConfig.evmApiBaseUrl);
    };
    return EvmApiConfigSetup;
}();
var ClientEvmApi = function(_super) {
    __extends(ClientEvmApi, _super);
    function ClientEvmApi() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.block = {
            getBlock: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["NullableOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBlockOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getDateToBlock: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDateToBlockOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getBlockStats: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetBlockStatsOperation"], _this.baseUrl, _this.core).fetch(request, null);
            }
        };
        _this.events = {
            getContractEvents: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getContractEventsOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getContractLogs: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getContractLogsOperation"], _this.baseUrl, _this.core).fetch(request);
            }
        };
        _this.nft = {
            getContractNFTs: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getContractNFTsOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getMultipleNFTs: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getMultipleNFTsOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getNFTContractMetadata: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["NullableOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getNFTContractMetadataOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getNFTContractTransfers: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getNFTContractTransfersOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getNFTLowestPrice: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["NullableOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getNFTLowestPriceOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getNFTMetadata: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["NullableOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getNFTMetadataOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getNFTOwners: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getNFTOwnersOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getNFTTokenIdOwners: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getNFTTokenIdOwnersOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getNFTTransfersByBlock: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getNFTTransfersByBlockOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getNFTTransfersFromToBlock: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getNFTTransfersFromToBlockOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getNFTTransfers: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getNFTTransfersOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getWalletNFTCollections: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getWalletNFTCollectionsOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getWalletNFTs: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getWalletNFTsOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getWalletNFTTransfers: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getWalletNFTTransfersOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            reSyncMetadata: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["reSyncMetadataOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            syncNFTContract: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["syncNFTContractOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getNFTTrades: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetNFTTradesOperation"], _this.baseUrl, _this.core).fetch(request, null);
            },
            getNFTTradesByToken: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetNFTTradesByTokenOperation"], _this.baseUrl, _this.core).fetch(request, null);
            },
            getNFTContractSalePrices: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetNFTContractSalePricesOperation"], _this.baseUrl, _this.core).fetch(request, null);
            },
            getNFTSalePrices: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetNFTSalePricesOperation"], _this.baseUrl, _this.core).fetch(request, null);
            },
            getNFTCollectionStats: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetNFTCollectionStatsOperation"], _this.baseUrl, _this.core).fetch(request, null);
            },
            getNFTTokenStats: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetNFTTokenStatsOperation"], _this.baseUrl, _this.core).fetch(request, null);
            }
        };
        _this.transaction = {
            getInternalTransactions: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getInternalTransactionsOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getTransaction: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["NullableOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTransactionOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getTransactionVerbose: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["NullableOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTransactionVerboseOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getWalletTransactions: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getWalletTransactionsOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getWalletTransactionsVerbose: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getWalletTransactionsVerboseOperation"], _this.baseUrl, _this.core).fetch(request);
            }
        };
        _this.balance = {
            getNativeBalance: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getNativeBalanceOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getNativeBalancesForAddresses: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getNativeBalancesForAddressesOperation"], _this.baseUrl, _this.core).fetch(request);
            }
        };
        _this.defi = {
            getPairAddress: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPairAddressOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getPairReserves: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPairReservesOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getPairPrice: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetPairPriceOperation"], _this.baseUrl, _this.core).fetch(request, null);
            }
        };
        _this.token = {
            getTokenAllowance: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTokenAllowanceOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getTokenMetadataBySymbol: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTokenMetadataBySymbolOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getTokenMetadata: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTokenMetadataOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getTokenPrice: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTokenPriceOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getTokenTransfers: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTokenTransfersOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getWalletTokenBalances: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getWalletTokenBalancesOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getWalletTokenTransfers: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getWalletTokenTransfersOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getMultipleTokenPrices: function(request, body) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetMultipleTokenPricesOperation"], _this.baseUrl, _this.core).fetch(request, body);
            },
            getTokenOwners: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetTokenOwnersOperation"], _this.baseUrl, _this.core).fetch(request, null);
            },
            getTokenStats: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetTokenStatsOperation"], _this.baseUrl, _this.core).fetch(request, null);
            },
            getTopProfitableWalletPerToken: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetTopProfitableWalletPerTokenOperation"], _this.baseUrl, _this.core).fetch(request, null);
            }
        };
        _this.resolve = {
            resolveAddress: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["NullableOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveAddressOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            resolveDomain: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["NullableOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveDomainOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            resolveENSDomain: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["NullableOperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveENSDomainOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            resolveAddressToDomain: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ResolveAddressToDomainOperation"], _this.baseUrl, _this.core).fetch(request, null);
            }
        };
        _this.utils = {
            runContractFunction: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["runContractFunctionOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            web3ApiVersion: function() {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Web3ApiVersionOperation"], _this.baseUrl, _this.core).fetch({}, null);
            },
            endpointWeights: function() {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EndpointWeightsOperation"], _this.baseUrl, _this.core).fetch({}, null);
            },
            reviewContracts: function(request, body) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReviewContractsOperation"], _this.baseUrl, _this.core).fetch(request, body);
            }
        };
        _this.ipfs = {
            uploadFolder: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["uploadFolderOperation"], _this.baseUrl, _this.core).fetch(request);
            }
        };
        _this.wallets = {
            getWalletHistory: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetWalletHistoryOperation"], _this.baseUrl, _this.core).fetch(request, null);
            },
            getWalletTokenBalancesPrice: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PaginatedOperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetWalletTokenBalancesPriceOperation"], _this.baseUrl, _this.core).fetch(request, null);
            },
            getWalletNetWorth: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetWalletNetWorthOperation"], _this.baseUrl, _this.core).fetch(request, null);
            },
            getDefiSummary: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetDefiSummaryOperation"], _this.baseUrl, _this.core).fetch(request, null);
            },
            getDefiPositionsByProtocol: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetDefiPositionsByProtocolOperation"], _this.baseUrl, _this.core).fetch(request, null);
            },
            getDefiPositionsSummary: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetDefiPositionsSummaryOperation"], _this.baseUrl, _this.core).fetch(request, null);
            },
            getWalletActiveChains: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetWalletActiveChainsOperation"], _this.baseUrl, _this.core).fetch(request, null);
            },
            getWalletStats: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetWalletStatsOperation"], _this.baseUrl, _this.core).fetch(request, null);
            },
            getWalletProfitabilitySummary: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetWalletProfitabilitySummaryOperation"], _this.baseUrl, _this.core).fetch(request, null);
            },
            getWalletProfitability: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetWalletProfitabilityOperation"], _this.baseUrl, _this.core).fetch(request, null);
            }
        };
        _this.marketData = {
            getTopERC20TokensByMarketCap: function() {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetTopERC20TokensByMarketCapOperation"], _this.baseUrl, _this.core).fetch({}, null);
            },
            getTopERC20TokensByPriceMovers: function() {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetTopERC20TokensByPriceMoversOperation"], _this.baseUrl, _this.core).fetch({}, null);
            },
            getTopNFTCollectionsByMarketCap: function() {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetTopNFTCollectionsByMarketCapOperation"], _this.baseUrl, _this.core).fetch({}, null);
            },
            getHottestNFTCollectionsByTradingVolume: function() {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetHottestNFTCollectionsByTradingVolumeOperation"], _this.baseUrl, _this.core).fetch({}, null);
            },
            getTopCryptoCurrenciesByMarketCap: function() {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetTopCryptoCurrenciesByMarketCapOperation"], _this.baseUrl, _this.core).fetch({}, null);
            },
            getTopCryptoCurrenciesByTradingVolume: function() {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$evm$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetTopCryptoCurrenciesByTradingVolumeOperation"], _this.baseUrl, _this.core).fetch({}, null);
            }
        };
        return _this;
    }
    return ClientEvmApi;
}(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ApiModule"]);
var EvmApi = function(_super) {
    __extends(EvmApi, _super);
    function EvmApi(core) {
        return _super.call(this, EvmApi.moduleName, core, function() {
            return core.config.get(EvmApiConfig.evmApiBaseUrl);
        }) || this;
    }
    EvmApi.create = function(core) {
        return new EvmApi(core !== null && core !== void 0 ? core : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CoreProvider"].getDefault());
    };
    EvmApi.prototype.setup = function() {
        EvmApiConfigSetup.register(this.core.config);
    };
    EvmApi.prototype.start = function() {
    // Nothing
    };
    EvmApi.moduleName = 'evmApi';
    return EvmApi;
}(ClientEvmApi);
;
}}),
"[project]/node_modules/@moralisweb3/sol-api/lib/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SolApi": (()=>SolApi)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/api-utils/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-sol-utils/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@moralisweb3/common-core/lib/esm/index.js [app-client] (ecmascript)");
;
;
;
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var ClientSolApi = function(_super) {
    __extends(ClientSolApi, _super);
    function ClientSolApi() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.account = {
            getBalance: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getBalanceOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getNFTs: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getNFTsOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getPortfolio: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPortfolioOperation"], _this.baseUrl, _this.core).fetch(request);
            },
            getSPL: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getSPLOperation"], _this.baseUrl, _this.core).fetch(request);
            }
        };
        _this.nft = {
            getNFTMetadata: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationResolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getNFTMetadataOperation"], _this.baseUrl, _this.core).fetch(request);
            }
        };
        _this.token = {
            getTokenPrice: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetTokenPriceOperation"], _this.baseUrl, _this.core).fetch(request, null);
            },
            getTokenMetadata: function(request) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$api$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OperationV3Resolver"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$sol$2d$utils$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GetTokenMetadataOperation"], _this.baseUrl, _this.core).fetch(request, null);
            }
        };
        return _this;
    }
    return ClientSolApi;
}(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ApiModule"]);
var SolApiConfig = {
    solApiBaseUrl: {
        name: 'solApiBaseUrl',
        defaultValue: 'https://solana-gateway.moralis.io'
    }
};
var EvmSolApiConfigSetup = function() {
    function EvmSolApiConfigSetup() {}
    EvmSolApiConfigSetup.register = function(config) {
        config.registerKey(SolApiConfig.solApiBaseUrl);
    };
    return EvmSolApiConfigSetup;
}();
var SolApi = function(_super) {
    __extends(SolApi, _super);
    function SolApi(core) {
        return _super.call(this, SolApi.moduleName, core, function() {
            return core.config.get(SolApiConfig.solApiBaseUrl);
        }) || this;
    }
    SolApi.create = function(core) {
        return new SolApi(core !== null && core !== void 0 ? core : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$moralisweb3$2f$common$2d$core$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CoreProvider"].getDefault());
    };
    SolApi.prototype.setup = function() {
        EvmSolApiConfigSetup.register(this.core.config);
    };
    SolApi.prototype.start = function() {
    // Nothing
    };
    SolApi.moduleName = 'solApi';
    return SolApi;
}(ClientSolApi);
;
}}),
}]);

//# sourceMappingURL=node_modules_%40moralisweb3_8a58ce._.js.map