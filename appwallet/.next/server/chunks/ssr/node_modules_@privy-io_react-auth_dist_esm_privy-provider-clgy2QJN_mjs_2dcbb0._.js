module.exports = {

"[project]/node_modules/@privy-io/react-auth/dist/esm/privy-provider-clgy2QJN.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "C": (()=>ka),
    "E": (()=>Ia),
    "P": (()=>Xa),
    "a": (()=>Oa),
    "b": (()=>Sa),
    "c": (()=>Va),
    "d": (()=>Ha),
    "e": (()=>Ka),
    "f": (()=>za),
    "g": (()=>Ba),
    "h": (()=>Ga),
    "i": (()=>qa),
    "j": (()=>$a),
    "k": (()=>Ya)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$device$2d$detect$2f$dist$2f$lib$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-device-detect/dist/lib.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$node_modules$2f$eventemitter3$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/node_modules/eventemitter3/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/errors.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$configuration$2f$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/configuration/context.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$plugins$2f$context$2f$PrivyPluginContext$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/plugins/context/PrivyPluginContext.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/screens/index.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/hooks/events-context.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$telegram$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/telegram.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/storage.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/constants.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/client/user.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/errors.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/utils/index.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$passkeys$2f$transformResponseToSnakeCase$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/passkeys/transformResponseToSnakeCase.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$sendCrossAppRequest$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/cross-app/sendCrossAppRequest.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/funding/index.mjs [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$eth$2f$getPublicClient$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/utils/eth/getPublicClient.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$plugins$2f$solana$2d$funding$2f$id$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/plugins/solana-funding/id.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$isBaseConnectedEthereumWallet$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/isBaseConnectedEthereumWallet.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$siwe$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/siwe.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$siws$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/siws.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$delegated$2d$actions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/embedded-wallets/delegated-actions.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$farcaster$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/farcaster.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$guest$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/guest.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$user$2f$shouldCreateEmbeddedEthWallet$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/user/shouldCreateEmbeddedEthWallet.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$user$2f$shouldCreateEmbeddedSolWallet$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/user/shouldCreateEmbeddedSolWallet.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$authFlow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/cross-app/authFlow.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$popupCrossAppAuthFlow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/cross-app/popupCrossAppAuthFlow.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$isEmbeddedWebview$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/isEmbeddedWebview.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/cross-app/index.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$oauth$2f$OAuthFlow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/oauth/OAuthFlow.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$embeddedWalletRecovery$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/embeddedWalletRecovery.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$popupOAuthFlow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/popupOAuthFlow.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$passkey$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/passkey.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$email$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/email.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$sms$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/sms.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$siwe$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/siwe.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/embedded-wallets/errors.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$prepareFundingModalData$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/funding/prepareFundingModalData.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$privy$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/hooks/privy-context.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$useWallets$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/hooks/useWallets.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$captcha$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/hooks/captcha-context.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$internal$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/hooks/internal-context.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$recent$2d$login$2f$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/recent-login/context.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$modal$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/hooks/modal-context.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$components$2f$Captcha$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/components/Captcha.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$styles$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/styles.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$components$2f$LoginModal$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/components/LoginModal.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$EmbeddedWalletIframe$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/embedded-wallets/EmbeddedWalletIframe.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$LandingScreen$2f$styles$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/screens/LandingScreen/styles.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$components$2f$TelegramLoginButton$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/components/TelegramLoginButton.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/hooks/index.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$solana$2f$transaction$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/embedded-wallets/solana/transaction.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$custom$2d$jwt$2d$account$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/custom-jwt-account.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mipd$2f$dist$2f$esm$2f$store$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/mipd/dist/esm/store.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$oauth$2f$detectCompletingOAuthFlow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/oauth/detectCompletingOAuthFlow.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$walletconnect$2d$v2$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/walletconnect-v2.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$solana$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/solana/index.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$mobile$2d$wallets$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/mobile-wallets.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$areWalletArraysEqual$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/areWalletArraysEqual.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$getAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/address/getAddress.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$caip2$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/caip2.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$isFundingEnabled$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/funding/isFundingEnabled.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$rpc$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/embedded-wallets/rpc/index.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$viem$2f$prepareTransactionRequest$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/viem/prepareTransactionRequest.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$solana$2f$transaction$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/solana/transaction.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$toDisplayFromAccountType$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/toDisplayFromAccountType.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$popup$2f$triggerPopup$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/popup/triggerPopup.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$providerTypes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/providerTypes.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$viem$2f$toViemTransactionSerializable$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/viem/toViemTransactionSerializable.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$rpc$2f$types$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/embedded-wallets/rpc/types.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$getRpcTimeout$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/getRpcTimeout.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$node_modules$2f$eventemitter3$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/node_modules/eventemitter3/index.mjs [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$solana$2f$SolanaNullConnector$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/solana/SolanaNullConnector.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$ethereum$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/ethereum/index.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$embedded$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/embedded.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$stored$2d$connection$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/stored-connection.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$injected$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/injected.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$metamask$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/metamask.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$ethereum$2f$EthereumNullConnector$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/ethereum/EthereumNullConnector.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$coinbase$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/coinbase.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$privyProxyProvider$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/privyProxyProvider.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$http$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/http.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/paths.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$passkeys$2f$transformOptionsToCamelCase$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/passkeys/transformOptionsToCamelCase.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$session$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/session.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$accessToken$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/accessToken.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$smart$2d$wallet$2d$helpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/smart-wallet-helpers.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$v4$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__v4$3e$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm-node/v4.js [app-ssr] (ecmascript) <export default as v4>");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
class Ia extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$node_modules$2f$eventemitter3$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["default"] {
    async handleSendTransaction(e) {
        if (!e.params || !Array.isArray(e.params)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$providerTypes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EmbeddedProviderError"](`Invalid params for ${e.method}`, 4200);
        let t = e.params[0];
        if (!await Va() || !this.address) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$providerTypes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EmbeddedProviderError"]("Disconnected", 4900);
        let { hash: a } = await Ga(t, {
            address: this.address
        });
        return a;
    }
    async handleSignTransaction(e) {
        if (!e.params || !Array.isArray(e.params)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$providerTypes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EmbeddedProviderError"](`Invalid params for ${e.method}`, 4200);
        let t = e.params[0];
        if (!await Va() || !this.address) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$providerTypes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EmbeddedProviderError"]("Disconnected", 4900);
        let { signature: a } = await za(t, {
            address: this.address
        });
        return a;
    }
    handleSwitchEthereumChain(e) {
        let t;
        if (!e.params || !Array.isArray(e.params)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$providerTypes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EmbeddedProviderError"](`Invalid params for ${e.method}`, 4200);
        if ("string" == typeof e.params[0]) t = e.params[0];
        else {
            if (!("chainId" in e.params[0]) || "string" != typeof e.params[0].chainId) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$providerTypes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EmbeddedProviderError"](`Invalid params for ${e.method}`, 4200);
            t = e.params[0].chainId;
        }
        this.chainId = Number(t), this.publicClient = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$eth$2f$getPublicClient$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPublicClient"])(this.chainId, this.chains, this.rpcConfig, {
            appId: this.appId
        }), this.emit("chainChanged", t);
    }
    async handlePersonalSign(e) {
        if (!e.params || !Array.isArray(e.params)) throw Error("Invalid params for personal_sign");
        let t = e.params[0], a = e.params[1], { signature: r } = await Ha({
            message: t
        }, {
            address: a
        });
        return r;
    }
    async handleSignedTypedData(e) {
        if (!e.params || !Array.isArray(e.params)) throw Error("Invalid params for eth_signTypedData_v4");
        let t = e.params[0], a = "string" == typeof e.params[1] ? JSON.parse(e.params[1]) : e.params[1], { signature: r } = await Ka((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["generateTypedDataWithDomainType"])(a), {
            address: t
        });
        return r;
    }
    async handleEstimateGas(e) {
        if (!e.params || !Array.isArray(e.params)) throw Error("Invalid params for eth_estimateGas");
        delete e.params[0].gasPrice, delete e.params[0].maxFeePerGas, delete e.params[0].maxPriorityFeePerGas;
        let t = {
            ...e.params[0],
            chainId: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toHex"])(this.chainId)
        };
        return await this.publicClient.estimateGas({
            account: t.from ?? this.address,
            ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$viem$2f$toViemTransactionSerializable$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toViemTransactionSerializable"])(t)
        });
    }
    async request(e) {
        switch(console.debug("Embedded1193Provider.request() called with args", e), e.method){
            case "eth_accounts":
            case "eth_requestAccounts":
                return this.address ? [
                    this.address
                ] : [];
            case "eth_chainId":
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toHex"])(this.chainId);
            case "eth_estimateGas":
                return this.handleEstimateGas(e);
            case "eth_sendTransaction":
                return this.handleSendTransaction(e);
            case "eth_signTransaction":
                return this.handleSignTransaction(e);
            case "wallet_switchEthereumChain":
                return this.handleSwitchEthereumChain(e);
            case "personal_sign":
                return this.handlePersonalSign(e);
            case "eth_signTypedData_v4":
                return this.handleSignedTypedData(e);
        }
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$rpc$2f$types$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isSupportedEthereumRpcMethod"])(e.method)) return this.publicClient.request({
            method: e.method,
            params: e.params
        });
        {
            let t = await Va();
            if (await qa(), !t || !this.address) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$providerTypes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EmbeddedProviderError"]("Disconnected", 4900);
            try {
                return (await this.walletProxy.rpc({
                    accessToken: t,
                    entropyId: this.entropyId,
                    entropyIdVerifier: this.entropyIdVerifier,
                    chainType: "ethereum",
                    hdWalletIndex: this.walletIndex,
                    request: {
                        method: e.method,
                        params: e.params
                    }
                })).response.data;
            } catch (e) {
                throw console.error(e), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$providerTypes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EmbeddedProviderError"]("Disconnected", 4900);
            }
        }
    }
    constructor({ walletProxy: e, address: t, entropyId: a, entropyIdVerifier: r, rpcConfig: n, chains: i, appId: o, chainId: s = 1, walletIndex: l }){
        super(), this.walletProxy = e, this.address = t, this.entropyId = a, this.entropyIdVerifier = r, this.chainId = s, this.rpcConfig = n, this.chains = i, this.publicClient = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$eth$2f$getPublicClient$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPublicClient"])(s, this.chains, n, {
            appId: o
        }), this.rpcTimeoutDuration = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$getRpcTimeout$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getRpcTimeout"])(n, "privy"), this.appId = o, this.walletIndex = l;
    }
}
class ka extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$node_modules$2f$eventemitter3$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["default"] {
    get wallets() {
        let e = new Set, t = this.walletConnectors.flatMap((e)=>e.wallets).sort((e, t)=>e.connectedAt && t.connectedAt ? t.connectedAt - e.connectedAt : 0).filter((t)=>{
            let a = `${t.address}${t.walletClientType}${t.connectorType}${t.meta.id}`;
            return !e.has(a) && (e.add(a), !0);
        }), a = t.findIndex((e)=>e.address === (this.activeWallet ? this.activeWallet : "unknown"));
        return a >= 0 && t.unshift(t.splice(a, 1)[0]), t;
    }
    async initialize(e) {
        if (this.initialized && !e) return;
        e && this.removeAllConnectors(), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CONNECTORS_STATE_KEY"]) && (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].getKeys().forEach((e)=>{
            e.startsWith("walletconnect") && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].del(e);
        }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].del(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CONNECTORS_STATE_KEY"]));
        let t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["detectInjectedConnectors"])({
            store: this.store,
            walletList: this.walletList,
            externalWalletConfig: this.externalWalletConfig,
            walletChainType: this.walletChainType
        }).then((e)=>{
            e.forEach(({ type: e, eip6963InjectedProvider: t, legacyInjectedProvider: a })=>{
                this.createEthereumWalletConnector({
                    connectorType: "injected",
                    walletClientType: e,
                    providers: {
                        eip6963InjectedProvider: t,
                        legacyInjectedProvider: a
                    }
                });
            });
        });
        for (let e of (this.walletList.includes("coinbase_wallet") && this.createEthereumWalletConnector({
            connectorType: "coinbase_wallet",
            walletClientType: "coinbase_wallet"
        }), Object.values(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$mobile$2d$wallets$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["mobileWalletsConfig"])))!e.isInstalled && this.walletList.includes(e.client) && ([
            "ethereum-only",
            "ethereum-and-solana"
        ].includes(this.walletChainType) && e.chainTypes.includes("ethereum") && this.createEthereumWalletConnector({
            connectorType: "null",
            walletClientType: e.client,
            walletConfig: e
        }), [
            "ethereum-and-solana",
            "solana-only"
        ].includes(this.walletChainType) && e.chainTypes.includes("solana") && this.addWalletConnector(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$solana$2f$SolanaNullConnector$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SolanaNullConnector"]({
            id: e.client,
            name: e.name,
            icon: e.logoDataUri
        })));
        this.externalWalletConfig.walletConnect.enabled && this.createEthereumWalletConnector({
            connectorType: "wallet_connect_v2",
            walletClientType: "unknown"
        }), this.externalWalletConfig.solana.connectors?.get().forEach(this.addSolanaWalletConnector), this.externalWalletConfig.solana.connectors?._setOnConnectorsUpdated?.((e)=>{
            e?.forEach(this.addSolanaWalletConnector);
        }), await t, this.initialized = !0;
    }
    findWalletConnector(e, t) {
        return "wallet_connect_v2" === e ? this.walletConnectors.filter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$ethereum$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEthereumWalletConnector"]).find((t)=>t.connectorType === e) ?? null : this.walletConnectors.filter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$ethereum$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEthereumWalletConnector"]).find((a)=>a.connectorType === e && a.walletClientType === t) ?? null;
    }
    findSolanaWalletConnector(e, t) {
        return this.walletConnectors.filter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$solana$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isSolanaWalletConnector"]).find((a)=>a.connectorType === e && ("unknown" === a.walletClientType ? a.walletBranding.id === t : a.walletClientType === t)) ?? null;
    }
    findEmbeddedWalletConnectors() {
        return this.walletConnectors.filter((e)=>"embedded" === e.connectorType);
    }
    onInitialized(e) {
        e.wallets.forEach((e)=>{
            let t = this.storedConnections.find((t)=>t.address === e.address && t.connectorType === e.connectorType && ("solana" === e.type && "unknown" === t.walletClientType && "unknown" === e.walletClientType ? e.meta.id === t.id : t.walletClientType === e.walletClientType));
            t && (e.connectedAt = t.connectedAt);
        }), this.saveConnectionHistory(), this.emit("walletsUpdated"), this.emit("connectorInitialized");
    }
    onWalletsUpdated(e) {
        e.initialized && (this.saveConnectionHistory(), this.emit("walletsUpdated"));
    }
    addEmbeddedWalletConnectors({ walletProxy: e, rootWallet: t, embeddedWallets: a, defaultChain: r, appId: n }) {
        for (let i of a){
            let a = this.findEmbeddedWalletConnectors().find((e)=>e.walletIndex === i.walletIndex);
            if (a && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$ethereum$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEthereumWalletConnector"])(a)) a.proxyProvider.walletProxy = e;
            else {
                let { entropyId: a, entropyIdVerifier: o } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(t), s = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$embedded$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EmbeddedWalletConnector"]({
                    provider: new Ia({
                        walletProxy: e,
                        address: i.address,
                        entropyId: a,
                        entropyIdVerifier: o,
                        rpcConfig: this.rpcConfig,
                        chains: this.chains,
                        appId: n,
                        chainId: r.id,
                        walletIndex: i.walletIndex
                    }),
                    chains: this.chains,
                    defaultChain: r,
                    rpcConfig: this.rpcConfig,
                    imported: !1,
                    walletIndex: i.walletIndex
                });
                this.addWalletConnector(s);
            }
        }
    }
    addImportedWalletConnector(e, t, a, r) {
        let n = this.findWalletConnector("embedded_imported", "privy");
        if (n && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$ethereum$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEthereumWalletConnector"])(n)) n.proxyProvider.walletProxy = e;
        else {
            let n = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$embedded$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EmbeddedWalletConnector"]({
                provider: new Ia({
                    walletProxy: e,
                    address: t,
                    entropyId: t,
                    entropyIdVerifier: "ethereum-address-verifier",
                    walletIndex: 0,
                    rpcConfig: this.rpcConfig,
                    chains: this.chains,
                    appId: r,
                    chainId: a.id
                }),
                chains: this.chains,
                walletIndex: 0,
                defaultChain: a,
                rpcConfig: this.rpcConfig,
                imported: !0
            });
            this.addWalletConnector(n);
        }
    }
    removeEmbeddedWalletConnectors() {
        this.walletConnectors = this.walletConnectors.filter((e)=>"embedded" !== e.connectorType), this.saveConnectionHistory(), this.storedConnections = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$stored$2d$connection$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["loadConnectionHistory"])(), this.emit("walletsUpdated");
    }
    removeImportedWalletConnector() {
        let e = this.findWalletConnector("embedded_imported", "privy");
        if (e) {
            let t = this.walletConnectors.indexOf(e);
            this.walletConnectors.splice(t, 1), this.saveConnectionHistory(), this.storedConnections = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$stored$2d$connection$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["loadConnectionHistory"])(), this.emit("walletsUpdated");
        }
    }
    async createEthereumWalletConnector({ connectorType: e, walletClientType: t, providers: a, walletConfig: r }) {
        let n = this.findWalletConnector(e, t);
        if (n && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$ethereum$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEthereumWalletConnector"])(n)) return n instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$walletconnect$2d$v2$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WalletConnectV2WalletConnector"] && n.resetConnection(t), n;
        let i = (()=>"injected" !== e ? "coinbase_wallet" === e ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$coinbase$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CoinbaseWalletConnector"](this.chains, this.defaultChain, this.rpcConfig, this.externalWalletConfig, this.privyAppName, this.privyAppLogo) : "null" !== e ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$walletconnect$2d$v2$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WalletConnectV2WalletConnector"](this.walletConnectCloudProjectId, this.rpcConfig, this.chains, this.defaultChain, this.shouldEnforceDefaultChainOnConnect, this.privyAppId, this.privyAppName, t) : r ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$ethereum$2f$EthereumNullConnector$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EthereumNullConnector"]({
                id: r.client,
                name: r.name,
                icon: r.logoDataUri,
                defaultChain: this.defaultChain,
                walletClientType: r.client
            }) : null : "metamask" === t && a?.eip6963InjectedProvider ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$metamask$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MetamaskWalletConnector"](this.chains, this.defaultChain, this.rpcConfig, a?.eip6963InjectedProvider, "metamask") : "metamask" === t && a?.legacyInjectedProvider ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$injected$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LegacyInjectedWalletConnector"](this.chains, this.defaultChain, this.rpcConfig, a?.legacyInjectedProvider, "metamask") : "phantom" === t && a?.legacyInjectedProvider ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$injected$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LegacyInjectedWalletConnector"](this.chains, this.defaultChain, this.rpcConfig, a?.legacyInjectedProvider, "phantom") : a?.legacyInjectedProvider && "unknown_browser_extension" === t ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$injected$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LegacyInjectedWalletConnector"](this.chains, this.defaultChain, this.rpcConfig, a?.legacyInjectedProvider) : a?.eip6963InjectedProvider ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$injected$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Injected6963WalletConnector"](this.chains, this.defaultChain, this.rpcConfig, a?.eip6963InjectedProvider, t) : void 0)();
        return i && this.addWalletConnector(i), i || null;
    }
    addWalletConnector(e) {
        this.walletConnectors.push(e), e.on("initialized", ()=>this.onInitialized(e)), e.on("walletsUpdated", ()=>this.onWalletsUpdated(e)), e.initialize().catch((e)=>{
            console.debug("Failed to initialize connector", e);
        });
    }
    saveConnectionHistory() {
        let e = this.wallets.map((e)=>({
                address: e.address,
                connectorType: e.connectorType,
                walletClientType: e.walletClientType,
                connectedAt: e.connectedAt,
                id: e.meta.id
            }));
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].put(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CONNECTIONS_HISTORY_KEY"], e);
    }
    async activeWalletSign(e) {
        let t = this.wallets, a = t.length > 0 ? t[0] : null;
        return a && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$isBaseConnectedEthereumWallet$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBaseConnectedEthereumWallet"])(a) ? a.sign(e) : null;
    }
    setActiveWallet(e) {
        this.activeWallet = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$getAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getAddress"])(e), this.emit("walletsUpdated");
    }
    setWalletList(e) {
        this.walletList = e, this.initialized && this.initialize(!0).catch(console.error);
    }
    removeAllConnectors() {
        for (let e of this.walletConnectors)e.removeAllListeners();
        this.walletConnectors = [];
    }
    constructor(e, t, a, r, n, i, o, s, l, c, d, u){
        super(), this.addSolanaWalletConnector = async (e)=>{
            this.findSolanaWalletConnector("solana_adapter", e.walletClientType) || this.addWalletConnector(e);
        }, this.getEthereumProvider = ()=>{
            let e = this.wallets[0], t = this.walletConnectors.find((t)=>t.wallets.find((t)=>t.address === e?.address));
            return e && t ? t.proxyProvider : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$privyProxyProvider$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyProxyProvider"];
        }, this.privyAppId = e, this.walletConnectCloudProjectId = t, this.rpcConfig = a, this.chains = r, this.defaultChain = n, this.walletConnectors = [], this.initialized = !1, this.store = i, this.walletList = o, this.shouldEnforceDefaultChainOnConnect = s, this.externalWalletConfig = l, this.privyAppName = c, this.privyAppLogo = d, this.walletChainType = u || "ethereum-only", this.storedConnections = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$stored$2d$connection$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["loadConnectionHistory"])();
    }
}
let Wa;
var Na = 0, Ua = "__private_" + Na++ + "__getOrGenerateClientAnalyticsId";
class Oa {
    initializeConnectorManager({ walletConnectCloudProjectId: e, rpcConfig: t, chains: a, defaultChain: r, store: n, walletList: i, shouldEnforceDefaultChainOnConnect: o, externalWalletConfig: s, appName: l, walletChainType: c }) {
        this.connectors || (this.connectors = new ka(this.appId, e, t, a, r, n, i, o, s, l, void 0, c));
    }
    generateApi() {
        let e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$http$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Http"]({
            appId: this.appId,
            appClientId: this.appClientId,
            client: this,
            defaults: {
                baseURL: this.apiUrl,
                timeout: this.timeout
            }
        });
        return this.session.api = e, e;
    }
    updateApiUrl(e) {
        this.apiUrl = e || this.fallbackApiUrl, this.api = this.generateApi(), e && (this.useServerCookies = !0);
    }
    authenticate() {
        if (!this.authFlow) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("No auth flow in progress.");
        return this.session.authenticate(this.authFlow);
    }
    async link() {
        if (!this.authFlow) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("No auth flow in progress.");
        let { oAuthTokens: e } = await this.session.link(this.authFlow);
        return {
            user: await this.getAuthenticatedUser(),
            oAuthTokens: e
        };
    }
    storeProviderAccessToken(e, t) {
        this.session.storeProviderAccessToken(e, t);
    }
    getProviderAccessToken(e) {
        return this.session.getProviderAccessToken(e);
    }
    async logout() {
        await this.session.destroy(), this.authFlow = void 0;
    }
    clearProviderAcccessTokens(e) {
        e.linkedAccounts.filter((e)=>"cross_app" === e.type).forEach((e)=>{
            this.storeProviderAccessToken(e.providerApp.id, null);
        });
    }
    startAuthFlow(e) {
        return e.api = this.api, this.authFlow = e, this.authFlow;
    }
    async initMfaSmsVerification() {
        try {
            await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["mfaPasswordlessSmsInitPath"], {
                action: "verify"
            });
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatApiError"])(e);
        }
    }
    async initMfaPasskeyVerification() {
        try {
            let e = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["mfaPasskeyInitPath"], {});
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$passkeys$2f$transformOptionsToCamelCase$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["transformOptionsToCamelCase"])(e.options);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatApiError"])(e);
        }
    }
    async getCrossAppProviderDetails(e) {
        try {
            return this._cachedProviderAppDetails[e] || (this._cachedProviderAppDetails[e] = await this.api.get(`/api/v1/apps/${e}/cross-app/details`)), this._cachedProviderAppDetails[e];
        } catch (e) {
            console.error("Error fetching cross app provider details", e);
        }
    }
    async acceptTerms() {
        try {
            let e = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["acceptTermsPath"], {});
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(e);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async unlinkEmail(e) {
        try {
            let t = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["unlinkEmailPath"], {
                address: e
            });
            return await this.getAuthenticatedUser() ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(t);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async unlinkPhone(e) {
        try {
            let t = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["unlinkPhonePath"], {
                phoneNumber: e
            });
            return await this.getAuthenticatedUser() ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(t);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async unlinkEthereumWallet(e) {
        try {
            let t = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["unlinkWalletPath"], {
                address: e
            });
            return await this.getAuthenticatedUser() ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(t);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async unlinkSolanaWallet(e) {
        try {
            let t = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["siwsUnlinkWalletPath"], {
                address: e
            });
            return await this.getAuthenticatedUser() ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(t);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async unlinkOAuth(e, t) {
        try {
            let a = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["unlinkOAuthPath"], {
                provider: e,
                subject: t
            });
            return await this.getAuthenticatedUser() ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(a);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async unlinkFarcaster(e) {
        try {
            let t = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["unlinkFarcasterPath"], {
                fid: e
            });
            return await this.getAuthenticatedUser() ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(t);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async unlinkTelegram(e) {
        try {
            let t = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["telegramAccountUnlinkPath"], {
                telegram_user_id: e
            });
            return await this.getAuthenticatedUser() ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(t);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async revokeDelegatedWallet() {
        try {
            await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["delegatedActionsRevokePath"], {});
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async createAnalyticsEvent({ eventName: e, payload: t, timestamp: a, options: r }) {
        if ("undefined" != typeof window) try {
            this.clientAnalyticsId || console.warn("No client analytics id set, refusing to send analytics event"), await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["analyticsEventsPath"], {
                event_name: e,
                client_id: this.clientAnalyticsId,
                payload: {
                    ...t || {},
                    clientTimestamp: a ? a.toISOString() : (new Date).toISOString()
                }
            }, {
                retry: -1,
                keepalive: r?.keepAlive ?? !1
            });
        } catch (e) {}
    }
    async signMoonpayOnRampUrl(e) {
        try {
            return this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["moonpayPluginOnRampPath"], e);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async initCoinbaseOnRamp(e) {
        try {
            return this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["coinbaseOnRampInitPath"], e);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async getCoinbaseOnRampStatus({ partnerUserId: e }) {
        try {
            return this.api.get(`${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["coinbaseOnRampStatusPath"]}?partnerUserId=${e}`);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async getAuthenticatedUser() {
        return this.session.hasRefreshCredentials() || this.session.hasRecoveryCredentials() ? this.session.refresh() : null;
    }
    async getAccessToken(e) {
        return await this.getPrivyAccessToken(e) || await this.getCustomerAccessToken(e);
    }
    async getCustomerAccessToken(e) {
        return await this._getToken(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$session$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AccessTokenTypes"].CUSTOMER, e);
    }
    async getPrivyAccessToken(e) {
        return await this._getToken(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$session$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AccessTokenTypes"].PRIVY, e);
    }
    async _getToken(e, t) {
        return this.session.getToken(e) ? this.session.hasActiveAccessToken(e) ? this.session.hasRefreshCredentials(e) ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$accessToken$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AccessToken"].parse(this.session.getToken(e))?.appId !== this.appId ? (await this.logout(), null) : this.session.getToken(e) : (this.session.destroyLocalState(), null) : !t?.disableAutoRefresh && this.session.hasRefreshCredentials(e) ? (await this.session.refresh(), this.session.getToken(e)) : null : null;
    }
    async getSmartWalletsConfig() {
        try {
            let e = {}, t = this.session.token;
            t && (e.authorization = `Bearer ${t}`);
            let a = await this.api.get(`/api/v1/apps/${this.appId}/smart_wallets`, {
                baseURL: this.fallbackApiUrl,
                headers: e
            });
            return a.enabled ? {
                enabled: a.enabled,
                smartWalletType: a.smart_wallet_type,
                configuredNetworks: a.configured_networks.map((e)=>({
                        chainId: e.chain_id,
                        bundlerUrl: e.bundler_url,
                        paymasterUrl: e.paymaster_url,
                        paymasterContext: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$smart$2d$wallet$2d$helpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPaymasterContext"])(e.paymaster_url, e.paymaster_context)
                    }))
            } : {
                enabled: a.enabled
            };
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async getServerConfig() {
        try {
            let e = {}, t = this.session.token;
            t && (e.authorization = `Bearer ${t}`);
            let a = await this.api.get(`/api/v1/apps/${this.appId}`, {
                baseURL: this.fallbackApiUrl,
                headers: e
            }), r = a.telegram_auth_config ? {
                botId: a.telegram_auth_config.bot_id,
                botName: a.telegram_auth_config.bot_name,
                linkEnabled: a.telegram_auth_config.link_enabled,
                seamlessAuthEnabled: a.telegram_auth_config.seamless_auth_enabled
            } : void 0, n = a.funding_config ? {
                methods: a.funding_config.methods,
                options: a.funding_config.options,
                defaultRecommendedAmount: a.funding_config.default_recommended_amount,
                defaultRecommendedCurrency: a.funding_config.default_recommended_currency,
                promptFundingOnWalletCreation: a.funding_config.prompt_funding_on_wallet_creation,
                crossChainBridgingEnabled: a.funding_config.cross_chain_bridging_enabled
            } : void 0;
            return {
                id: a.id,
                name: a.name,
                verificationKey: a.verification_key,
                logoUrl: a.logo_url || void 0,
                accentColor: a.accent_color || void 0,
                showWalletLoginFirst: a.show_wallet_login_first,
                allowlistConfig: {
                    errorTitle: a.allowlist_config.error_title,
                    errorDetail: a.allowlist_config.error_detail,
                    errorCtaText: a.allowlist_config.cta_text,
                    errorCtaLink: a.allowlist_config.cta_link
                },
                walletAuth: a.wallet_auth,
                solanaWalletAuth: a.solana_wallet_auth,
                emailAuth: a.email_auth,
                smsAuth: a.sms_auth,
                googleOAuth: a.google_oauth,
                twitterOAuth: a.twitter_oauth,
                discordOAuth: a.discord_oauth,
                githubOAuth: a.github_oauth,
                spotifyOAuth: a.spotify_oauth,
                instagramOAuth: a.instagram_oauth,
                tiktokOAuth: a.tiktok_oauth,
                linkedinOAuth: a.linkedin_oauth,
                appleOAuth: a.apple_oauth,
                farcasterAuth: a.farcaster_auth,
                passkeyAuth: a.passkey_auth,
                passkeysForSignupEnabled: a.passkeys_for_signup_enabled,
                telegramAuth: a.telegram_auth,
                disablePlusEmails: a.disable_plus_emails,
                termsAndConditionsUrl: a.terms_and_conditions_url,
                embeddedWalletConfig: {
                    createOnLogin: a.embedded_wallet_config?.create_on_login,
                    userOwnedRecoveryOptions: a.embedded_wallet_config.user_owned_recovery_options,
                    requireUserOwnedRecoveryOnCreate: a.embedded_wallet_config.require_user_owned_recovery_on_create
                },
                privacyPolicyUrl: a.privacy_policy_url,
                requireUsersAcceptTerms: a.require_users_accept_terms,
                customApiUrl: a.custom_api_url,
                walletConnectCloudProjectId: a.wallet_connect_cloud_project_id,
                fiatOnRampEnabled: a.fiat_on_ramp_enabled,
                captchaEnabled: a.captcha_enabled,
                captchaSiteKey: a.captcha_site_key,
                createdAt: new Date(1e3 * a.created_at),
                updatedAt: new Date(1e3 * a.updated_at),
                mfaMethods: a.mfa_methods,
                enforceWalletUis: a.enforce_wallet_uis,
                legacyWalletUiConfig: a.legacy_wallet_ui_config,
                telegramAuthConfiguration: r,
                fundingConfig: n
            };
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async getUsdTokenPrice(e) {
        try {
            return (await this.api.get(`/api/v1/token_price?chainId=${e.id}&tokenSymbol=${e.nativeCurrency.symbol}`)).usd;
        } catch (t) {
            return void console.error(`Unable to fetch token price for chain with id ${e.id}`);
        }
    }
    async getUsdPriceForSol() {
        try {
            return (await this.api.get("/api/v1/token_price?chainId=0&tokenSymbol=SOL")).usd;
        } catch (e) {
            return void console.error("Unable to fetch token price for SOL");
        }
    }
    async getSplTokenMetadata({ mintAddress: e, cluster: t }) {
        try {
            return await this.api.get(`/api/v1/spl_token_info?mint_address=${e}&cluster=${t}`);
        } catch (a) {
            return void console.error(`Unable to fetch token metadata for ${t}:${e}`);
        }
    }
    async requestFarcasterSignerStatus(e) {
        try {
            return await this.api.post("/api/v1/farcaster/signer/status", {
                ed25519_public_key: e
            });
        } catch (e) {
            throw console.error("Unable to fetch Farcaster signer status"), e;
        }
    }
    async forkSession() {
        return await this.session.forkSession();
    }
    async generateSiweNonce({ address: e, captchaToken: t }) {
        try {
            return (await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["siweInitPath"], {
                address: e,
                token: t
            })).nonce;
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async authenticateWithSiweInternal({ message: e, signature: t, chainId: a, walletClientType: r, connectorType: n, mode: i }) {
        return await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["siweAuthenticatePath"], {
            message: e,
            signature: t,
            chainId: a,
            walletClientType: r,
            connectorType: n,
            mode: i
        });
    }
    async linkWithSiweInternal({ message: e, signature: t, chainId: a, walletClientType: r, connectorType: n }) {
        return await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["siweLinkPath"], {
            message: e,
            signature: t,
            chainId: a,
            walletClientType: r,
            connectorType: n
        });
    }
    async linkSmartWallet({ message: e, signature: t, smartWalletType: a }) {
        try {
            let r = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["smartWalletLinkPath"], {
                message: e,
                signature: t,
                smart_wallet_type: a
            });
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(r);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async linkWithSiwe({ message: e, signature: t, chainId: a, walletClientType: r, connectorType: n }) {
        try {
            let i = await this.linkWithSiweInternal({
                message: e,
                signature: t,
                chainId: a,
                walletClientType: r,
                connectorType: n
            });
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(i);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async generateSiwsNonce({ address: e, captchaToken: t }) {
        try {
            return (await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["siwsInitPath"], {
                address: e,
                token: t
            })).nonce;
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async authenticateWithSiwsInternal({ message: e, signature: t, walletClientType: a, connectorType: r, mode: n }) {
        return await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["siwsAuthenticatePath"], {
            message: e,
            signature: t,
            walletClientType: a,
            connectorType: r,
            mode: n
        });
    }
    async sendAccountTransferRequest({ nonce: e, account: t, accountType: a, externalWalletMetadata: r, telegramAuthResult: n, telegramWebAppData: i, farcasterEmbeddedAddress: o, oAuthUserInfo: s }) {
        try {
            let l, c;
            switch(a){
                case "email":
                    l = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["transferEmailPath"], c = {
                        nonce: e,
                        email: t
                    };
                    break;
                case "sms":
                    l = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["transferPhonePath"], c = {
                        nonce: e,
                        phoneNumber: t
                    };
                    break;
                case "siwe":
                    if (l = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["transferWalletPath"], !r) throw Error("Wallet parameters must be defined");
                    c = {
                        nonce: e,
                        address: t,
                        ...r
                    };
                    break;
                case "farcaster":
                    l = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["transferFarcasterPath"], c = {
                        nonce: e,
                        farcaster_id: t,
                        farcaster_embedded_address: o
                    };
                    break;
                case "telegram":
                    l = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["telegramAccountTransferPath"], c = {
                        nonce: e,
                        telegram_auth_result: n,
                        telegram_web_app_data: i
                    };
                    break;
                case "custom":
                case "guest":
                case "passkey":
                    throw Error("Invalid transfer account type");
                default:
                    l = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["transferOAuthPath"], c = {
                        nonce: e,
                        userInfo: s
                    };
            }
            let d = await this.api.post(l, c);
            return await this.getAuthenticatedUser() ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(d);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async linkWithSiwsInternal({ message: e, signature: t, walletClientType: a, connectorType: r }) {
        return await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["siwsLinkPath"], {
            message: e,
            signature: t,
            walletClientType: a,
            connectorType: r
        });
    }
    async linkWithSiws({ message: e, signature: t, walletClientType: a, connectorType: r }) {
        try {
            let n = await this.linkWithSiwsInternal({
                message: e,
                signature: t,
                walletClientType: a,
                connectorType: r
            });
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(n);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async updateUserAndIdToken() {
        try {
            let e = await this.api.get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["usersMePath"]);
            return this.session.updateIdentityToken(e.identity_token), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(e.user);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async scanTransaction(e) {
        try {
            return await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["transactionScanningPath"], e);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    constructor({ apiUrl: e = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DEFAULT_PRIVY_API_URL"], appId: t, appClientId: a, timeout: r = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DEFAULT_API_TIMEOUT_MS"] }){
        Object.defineProperty(this, Ua, {
            value: ba
        }), this._cachedProviderAppDetails = {}, this.apiUrl = e, this.fallbackApiUrl = this.apiUrl, this.useServerCookies = e !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DEFAULT_PRIVY_API_URL"] && e.startsWith("https://privy."), this.timeout = r, this.appId = t, this.appClientId = a, this.clientAnalyticsId = (function(e, t) {
            if (!Object.prototype.hasOwnProperty.call(e, t)) throw TypeError("attempted to use private field on non-instance");
            return e;
        })(this, Ua)[Ua](), Wa || (Wa = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$session$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Session"]), this.session = Wa, this.api = this.generateApi(), this.session.client = this;
    }
}
function ba() {
    if ("undefined" == typeof window) return null;
    try {
        let e = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CLIENT_ANALYTICS_ID_KEY"]);
        if ("string" == typeof e && e.length > 0) return e;
    } catch (e) {}
    let e = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$v4$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__v4$3e$__["v4"])();
    try {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].put(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CLIENT_ANALYTICS_ID_KEY"], e), e;
    } catch (t) {
        return e;
    }
}
class Sa {
    async handleSignMessage(e) {
        if (!e.params || "string" != typeof e.params.message) throw Error("Message must be provided as a string for Solana signMessage RPC");
        return await Ya({
            message: e.params.message,
            options: {
                address: this.address,
                uiOptions: {}
            }
        });
    }
    async request(e) {
        if (console.debug("EmbeddedSolanaProvider.request() called with args", e), !await Va()) throw Error("User must be authenticated to use embedded Solana wallet");
        if (!await $a()) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unable to connect to Solana embedded wallet");
        if ("signMessage" === e.method) return await this.handleSignMessage(e);
        throw Error("Embedded Solana provider does not yet support this RPC method.");
    }
    constructor(e, t){
        this.walletProxy = e, this.address = t;
    }
}
let Ra, Da, Ma, Pa, La, Fa, xa, ja;
function Ba() {
    return Ra ? Ra.getCustomerAccessToken() : Promise.resolve(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CUSTOMER_ACCESS_TOKEN_STORAGE_KEY"]) || null);
}
async function Va() {
    return Ra ? Ra.getAccessToken() : Promise.resolve(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PRIVY_ACCESS_TOKEN_STORAGE_KEY"]) || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CUSTOMER_ACCESS_TOKEN_STORAGE_KEY"]) || null);
}
const Ha = (e, t)=>Da(e, t), Ka = (e, t)=>Ma(e, t), za = (e, t)=>Pa(e, t), Ga = (e, t)=>La(e, t), qa = ()=>Fa(), $a = ()=>xa(), Ya = ({ message: e, address: t })=>ja({
        message: e,
        options: {
            address: t,
            uiOptions: {}
        }
    });
const Xa = ({ config: t, ...a })=>{
    var r;
    if ("undefined" != typeof window && 0 > [
        "localhost",
        "127.0.0.1"
    ].indexOf(window.location.hostname) && "https:" !== window.location.protocol) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Embedded wallet is only available over HTTPS");
    if ("string" != typeof (r = a.appId) || 25 !== r.length) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Cannot initialize the Privy provider with an invalid Privy app ID");
    Ra || (Ra = new Oa({
        appId: a.appId,
        appClientId: a.clientId,
        apiUrl: a.apiUrl
    }));
    let n = Object.assign({}, t); /*#__PURE__*/ 
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$configuration$2f$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyAppConfigProvider"], {
        client: Ra,
        clientConfig: n,
        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$plugins$2f$context$2f$PrivyPluginContext$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyPluginProvider"], {
            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(Qa, {
                ...a,
                client: Ra
            })
        })
    });
};
let Qa = (v)=>{
    let C = v.client, k = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$plugins$2f$context$2f$PrivyPluginContext$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["usePlugins"])(), [x, j] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(!1), [B, H] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(!1), [z, G] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(!1), [re, ie] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(null), [oe, se] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])([]), [ue, ge] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])([]), [Ee, be] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])([]), [Se, ht] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(!1), [Rt, Dt] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(null), [Mt, Pt] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(!1), [Lt, Ft] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])({
        status: "disconnected",
        connectedWallet: null,
        connectError: null,
        connector: null,
        connectRetry: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["notImplemented"]
    }), [xt, jt] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])({
        status: "initial"
    }), [Bt, Vt] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])({
        status: "initial"
    }), [Ht, Kt] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])({
        status: "initial"
    }), [zt, Gt] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])({
        status: "initial"
    }), [qt, $t] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])({
        status: "initial"
    }), [Yt, Xt] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])({
        status: "initial"
    }), [Qt, Jt] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(null), Zt = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$configuration$2f$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAppConfig"])(), ea = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$configuration$2f$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useIsServerConfigLoaded"])(), [ta, aa] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(!0), [ra, na] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])({}), [ia, oa] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(null), [sa, la] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(null), [ca, da] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(!1), [ua, ha] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(!1), [pa, wa] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(Zt.customAuth?.enabled ? {
        status: "initial"
    } : {
        status: "not-enabled"
    }), ma = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null), ya = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null), ga = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["privyEventsDefault"]), [fa, Ea] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(!1);
    C.onStoreCustomerAccessToken = (e)=>{
        e && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "accessToken", "onAccessTokenGranted", {
            accessToken: e
        });
    }, C.onDeleteCustomerAccessToken = ()=>{
        ie(null), G(!1), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "accessToken", "onAccessTokenRemoved");
    };
    let Aa = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null), _a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null), Ta = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(!1), va = ({ showWalletUIs: e })=>Ta.current ? Ta.current : void 0 !== e ? !e : !Zt.embeddedWallets.showWalletUIs, Ca = (e)=>{
        Dt(e), setTimeout(()=>{
            j(!0);
        }, 15), C.createAnalyticsEvent({
            eventName: "modal_open",
            payload: {
                initialScreen: e
            }
        });
    }, Ia = (e)=>{
        ("off" !== Zt.embeddedWallets.ethereum.createOnLogin || "off" !== Zt.embeddedWallets.solana.createOnLogin) && aa(!0), Ca(e);
    };
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        let e = [
            ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivySolanaHDWallets"])(re),
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getImportedPrivySolanaWallet"])(re)
        ].filter((e)=>!!e);
        Qt && be(e.map((e)=>({
                type: "solana",
                imported: e.imported,
                address: e.address,
                connectedAt: Date.now(),
                walletClientType: "privy",
                connectorType: "embedded",
                walletIndex: e.walletIndex ?? void 0,
                meta: {
                    name: "Privy Wallet",
                    icon: void 0,
                    id: "io.privy.solana.wallet"
                },
                linked: !0,
                fund () {
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("'fund' is deprecated for Solana wallets - use 'fundWallet' instead");
                },
                unlink: ()=>{
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Cannot unlink an embedded Solana wallet");
                },
                getProvider: async ()=>new Sa(Qt, e.address),
                async signMessage (t) {
                    let a = await Va();
                    if (!a || !Qt) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must have valid access token and Privy wallet to send transaction", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED);
                    let r = e.imported ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getImportedPrivySolanaWallet"])(re) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyPrimaryWallet"])(re);
                    if (!r) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Attempting to sign a transaction without a root wallet");
                    let { entropyId: n, entropyIdVerifier: i } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(r);
                    if (!await sr.recoverPrimaryWallet().catch(()=>!1)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Wallet couldn't be connected", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR);
                    if (!re) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Attempting to sign a transaction with no user initialized");
                    let { response: o } = await Qt.rpc({
                        accessToken: a,
                        entropyId: n,
                        entropyIdVerifier: i,
                        chainType: "solana",
                        hdWalletIndex: e.walletIndex ?? 0,
                        request: {
                            method: "signMessage",
                            params: {
                                message: Buffer.from(t).toString("base64")
                            }
                        }
                    });
                    return Buffer.from(o.data.signature, "base64");
                },
                async sendTransaction (e, t, a) {
                    let { signature: r } = await er({
                        transaction: e,
                        connection: t,
                        transactionOptions: a,
                        wallet: this,
                        signOnly: !1
                    });
                    return r;
                },
                async signTransaction (t) {
                    let a = await Va();
                    if (!a || !Qt) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must have valid access token and Privy wallet to send transaction", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED);
                    if (!await sr.recoverPrimaryWallet().catch(()=>!1)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Wallet couldn't be connected", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR);
                    let r = e.imported ? e : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyPrimaryWallet"])(re);
                    if (!r) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Attempting to sign a transaction without a root wallet");
                    let { entropyId: n, entropyIdVerifier: i } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(r);
                    return await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$solana$2f$transaction$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["signSolanaTransaction"])({
                        tx: t,
                        accessToken: a,
                        walletProxy: Qt,
                        entropyId: n,
                        entropyIdVerifier: i,
                        transactingWalletAddress: e.address,
                        transactingWalletIndex: e.walletIndex ?? 0
                    }), t;
                },
                loginOrLink: async ()=>{
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Cannot login or link with an embedded Solana wallet");
                },
                disconnect: ()=>{},
                isConnected: async ()=>!0
            })));
    }, [
        Qt,
        re
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (!re) return void C.connectors?.removeEmbeddedWalletConnectors();
        let e = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyEthereumWallet"])(re), t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyEthereumHDWallets"])(re), a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getImportedPrivyEthereumWallet"])(re);
        e && t.length || C.connectors?.removeEmbeddedWalletConnectors(), a || C.connectors?.removeImportedWalletConnector(), C.connectors ? Qt ? (e && C.connectors.addEmbeddedWalletConnectors({
            walletProxy: Qt,
            rootWallet: e,
            embeddedWallets: t,
            defaultChain: Zt.defaultChain,
            appId: v.appId
        }), a && C.connectors.addImportedWalletConnector(Qt, a.address, Zt.defaultChain, v.appId)) : console.debug("Failed to add embedded wallet connector: Wallet proxy not initialized") : console.debug("Failed to add embedded wallet connector: Client connectors not initialized");
    }, [
        Qt,
        re
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        Qt && sa?.(Qt);
    }, [
        Qt
    ]);
    let ka = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])();
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        (async ()=>{
            if (!Zt.customAuth?.enabled) return void wa({
                status: "not-enabled"
            });
            aa(!0);
            let { getCustomAccessToken: e, isLoading: t } = Zt.customAuth;
            if (B && !t && "loading" !== pa.status) {
                wa({
                    status: "loading"
                });
                try {
                    let t = await e();
                    if (t === ka.current) return void wa({
                        status: "done"
                    });
                    if (!t && z) return ka.current = t, await or.logout(), wa({
                        status: "done"
                    }), void (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "customAuth", "onUnauthenticated");
                    if (!t) return ka.current = t, void wa({
                        status: "done"
                    });
                    C.startAuthFlow(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$custom$2d$jwt$2d$account$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CustomJwtAccountFlow"](t));
                    let { user: a, isNewUser: r } = await C.authenticate();
                    if (!a) return await or.logout(), wa({
                        status: "error",
                        error: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Failed to sync with custom auth provider")
                    }), void (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "customAuth", "onUnauthenticated");
                    void 0 !== r && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onComplete", {
                        user: a,
                        isNewUser: r,
                        wasAlreadyAuthenticated: !1,
                        loginMethod: "custom",
                        loginAccount: null
                    }), ka.current = t, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "customAuth", "onAuthenticated", {
                        user: a
                    }), wa({
                        status: "done"
                    }), ie(a || null), ht(r || !1), G(!0), ha(!0);
                } catch (e) {
                    if (console.warn(e), await or.logout(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "customAuth", "onUnauthenticated"), "User already exists with provided custom JWT account." === e.message) return void wa({
                        status: "initial"
                    });
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), wa({
                        status: "error",
                        error: e
                    });
                }
            }
        })();
    }, [
        "initial" === pa.status,
        Zt.customAuth?.enabled,
        Zt.customAuth?.getCustomAccessToken,
        Zt.customAuth?.isLoading,
        B,
        z
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        ua && Qt && re && (async ()=>{
            let e = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$user$2f$shouldCreateEmbeddedEthWallet$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["shouldCreateEmbeddedEthWallet"])(re, Zt.embeddedWallets.ethereum.createOnLogin), t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$user$2f$shouldCreateEmbeddedSolWallet$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["shouldCreateEmbeddedSolWallet"])(re, Zt.embeddedWallets.solana.createOnLogin), a = await Va();
            if (a) {
                if (e && t) {
                    let e = await $a(re, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WALLET_PROXY_TIMEOUT"]);
                    return await Qt.createSolana({
                        accessToken: a,
                        ethereumAddress: e?.address
                    }), void ha(!1);
                }
                if (t) return await Qt.createSolana({
                    accessToken: a,
                    ethereumAddress: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyEthereumWallet"])(re)?.address
                }), await sr.refreshSessionAndUser(), void ha(!1);
                if (e) return await $a(re, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WALLET_PROXY_TIMEOUT"]), void ha(!1);
            }
        })().catch(console.error);
    }, [
        ua && Qt && re
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (Zt.externalWallets.solana.connectors) return Zt.externalWallets.solana.connectors.onMount(), ()=>Zt.externalWallets.solana.connectors?.onUnmount();
    }, [
        Zt.externalWallets.solana.connectors
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        !B && ea && async function() {
            let e, t = Wa(), r = Na();
            (()=>{
                let e = new URLSearchParams(window.location.search).get("privy_token");
                if (!e) return;
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].put(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FORKED_TOKEN_STORAGE_KEY"], e);
                let t = new URL(window.location.href);
                t.searchParams.delete("privy_token"), window.history.pushState({}, "", t);
            })();
            let n = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mipd$2f$dist$2f$esm$2f$store$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createStore"])();
            C.initializeConnectorManager({
                walletConnectCloudProjectId: Zt.walletConnectCloudProjectId,
                rpcConfig: Zt.rpcConfig,
                chains: Zt.chains,
                defaultChain: Zt.defaultChain,
                store: n,
                walletList: Zt.appearance.walletList,
                shouldEnforceDefaultChainOnConnect: Zt.shouldEnforceDefaultChainOnConnect,
                externalWalletConfig: Zt.externalWallets,
                appName: Zt.name ?? "Privy",
                walletChainType: Zt.appearance.walletChainType
            }), C.connectors?.on("connectorInitialized", ()=>{
                e && clearTimeout(e);
                let t = C.connectors.walletConnectors.length, a = C.connectors.walletConnectors.reduce((e, t)=>e + (t.initialized ? 1 : 0), 0);
                a === t ? Ea(!0) : e = setTimeout(()=>{
                    console.debug({
                        message: "Unable to initialize all expected connectors before timeout",
                        initialized: a,
                        expected: t
                    }), Ea(!0);
                }, 1500);
            }), C.connectors?.initialize().then(()=>{
                Ha();
            });
            let i = await C.getAuthenticatedUser(), o = !!i;
            Zt.legal.requireUsersAcceptTerms && i && !i.hasAcceptedTerms ? (await C.logout(), sr.setReadyToTrue(!0), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "logout", "onSuccess")) : (Zt.customAuth?.enabled || (G(!!i), i && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onComplete", {
                user: i,
                isNewUser: !1,
                wasAlreadyAuthenticated: !0,
                loginMethod: null,
                loginAccount: null
            }), ie(i)), t ? _a.current = o ? "link" : "login" : r && !o ? (_a.current = "login", na({
                telegramAuthModalData: {
                    seamlessAuth: !0
                }
            }), Ia(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].TELEGRAM_AUTH_SCREEN)) : sr.setReadyToTrue(!!i));
        }();
    }, [
        C,
        ia,
        B,
        ea
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (B) {
            if (!re || !re.linkedAccounts.find((e)=>"wallet" === e.type && "privy" === e.walletClientType)) return void da(!0);
            da([
                ...oe,
                ...Ee
            ].some((e)=>"privy" === e.walletClientType));
        }
    }, [
        B,
        re,
        oe,
        Ee
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        C.connectors?.setWalletList(Zt.appearance.walletList);
    }, [
        Zt.appearance.walletList.join()
    ]);
    let Wa = ()=>{
        let e = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$oauth$2f$detectCompletingOAuthFlow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["detectCompletingOAuthFlow"])();
        return e.inProgress && e.popupFlow ? window.opener.location.origin !== window.location.origin ? void window.opener.postMessage({
            type: "PRIVY_OAUTH_ERROR",
            error: "Origins between parent and child windows do not match."
        }) : "error" === e.authorizationCode ? void window.opener.postMessage({
            type: "PRIVY_OAUTH_ERROR",
            error: "Something went wrong. Try again."
        }) : void window.opener.postMessage({
            type: "PRIVY_OAUTH_RESPONSE",
            stateCode: e.stateCode,
            authorizationCode: e.authorizationCode
        }) : (e.inProgress && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isPrivyTheOAuthProvider"])(e.provider) && !e.popupFlow && (new BroadcastChannel(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CROSS_APP_BROADCAST_CHANNEL_NAME"]).postMessage({
            type: "PRIVY_OAUTH_RESPONSE",
            stateCode: e.stateCode,
            authorizationCode: e.authorizationCode
        }), window.close()), !!e.inProgress && !!e.withPrivyUi && (C.startAuthFlow(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$oauth$2f$OAuthFlow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["OAuthFlow"](e)), Ia(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].AWAITING_OAUTH_SCREEN), !0));
    }, Na = ()=>{
        let e = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$telegram$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["detectCompletingTelegramFlow"])();
        if (!e || !Zt.loginMethods.telegram || !Zt.loginConfig.telegramAuthConfiguration?.seamlessAuthEnabled) return;
        let t = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$telegram$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TelegramAuthFlow"];
        return C.startAuthFlow(t), "login-url" === e.flowType && (t.meta.telegramWebAppData = void 0, t.meta.telegramAuthResult = e.authData), "web-app" === e.flowType && (t.meta.telegramAuthResult = void 0, t.meta.telegramWebAppData = e.authData), !0;
    }, Ua = async (e, t, a, r)=>{
        if ("solana_adapter" !== e) Oa(await C.connectors?.createEthereumWalletConnector({
            connectorType: e,
            walletClientType: t
        }) || null, t, a, r);
        else {
            let n = C.connectors?.findSolanaWalletConnector(e, t);
            if (!n) return;
            Oa(n, t, a, r);
        }
    };
    async function Oa(e, t, a, r) {
        if (!e) return Ft({
            status: "disconnected",
            connectedWallet: null,
            connectError: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyConnectorError"]("Unable to connect to wallet."),
            connector: null,
            connectRetry: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["notImplemented"]
        }), r?.(null, a);
        Ft({
            status: "disconnected",
            connectedWallet: null,
            connectError: null,
            connector: e,
            connectRetry: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["notImplemented"]
        }), e instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$walletconnect$2d$v2$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WalletConnectV2WalletConnector"] && t && await e.resetConnection(t), Ft({
            connector: e,
            status: "connecting",
            connectedWallet: null,
            connectError: null,
            connectRetry: ()=>Oa(e, t, a, r)
        });
        try {
            let t = await e.connect({
                showPrompt: !0
            });
            if ((!t || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$isBaseConnectedEthereumWallet$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBaseConnectedEthereumWallet"])(t)) && Zt.shouldEnforceDefaultChainOnConnect && !Zt.chains.find((e)=>e.id === Number(t?.chainId.replace("eip155:", ""))) && ("wallet_connect_v2" !== t?.connectorType || "metamask" !== t?.walletClientType)) {
                Ft((t)=>({
                        ...t,
                        connector: e,
                        status: "switching_to_supported_chain",
                        connectedWallet: null,
                        connectError: null,
                        connectRetry: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["notImplemented"]
                    }));
                try {
                    await t?.switchChain(Zt.defaultChain.id), t && (t.chainId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatChainIdToCAIP2"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toHex"])(Zt.defaultChain.id)));
                } catch  {
                    console.warn(`Unable to switch to default chain: ${Zt.defaultChain.id}`);
                }
            }
            return Ft((e)=>({
                    ...e,
                    status: "connected",
                    connectedWallet: t,
                    connectError: null,
                    connectRetry: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["notImplemented"]
                })), t && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "connectWallet", "onSuccess", {
                wallet: t
            }), r?.(t, a);
        } catch (e) {
            return e instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyError"] ? (console.warn(e.cause ? e.cause : e.message), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "connectWallet", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].GENERIC_CONNECT_WALLET_ERROR)) : (console.warn(e), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "connectWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR)), Ft((t)=>({
                    ...t,
                    status: "disconnected",
                    connectedWallet: null,
                    connectError: e
                })), r?.(null, a);
        }
    }
    let ba = async (e, t, a)=>{
        if (null === e || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$isBaseConnectedEthereumWallet$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBaseConnectedEthereumWallet"])(e)) return;
        let r = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$siwe$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SiweFlow"](e, C, t, a);
        C.startAuthFlow(r);
    }, Ba = async (e, t, a)=>{
        if (null === e || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$solana$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBaseConnectedSolanaWallet"])(e)) return;
        let r = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$siws$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SiwsFlow"](e, C, t, a);
        C.startAuthFlow(r);
    }, Ha = ()=>{
        let e = new URLSearchParams(window.location.search), t = e.get("privy_connector"), a = e.get("privy_wallet_client"), r = "true" === e.get("privy_connect_only");
        if (!t || !a) return;
        let n = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$mobile$2d$wallets$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getWalletConfigForConnector"])({
            connectorType: t,
            walletClientType: a
        });
        if (!n || !n.isInstalled) return Ia(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].LOGIN_FAILED_SCREEN);
        if (!C.connectors) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Connector not initialized");
        Ca(r ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].AWAITING_CONNECT_ONLY_CONNECTION : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].AWAITING_CONNECTION);
        let i = new URL(window.location.href);
        i.searchParams.delete("privy_connector"), i.searchParams.delete("privy_wallet_client"), i.searchParams.delete("privy_connect_only"), window.history.pushState({}, "", i), Ua(t, a, void 0, r ? void 0 : "solana_adapter" === t ? Ba : ba);
    };
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        B && z && null === re && C.getAuthenticatedUser().then(ie);
    }, [
        B,
        z,
        re,
        C
    ]);
    let Ka = (e)=>{
        if (!z) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED, {
            linkMethod: e
        }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("User must be authenticated before linking an account.");
    }, za = (e)=>{
        if (!z || !re) return !1;
        if ("privy" === e.walletClientType) return !0;
        for (let t of re.linkedAccounts)if ("wallet" === t.type && t.address === e.address && "privy" !== t.walletClientType) return !0;
        return !1;
    }, Ga = async (e)=>{
        let t;
        if (!C.connectors) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Connector not initialized");
        t = "ethereum" === e.type ? C.connectors.findWalletConnector(e.connectorType, e.walletClientType) || null : C.connectors.findSolanaWalletConnector(e.connectorType, e.walletClientType) || null, Ft((a)=>({
                ...a,
                connector: t,
                status: "connected",
                connectedWallet: e,
                connectError: null,
                connectRetry: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["notImplemented"]
            })), Zt.captchaEnabled && !z ? (na({
            captchaModalData: {
                callback: (t)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$isBaseConnectedEthereumWallet$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBaseConnectedEthereumWallet"])(e) ? ba(e, t) : Ba(e, t),
                userIntentRequired: !1,
                onSuccessNavigateTo: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].AWAITING_CONNECTION,
                onErrorNavigateTo: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].ERROR_SCREEN
            }
        }), Ia(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].CAPTCHA_SCREEN)) : ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$isBaseConnectedEthereumWallet$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBaseConnectedEthereumWallet"])(e) ? await ba(e) : await Ba(e), Ia(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].AWAITING_CONNECTION));
    }, qa = ()=>{
        se((e)=>{
            let t = C.connectors?.wallets.filter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$isBaseConnectedEthereumWallet$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBaseConnectedEthereumWallet"]).map((e)=>({
                    ...e,
                    linked: za(e),
                    loginOrLink: async ()=>{
                        if (!await e.isConnected()) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Wallet is not connected");
                        if ("embedded" === e.connectorType && "privy" === e.walletClientType) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Cannot link or login with embedded wallet");
                        Ga(e);
                    },
                    fund: async (t)=>{
                        await sr.fundWallet(e.address, t);
                    },
                    unlink: async ()=>{
                        if (!z) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("User is not authenticated.");
                        if ("embedded" === e.connectorType && "privy" === e.walletClientType) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Cannot unlink an embedded wallet");
                        ie(await C.unlinkEthereumWallet(e.address));
                    }
                })) || [];
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$areWalletArraysEqual$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["areWalletArraysEqual"])(e, t) ? e : t;
        }), ge((e)=>{
            let t = (C.connectors?.wallets ?? []).filter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$solana$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBaseConnectedSolanaWallet"]).map((e)=>({
                    ...e,
                    linked: za(e),
                    loginOrLink: async ()=>{
                        if (!await e.isConnected()) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Wallet is not connected");
                        if ("embedded" === e.connectorType && "privy" === e.walletClientType) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Cannot link or login with embedded wallet");
                        Ga(e);
                    },
                    fund: async ()=>{
                        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("'fund' is deprecated for Solana wallets - use 'fundWallet' instead");
                    },
                    unlink: async ()=>{
                        if (!z) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("User is not authenticated.");
                        if ("embedded" === e.connectorType && "privy" === e.walletClientType) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Cannot unlink an embedded wallet");
                        ie(await C.unlinkSolanaWallet(e.address));
                    }
                }));
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$areWalletArraysEqual$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["areWalletArraysEqual"])(e, t) ? e : t;
        });
    };
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        qa();
    }, [
        re?.linkedAccounts,
        z,
        B
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (B) {
            if (!C.connectors) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Connector not initialized");
            qa(), C.connectors.on("walletsUpdated", qa);
        }
    }, [
        B
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        [
            ...Zt.loginMethodsAndOrder?.primary ?? [],
            ...Zt.loginMethodsAndOrder?.overflow ?? []
        ].filter((e)=>e.startsWith("privy:")).forEach((e)=>C.getCrossAppProviderDetails(e.replace("privy:", "")));
    }, [
        !!C
    ]);
    let $a = async (e, t, a)=>{
        let r = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyEthereumWallet"])(e), n = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivySolanaWallet"])(e);
        if (a && "walletIndex" in a && "number" == typeof a.walletIndex) return Xa(e, t, a.walletIndex, r, n);
        let i = a && "createAdditional" in a && a.createAdditional;
        if (r && !i) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_ALREADY_EXISTS), Error("User already has an embedded wallet.");
        let [o, s] = await Promise.all([
            sr.initializeWalletProxy(t),
            Va()
        ]);
        if (!o && Zt.customAuth?.enabled) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_EMBEDDED_WALLET_ERROR), Error("Failed to connect to wallet proxy");
        if (!o || !s || Zt.embeddedWallets?.requireUserOwnedRecoveryOnCreate) return Ya();
        if (!r) return n && await sr.recoverPrimaryWallet(), await o.create({
            accessToken: s,
            solanaAddress: n?.address
        }), Ja(0, "ethereum");
        {
            let t = ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getLatestPrivyEthereumWallet"])(e)?.walletIndex ?? 0) + 1, { entropyId: a, entropyIdVerifier: r } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyPrimaryWallet"])(e));
            return await sr.recoverPrimaryWallet(), await o.addWallet({
                accessToken: s,
                entropyId: a,
                entropyIdVerifier: r,
                chainType: "ethereum",
                hdWalletIndex: t
            }), Ja(t, "ethereum");
        }
    }, Ya = async ()=>new Promise((e, t)=>{
            aa(!0), na({
                createWallet: {
                    onSuccess: (t)=>{
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onSuccess", {
                            wallet: t
                        }), e(t);
                    },
                    onFailure: (e)=>{
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_EMBEDDED_WALLET_ERROR), t(e);
                    },
                    callAuthOnSuccessOnClose: !1
                }
            }), Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_ON_ACCOUNT_CREATE_SCREEN);
        }), Xa = async (e, t, a, r, n)=>{
        if (a < 0) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_CREATE_ERROR), Error(`A negative walletIndex (${a}) is invalid.`);
        let [i, o] = await Promise.all([
            sr.initializeWalletProxy(t),
            Va()
        ]);
        if (!i && Zt.customAuth?.enabled) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_EMBEDDED_WALLET_ERROR), Error("Failed to connect to wallet proxy");
        if (!i || !o || Zt.embeddedWallets?.requireUserOwnedRecoveryOnCreate) {
            if (0 == a) return Ya();
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_EMBEDDED_WALLET_ERROR), Error("Create wallet UI can only be displayed when walletIndex is 0.");
        }
        if (0 == a) {
            if (r) return r;
            await i.create({
                accessToken: o,
                solanaAddress: n?.address
            });
        } else {
            if (!r) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_CREATE_ERROR), Error("A user must have a wallet at HD index 0 before creating a wallet at greater HD indices.");
            let t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyEthereumHDWallets"])(e).find((e)=>e.walletIndex === a);
            if (t) return t;
            let { entropyId: n, entropyIdVerifier: s } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyPrimaryWallet"])(e));
            await sr.recoverPrimaryWallet(), await i.addWallet({
                accessToken: o,
                entropyId: n,
                entropyIdVerifier: s,
                chainType: "ethereum",
                hdWalletIndex: a
            });
        }
        return Ja(a, "ethereum");
    }, Qa = async ({ user: e, wp: t, accessToken: a, walletIndex: r, ethereumWallet: n })=>{
        let i = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivySolanaHDWallets"])(e).find((e)=>e.walletIndex === r);
        if (i) return i;
        if (0 === r) n && await sr.recoverPrimaryWallet(), await t.createSolana({
            accessToken: a,
            ethereumAddress: n?.address
        });
        else {
            let n = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyPrimaryWallet"])(e);
            if (!n) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_CREATE_ERROR), Error("User must have a wallet at HD index 0 before creating a wallet at greater HD indices.");
            let { entropyId: i, entropyIdVerifier: o } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(n);
            await sr.recoverPrimaryWallet(), await t.addWallet({
                accessToken: a,
                entropyId: i,
                entropyIdVerifier: o,
                chainType: "solana",
                hdWalletIndex: r
            });
        }
        return Ja(r, "solana");
    }, Ja = async (e, t)=>{
        let a = await sr.refreshSessionAndUser(), r = ("ethereum" === t ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyEthereumHDWallets"])(a) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivySolanaHDWallets"])(a)).find((t)=>t.walletIndex === e);
        if (!r) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_EMBEDDED_WALLET_ERROR), Error("Failed to create wallet");
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onSuccess", {
            wallet: r
        }), r;
    }, Za = ({ transaction: e, uiOptions: t, fundWalletConfig: a, address: r, signOnly: n })=>new Promise(async (i, o)=>{
            let { requesterAppId: s } = t || {}, l = n ? "signTransaction" : "sendTransaction";
            if (!z || !re) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, l, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED), void o(Error("User must be authenticated before signing with a Privy wallet"));
            let d = r ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyEthereumWallet"])(re)?.address;
            if (!d) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("User must have an embedded wallet to send a transaction.");
            let { signingWallet: u, rootWallet: h } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEthereumSigningAndRootWallet"])(re, d);
            if (!h || !u) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, l, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), void o(Error("Must have a Privy wallet before signing"));
            aa(!0);
            let p = lr.wallets.find((e)=>"privy" === e.walletClientType && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$getAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getAddress"])(e.address) === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$getAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getAddress"])(u.address)), w = await p?.getEthereumProvider();
            if (!p || !w) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"](`Cannot sendTransaction before embedded wallet ${u.address} is connected`);
            let m = e.chainId ? Number(e.chainId) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$caip2$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["extractChainIdFromCAIP2"])(p.chainId);
            ((e)=>{
                if (!Zt.chains.map((e)=>e.id).includes(e)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyConnectorError"](`Chain ID ${e} is not supported. It must be added to the config.supportedChains property of the PrivyProvider.`, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNSUPPORTED_CHAIN_ID);
            })(m);
            let y = {
                ...e,
                from: e.from ?? u.address,
                chainId: m
            }, g = await Va();
            if (!g || !Qt) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, l, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), void o(Error("Must have valid access token and Privy wallet to send transaction"));
            let f = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$eth$2f$getPublicClient$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPublicClient"])(y.chainId, Zt.chains, Zt.rpcConfig, {
                appId: v.appId
            });
            if (va({
                showWalletUIs: t?.showWalletUIs
            })) (async ()=>{
                try {
                    if (!await sr.recoverPrimaryWallet()) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, l, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR), void o(Error("Unable to connect to wallet"));
                    let e = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$viem$2f$prepareTransactionRequest$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["prepareTransactionRequest"])(y, f, y.from), { entropyId: t, entropyIdVerifier: a } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(h), r = n ? await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$rpc$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["signTransaction"])({
                        accessToken: g,
                        entropyId: t,
                        entropyIdVerifier: a,
                        transactingWallet: u,
                        walletProxy: Qt,
                        transactionRequest: y,
                        requesterAppId: s
                    }) : await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$rpc$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sendTransaction"])({
                        accessToken: g,
                        entropyId: t,
                        entropyIdVerifier: a,
                        transactingWallet: u,
                        walletProxy: Qt,
                        transactionRequest: e,
                        publicClient: f,
                        requesterAppId: s
                    });
                    n ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signTransaction", "onSuccess", {
                        signature: r
                    }) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "sendTransaction", "onSuccess", {
                        hash: r
                    }), i({
                        hash: r
                    });
                } catch (e) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, l, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].TRANSACTION_FAILURE), o(e);
                }
            })();
            else {
                let { entropyId: e, entropyIdVerifier: r } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(h), c = {
                    entropyId: e,
                    entropyIdVerifier: r,
                    onCompleteNavigateTo: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_SEND_TRANSACTION_SCREEN,
                    onFailure: (e)=>{
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, l, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR), o(e);
                    }
                }, d = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$isFundingEnabled$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFundingEnabled"])(Zt) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$prepareFundingModalData$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["prepareFundingModalData"])({
                    address: u.address,
                    appConfig: Zt,
                    fundWalletConfig: a,
                    methodScreen: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].FUNDING_METHOD_SELECTION_SCREEN,
                    chainIdOverride: y.chainId,
                    comingFromSendTransactionScreen: !0
                }) : void 0;
                na({
                    connectWallet: c,
                    sendTransaction: {
                        transactionRequest: y,
                        transactingWallet: u,
                        entropyId: e,
                        entropyIdVerifier: r,
                        signOnly: n,
                        onConfirm: n ? async ()=>await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$rpc$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["signTransaction"])({
                                accessToken: g,
                                entropyId: e,
                                entropyIdVerifier: r,
                                transactingWallet: u,
                                walletProxy: Qt,
                                transactionRequest: y,
                                requesterAppId: s
                            }) : void 0,
                        onSuccess: (e)=>{
                            n ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signTransaction", "onSuccess", {
                                signature: e.hash
                            }) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "sendTransaction", "onSuccess", {
                                hash: e.hash
                            }), i(e);
                        },
                        onFailure: (e)=>{
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, l, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].TRANSACTION_FAILURE), o(e);
                        },
                        uiOptions: t || {},
                        fundWalletConfig: a,
                        requesterAppId: s
                    },
                    funding: d
                }), Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_CONNECTING_SCREEN);
            }
        }), er = ({ transaction: e, connection: t, transactionOptions: a, fundWalletConfig: r, uiOptions: n, wallet: i, signOnly: o })=>new Promise(async (s, l)=>{
            let { requesterAppId: c } = n || {}, d = o ? "signSolanaTransaction" : "sendSolanaTransaction";
            if (!z || !re) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, d, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED), void l(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("User must be authenticated before signing with a Privy wallet", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED));
            let u = i ? re.linkedAccounts.find((e)=>"wallet" === e.type && e.address === i.address) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivySolanaWallet"])(re);
            if (!u) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, d, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), void l(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must have a Privy wallet before signing", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND));
            aa(!0);
            let { rootWallet: h } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSolanaSigningAndRootWallet"])(re, u.address);
            if (!await sr.recoverPrimaryWallet().catch(()=>!1) || !h) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, d, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"](`Cannot sendSolanaTransaction before embedded wallet ${u.address} is connected`, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND);
            if (va({
                showWalletUIs: n?.showWalletUIs
            })) (async ()=>{
                let r = await Va();
                if (!r || !Qt) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, d, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), void l(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must have valid access token and Privy wallet to send transaction", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND));
                try {
                    let i;
                    if (!await sr.recoverPrimaryWallet()) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, d, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR), void l(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unable to connect to wallet", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR));
                    if (va({
                        showWalletUIs: n?.showWalletUIs
                    })) try {
                        if (!await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$solana$2f$transaction$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hasSufficientFunds"])(e, t)) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, d, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].INSUFFICIENT_BALANCE), void l(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Solana wallet has insufficient funds for this transaction.", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].INSUFFICIENT_BALANCE));
                    } catch (e) {
                        return console.error(e), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, d, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].TRANSACTION_FAILURE), void l(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"](e instanceof Error ? e.message : "Transaction failed.", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].TRANSACTION_FAILURE));
                    }
                    let { entropyId: c, entropyIdVerifier: h } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromUser"])(re);
                    if (o) await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$solana$2f$transaction$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["signSolanaTransaction"])({
                        accessToken: r,
                        tx: e,
                        walletProxy: Qt,
                        entropyId: c,
                        entropyIdVerifier: h,
                        transactingWalletAddress: u.address,
                        transactingWalletIndex: u.walletIndex ?? 0
                    }), i = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$solana$2f$transaction$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createSolanaTransactionReceipt"])("", e, null), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signSolanaTransaction", "onSuccess", {
                        signedTransaction: e
                    });
                    else {
                        let { signature: n, receipt: o } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$solana$2f$transaction$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sendSolanaTransaction"])({
                            accessToken: r,
                            tx: e,
                            connection: t,
                            walletProxy: Qt,
                            transactionOptions: a,
                            entropyId: c,
                            entropyIdVerifier: h,
                            transactingWalletAddress: u.address,
                            transactingWalletIndex: u.walletIndex ?? 0
                        });
                        i = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$solana$2f$transaction$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createSolanaTransactionReceipt"])(n, e, o), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "sendSolanaTransaction", "onSuccess", {
                            response: i
                        });
                    }
                    s(i);
                } catch (e) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, d, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].TRANSACTION_FAILURE), l(e);
                }
            })();
            else {
                let { entropyId: i, entropyIdVerifier: p } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(h), w = {
                    entropyId: i,
                    entropyIdVerifier: p,
                    onCompleteNavigateTo: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_SEND_SOLANA_TRANSACTION_SCREEN,
                    onFailure: (e)=>{
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, d, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR), l(e);
                    }
                }, m = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$isFundingEnabled$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFundingEnabled"])(Zt) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$prepareFundingModalData$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["prepareSolanaFundingModalData"])({
                    address: u.address,
                    appConfig: Zt,
                    methodScreen: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].FUNDING_METHOD_SELECTION_SCREEN,
                    fundWalletConfig: r,
                    comingFromSendTransactionScreen: !0
                }) : void 0;
                na({
                    connectWallet: w,
                    sendSolanaTransaction: {
                        transactionRequest: e,
                        connection: t,
                        transactionOptions: a,
                        transactingWallet: u,
                        onSuccess: (e)=>{
                            o ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signSolanaTransaction", "onSuccess", {
                                signedTransaction: e.signedTransaction
                            }) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "sendSolanaTransaction", "onSuccess", {
                                response: e
                            }), s(e);
                        },
                        onFailure: (e)=>{
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, d, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].TRANSACTION_FAILURE), l(e);
                        },
                        uiOptions: n || {},
                        requesterAppId: c,
                        signOnly: o
                    },
                    funding: m
                }), Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_CONNECTING_SCREEN);
            }
        });
    function tr() {
        return new Promise(async (e, t)=>{
            let a = await Va();
            if (!a || !Qt) throw Error("Must have valid access token to enroll in MFA");
            try {
                await Qt.verifyMfa({
                    accessToken: a
                }), e();
            } catch (e) {
                t(e);
            }
        });
    }
    let ar = (e)=>e?.linkedAccounts.filter((e)=>null !== e.latestVerifiedAt && !("wallet" === e.type && "privy" === e.walletClientType)).sort((e, t)=>t.latestVerifiedAt.getTime() - e.latestVerifiedAt.getTime())[0], rr = (e)=>{
        let t = re?.linkedAccounts.filter((t)=>t.type === e).length ?? 0, { displayName: a, loginMethod: r } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$toDisplayFromAccountType$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDisplayFromAccountType"])(e);
        if ("passkey" === e && t >= 5 || "passkey" !== e && t >= 1) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].CANNOT_LINK_MORE_OF_TYPE, {
            linkMethod: r
        }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"](`User already has an account of type ${a} linked.`);
    };
    async function nr({ showAutomaticRecovery: e = !1, legacySetWalletPasswordFlow: t = !1 }) {
        Dt(null);
        let a = t ? "setWalletPassword" : "setWalletRecovery";
        if (!z || !re) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, a, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED), Error("User must be authenticated before adding recovery method to Privy wallet");
        let r = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyPrimaryWallet"])(re);
        if (!r || !Qt) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, a, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), Error("Must have a Privy wallet to add a recovery method");
        try {
            await tr();
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, a, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MISSING_MFA_CREDENTIALS), e;
        }
        return new Promise((n, i)=>{
            aa(!0);
            let o = {
                onSuccess: (e)=>{
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, a, "onSuccess", {
                        method: "user-passcode",
                        wallet: e
                    }), n(e);
                },
                onFailure: (e)=>{
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, a, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].USER_EXITED_SET_PASSWORD_FLOW), i(e);
                },
                callAuthOnSuccessOnClose: !1
            }, s = "user-passcode" === r.recoveryMethod, l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$embeddedWalletRecovery$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toEmbeddedWalletSetRecoveryScreen"])({
                walletAction: "update",
                availableRecoveryMethods: Zt.embeddedWallets.userOwnedRecoveryOptions,
                legacySetWalletPasswordFlow: t,
                isResettingPassword: s,
                showAutomaticRecovery: e
            }), { entropyId: c, entropyIdVerifier: d } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(r);
            na({
                setWalletPassword: o,
                recoverWallet: {
                    entropyId: c,
                    entropyIdVerifier: d,
                    onFailure: i
                },
                createWallet: o,
                connectWallet: {
                    onCompleteNavigateTo: l,
                    shouldForceMFA: !1,
                    entropyId: c,
                    entropyIdVerifier: d,
                    onFailure: (e)=>{
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, a, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR), i(e);
                    }
                },
                recoverySelection: {
                    isInAccountCreateFlow: !1,
                    isResettingPassword: s
                }
            }), Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_CONNECTING_SCREEN);
        });
    }
    async function ir({ appId: e, action: t }) {
        let a = await Va();
        if ("link" === t && !a) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED, {
            linkMethod: `privy:${e}`
        }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("User must be authenticated before linking an account.");
        if ("login" === t && a) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Attempted to log in, but user is already logged in. Use a `link` helper instead.");
        Aa.current = `privy:${e}`, _a.current = t;
        let r = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$popup$2f$triggerPopup$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["triggerPopup"])();
        return C.createAnalyticsEvent({
            eventName: "cross_app_auth_started",
            payload: {
                providerAppId: e
            }
        }), new Promise(async (a, n)=>{
            let { name: i, logoUrl: o } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$authFlow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getProviderAppMetadata"])({
                api: C.api,
                providerAppId: e,
                requesterAppId: Zt.id
            });
            na({
                crossAppAuth: {
                    appId: e,
                    name: i,
                    logoUrl: o,
                    action: t,
                    popup: r,
                    onSuccess: a,
                    onError: n
                }
            }), Ia(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].CROSS_APP_AUTH_SCREEN);
        });
    }
    let or = {
        ready: B,
        authenticated: z,
        user: re,
        walletConnectors: C.connectors || null,
        connectWallet: (e)=>{
            e && "target" in e && e && (e = void 0), na({
                externalConnectWallet: {
                    walletList: e?.walletList && e?.walletList.length > 0 ? e.walletList : void 0,
                    suggestedAddress: e?.suggestedAddress,
                    walletChainType: e?.walletChainType
                }
            }), Ca(z ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].CONNECT_ONLY_AUTHENTICATED_SCREEN : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].CONNECT_ONLY_LANDING_SCREEN);
        },
        linkWallet: (e)=>{
            e && "target" in e && e && (e = void 0), Ka("siwe"), Aa.current = "siwe", _a.current = "link", na({
                ...ra,
                externalConnectWallet: {
                    ...ra.externalConnectWallet,
                    suggestedAddress: e?.suggestedAddress,
                    walletList: e?.walletList,
                    walletChainType: e?.walletChainType
                }
            }), Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].LINK_WALLET_SCREEN);
        },
        startCrossAppAuthFlow: ir,
        linkEmail: ()=>{
            Ka("email"), rr("email"), Aa.current = "email", _a.current = "link", Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].LINK_EMAIL_SCREEN);
        },
        linkPhone: ()=>{
            Ka("sms"), rr("phone"), Aa.current = "sms", _a.current = "link", Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].LINK_PHONE_SCREEN);
        },
        linkGoogle: async ()=>{
            Ka("google"), rr("google_oauth"), _a.current = "link", await sr.initLoginWithOAuth("google");
        },
        linkTwitter: async ()=>{
            Ka("twitter"), rr("twitter_oauth"), _a.current = "link", await sr.initLoginWithOAuth("twitter");
        },
        linkDiscord: async ()=>{
            Ka("discord"), rr("discord_oauth"), _a.current = "link", await sr.initLoginWithOAuth("discord");
        },
        linkGithub: async ()=>{
            Ka("github"), rr("github_oauth"), _a.current = "link", await sr.initLoginWithOAuth("github");
        },
        linkSpotify: async ()=>{
            Ka("spotify"), rr("spotify_oauth"), _a.current = "link", await sr.initLoginWithOAuth("spotify");
        },
        linkInstagram: async ()=>{
            Ka("instagram"), rr("instagram_oauth"), _a.current = "link", await sr.initLoginWithOAuth("instagram");
        },
        linkTiktok: async ()=>{
            Ka("tiktok"), rr("tiktok_oauth"), _a.current = "link", await sr.initLoginWithOAuth("tiktok");
        },
        linkLinkedIn: async ()=>{
            Ka("linkedin"), rr("linkedin_oauth"), _a.current = "link", await sr.initLoginWithOAuth("linkedin");
        },
        linkApple: async ()=>{
            Ka("apple"), rr("apple_oauth"), _a.current = "link", await sr.initLoginWithOAuth("apple");
        },
        linkPasskey: async ()=>{
            Ka("passkey"), rr("passkey"), await sr.initLinkWithPasskey(), Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].LINK_PASSKEY_SCREEN);
        },
        linkTelegram: async (e)=>{
            if (Ka("telegram"), rr("telegram"), _a.current = "link", Aa.current = "telegram", e?.launchParams) if (e.launchParams.initDataRaw) {
                let t = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$telegram$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TelegramAuthFlow"];
                C.startAuthFlow(t), t.meta.telegramAuthResult = void 0, t.meta.telegramWebAppData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$telegram$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["convertInitDataRawToTelegramWebAppData"])(e.launchParams.initDataRaw), na({
                    telegramAuthModalData: {
                        seamlessAuth: !0
                    }
                }), Ia(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].TELEGRAM_AUTH_SCREEN);
            } else (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].INVALID_DATA, {
                linkMethod: "telegram"
            });
            else await sr.initLoginWithTelegram();
            Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].TELEGRAM_AUTH_SCREEN);
        },
        linkFarcaster: async ()=>{
            Ka("farcaster"), rr("farcaster"), await sr.initLoginWithFarcaster(), _a.current = "link", Aa.current = "farcaster", Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].AWAITING_FARCASTER_CONNECTION);
        },
        updateEmail: ()=>{
            if (Ka("email"), !re?.email) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("User does not have an email linked to their account.");
            _a.current = "update", Aa.current = "email", Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].UPDATE_EMAIL_SCREEN);
        },
        updatePhone: ()=>{
            if (Ka("sms"), !re?.phone) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("User does not have a phone number linked to their account.");
            _a.current = "update", Aa.current = "sms", Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].UPDATE_PHONE_SCREEN);
        },
        login: async (e)=>{
            e && "target" in e && e && (e = void 0);
            let t = "Attempted to log in, but user is already logged in. Use a `link` helper instead.";
            if (!B) {
                let e = await new Promise((e)=>{
                    oa((t)=>e.bind(t));
                });
                if (oa(null), e) return void console.warn(t);
            }
            !re || re.isGuest ? (_a.current = "login", na({
                login: e
            }), Ia(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].LANDING)) : console.warn(t);
        },
        connectOrCreateWallet: async ()=>{
            B || (await new Promise((e)=>{
                oa(()=>e);
            }), oa(null)), z ? console.warn("User must be unauthenticated to `connectOrCreateWallet`") : (_a.current = "login", Ia(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].CONNECT_OR_CREATE));
        },
        logout: async ()=>{
            if (_a.current = null, Aa.current = null, re && C.clearProviderAcccessTokens(re), Dt(null), await C.logout(), re && Qt) try {
                await Qt.clearMfa({
                    userId: re.id
                });
            } catch (e) {}
            ie(null), G(!1), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "logout", "onSuccess"), j(!1), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].del(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CLIENT_ANALYTICS_ID_KEY"]), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].del((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getGuestCredentialStorageKey"])(Zt.id));
        },
        getAccessToken: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])(()=>C.getCustomerAccessToken(), [
            C
        ]),
        unlinkWallet: async (e)=>{
            let t;
            return ie(t = e.startsWith("0x") ? await C.unlinkEthereumWallet(e) : await C.unlinkSolanaWallet(e)), t;
        },
        unlinkEmail: async (e)=>{
            let t = await C.unlinkEmail(e);
            return ie(t), t;
        },
        unlinkPhone: async (e)=>{
            let t = await C.unlinkPhone(e);
            return ie(t), t;
        },
        unlinkGoogle: async (e)=>{
            let t = await C.unlinkOAuth("google", e);
            return ie(t), t;
        },
        unlinkTwitter: async (e)=>{
            let t = await C.unlinkOAuth("twitter", e);
            return ie(t), t;
        },
        unlinkDiscord: async (e)=>{
            let t = await C.unlinkOAuth("discord", e);
            return ie(t), t;
        },
        unlinkGithub: async (e)=>{
            let t = await C.unlinkOAuth("github", e);
            return ie(t), t;
        },
        unlinkSpotify: async (e)=>{
            let t = await C.unlinkOAuth("spotify", e);
            return ie(t), t;
        },
        unlinkInstagram: async (e)=>{
            let t = await C.unlinkOAuth("instagram", e);
            return ie(t), t;
        },
        unlinkTiktok: async (e)=>{
            let t = await C.unlinkOAuth("tiktok", e);
            return ie(t), t;
        },
        unlinkLinkedIn: async (e)=>{
            let t = await C.unlinkOAuth("linkedin", e);
            return ie(t), t;
        },
        unlinkApple: async (e)=>{
            let t = await C.unlinkOAuth("apple", e);
            return ie(t), t;
        },
        unlinkFarcaster: async (e)=>{
            let t = await C.unlinkFarcaster(e);
            return ie(t), t;
        },
        unlinkTelegram: async (e)=>{
            let t = await C.unlinkTelegram(e);
            return ie(t), t;
        },
        unlinkPasskey: async (e)=>{
            let t = await Va();
            if (!t) throw Error("Must have valid access token to enroll in MFA");
            if (!Qt) throw Error("Wallet proxy not initialized.");
            let a = Zt.passkeys.shouldUnenrollMfaOnUnlink;
            await Qt.unlinkPasskeyAccount({
                credentialId: e,
                accessToken: t,
                removeAsMfa: a
            });
            let r = await C.getAuthenticatedUser();
            return ie(r), r;
        },
        unlinkCrossAppAccount: async ({ subject: e })=>{
            let t = re?.linkedAccounts.find((t)=>"cross_app" === t.type && t.subject === e)?.providerApp;
            if (!t) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Invalid subject");
            C.storeProviderAccessToken(t.id, null);
            let a = await C.unlinkOAuth(`privy:${t.id}`, e);
            return ie(a), a;
        },
        createWallet: async (e)=>{
            e && "target" in e && e && (e = void 0);
            let t = await sr.refreshSessionAndUser();
            if (!t) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED), Error("User must be authenticated before creating a Privy wallet");
            return $a(t, 15e3, e);
        },
        setWalletRecovery: async (e)=>nr({
                legacySetWalletPasswordFlow: !1,
                showAutomaticRecovery: e?.showAutomaticRecovery ?? !1
            }),
        setWalletPassword: async ()=>nr({
                legacySetWalletPasswordFlow: !0,
                showAutomaticRecovery: !1
            }),
        signMessage: (e, t)=>new Promise(async (a, r)=>{
                let { requesterAppId: n } = t?.uiOptions || {}, i = e.message;
                if (!z || !re) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED), void r(Error("User must be authenticated before signing with a Privy wallet"));
                let o = t?.address ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyEthereumWallet"])(re)?.address;
                if (!o) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("User must have an embedded wallet to sign a message.");
                let { signingWallet: s, rootWallet: l } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEthereumSigningAndRootWallet"])(re, o);
                if (!s || !l) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), void r(Error("Must have a Privy wallet before signing"));
                if ("string" != typeof i || i.length < 1) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].INVALID_MESSAGE), void r(Error("Message must be a non-empty string"));
                aa(!0);
                let c = async ()=>{
                    if (!z) throw Error("User must be authenticated before signing with a Privy wallet");
                    let e = await Va();
                    if (!Qt || !e || !await sr.recoverPrimaryWallet()) throw Error("Unable to connect to wallet");
                    C.createAnalyticsEvent({
                        eventName: "embedded_wallet_sign_message_started",
                        payload: {
                            walletAddress: s.address,
                            requesterAppId: n
                        }
                    });
                    let { entropyId: t, entropyIdVerifier: a } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(l), { response: r } = await Qt.rpc({
                        accessToken: e,
                        entropyId: t,
                        entropyIdVerifier: a,
                        chainType: "ethereum",
                        hdWalletIndex: s.walletIndex ?? 0,
                        requesterAppId: n,
                        request: {
                            method: "personal_sign",
                            params: [
                                i,
                                s.address
                            ]
                        }
                    }), o = r.data;
                    return C.createAnalyticsEvent({
                        eventName: "embedded_wallet_sign_message_completed",
                        payload: {
                            walletAddress: s.address,
                            requesterAppId: n
                        }
                    }), o;
                };
                if (va({
                    showWalletUIs: t?.uiOptions?.showWalletUIs
                })) try {
                    let e = await c();
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signMessage", "onSuccess", {
                        signature: e
                    }), a({
                        signature: e
                    });
                } catch (e) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNABLE_TO_SIGN), r(e ?? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyProviderRpcError"]("Unable to sign message"));
                }
                else {
                    let e = {
                        method: "personal_sign",
                        data: i,
                        confirmAndSign: c,
                        onSuccess: (e)=>{
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signMessage", "onSuccess", {
                                signature: e
                            }), a({
                                signature: e
                            });
                        },
                        onFailure: (e)=>{
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNABLE_TO_SIGN), r(e);
                        },
                        uiOptions: t?.uiOptions || {}
                    }, { entropyId: n, entropyIdVerifier: o } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(l);
                    na({
                        signMessage: e,
                        connectWallet: {
                            entropyId: n,
                            entropyIdVerifier: o,
                            onCompleteNavigateTo: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_SIGN_REQUEST_SCREEN,
                            onFailure: (e)=>{
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR), r(e);
                            }
                        }
                    }), Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_CONNECTING_SCREEN);
                }
            }),
        signTypedData: (e, t)=>new Promise(async (a, r)=>{
                let { requesterAppId: n } = t?.uiOptions || {};
                if (!z || !re) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signTypedData", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED), void r(Error("User must be authenticated before signing with a Privy wallet"));
                let i = t?.address ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyEthereumWallet"])(re)?.address;
                if (!i) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("User must have an embedded wallet to sign a message.");
                let { signingWallet: o, rootWallet: s } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEthereumSigningAndRootWallet"])(re, i);
                if (!s || !o) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signTypedData", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), void r(Error("Must have a Privy wallet before signing"));
                aa(!0);
                let l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["generateTypedDataWithDomainType"])(e), c = async ()=>{
                    if (!z) throw Error("User must be authenticated before signing with a Privy wallet");
                    let e = await Va();
                    if (!Qt || !e || !await sr.recoverPrimaryWallet()) throw Error("Unable to connect to wallet");
                    C.createAnalyticsEvent({
                        eventName: "embedded_wallet_sign_typed_data_started",
                        payload: {
                            walletAddress: o.address,
                            requesterAppId: n
                        }
                    });
                    let { entropyId: t, entropyIdVerifier: a } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(s), { response: r } = await Qt.rpc({
                        accessToken: e,
                        entropyId: t,
                        entropyIdVerifier: a,
                        chainType: "ethereum",
                        hdWalletIndex: o.walletIndex ?? 0,
                        requesterAppId: n,
                        request: {
                            method: "eth_signTypedData_v4",
                            params: [
                                o.address,
                                l
                            ]
                        }
                    }), i = r.data;
                    return C.createAnalyticsEvent({
                        eventName: "embedded_wallet_sign_typed_data_completed",
                        payload: {
                            walletAddress: o.address,
                            requesterAppId: n
                        }
                    }), i;
                };
                if (va({
                    showWalletUIs: t?.uiOptions?.showWalletUIs
                })) try {
                    let e = await c();
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signTypedData", "onSuccess", {
                        signature: e
                    }), a({
                        signature: e
                    });
                } catch (e) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signTypedData", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNABLE_TO_SIGN), r(e ?? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyProviderRpcError"]("Unable to sign message"));
                }
                else {
                    let e = {
                        method: "eth_signTypedData_v4",
                        data: l,
                        confirmAndSign: c,
                        onSuccess: (e)=>{
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signTypedData", "onSuccess", {
                                signature: e
                            }), a({
                                signature: e
                            });
                        },
                        onFailure: (e)=>{
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signTypedData", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNABLE_TO_SIGN), r(e);
                        },
                        uiOptions: t?.uiOptions || {}
                    }, { entropyId: n, entropyIdVerifier: i } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(s);
                    na({
                        signMessage: e,
                        connectWallet: {
                            entropyId: n,
                            entropyIdVerifier: i,
                            onCompleteNavigateTo: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_SIGN_REQUEST_SCREEN,
                            onFailure: (e)=>{
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR), r(e);
                            }
                        }
                    }), Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_CONNECTING_SCREEN);
                }
            }),
        sendTransaction: async (e, t)=>await Za({
                transaction: e,
                uiOptions: t?.uiOptions,
                fundWalletConfig: t?.fundWalletConfig,
                address: t?.address,
                signOnly: !1
            }),
        signTransaction: async (e, t)=>({
                signature: (await Za({
                    transaction: e,
                    uiOptions: t?.uiOptions,
                    address: t?.address,
                    signOnly: !0
                })).hash
            }),
        exportWallet: (e)=>new Promise(async (t, a)=>{
                if (!z || !re) return void a(Error("User must be authenticated before exporting their Privy wallet"));
                e && "target" in e && e && (e = void 0);
                let r = e?.address ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyEthereumWallet"])(re)?.address;
                if (!r) return void a(Error("User does not have an HD Ethereum wallet. To export an imported wallet, pass the `address` of the wallet to `exportWallet`."));
                let { signingWallet: n, rootWallet: i } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEthereumSigningAndRootWallet"])(re, r);
                if (!n || !i) return void a(Error("Must have a Privy wallet before exporting"));
                aa(!0);
                let { entropyId: o, entropyIdVerifier: s } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(i), l = {
                    entropyId: o,
                    entropyIdVerifier: s,
                    onCompleteNavigateTo: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_KEY_EXPORT_SCREEN,
                    onFailure: a,
                    shouldForceMFA: !0
                };
                na(ra), await Va() && Qt ? Qt ? (na({
                    keyExport: {
                        appId: v.appId,
                        appClientId: v.clientId,
                        origin: C.apiUrl,
                        walletToExport: n,
                        primaryWallet: i,
                        onSuccess: t,
                        onFailure: a
                    },
                    connectWallet: l
                }), Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_CONNECTING_SCREEN)) : a(Error("Must have a Privy wallet before exporting")) : a(Error("Must have valid access token to enroll in MFA"));
            }),
        promptMfa: tr,
        async init (e) {
            switch(e){
                case "sms":
                    return void await C.initMfaSmsVerification();
                case "passkey":
                    return await C.initMfaPasskeyVerification();
                case "totp":
                    return;
                default:
                    throw Error(`Unsupported MFA method: ${e}`);
            }
        },
        async submit (e, t) {
            switch(e){
                case "totp":
                case "sms":
                    if ("string" != typeof t) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Invalid MFA code");
                    ma.current?.resolve({
                        mfaMethod: e,
                        mfaCode: t,
                        relyingParty: window.origin
                    }), await new Promise((e, t)=>{
                        ya.current = {
                            resolve: e,
                            reject: t
                        };
                    });
                    break;
                case "passkey":
                    if ("string" == typeof t) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Invalid authenticator response");
                    let a = await __turbopack_require__("[project]/node_modules/@simplewebauthn/browser/dist/bundle/index.js [app-ssr] (ecmascript, async loader)")(__turbopack_import__), r = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$passkeys$2f$transformResponseToSnakeCase$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["transformResponseToSnakeCase"])(await a.startAuthentication(t));
                    ma.current?.resolve({
                        mfaMethod: e,
                        mfaCode: r,
                        relyingParty: window.origin
                    }), await new Promise((e, t)=>{
                        ya.current = {
                            resolve: e,
                            reject: t
                        };
                    });
                    break;
                default:
                    throw ma.current?.reject(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unsupported MFA method")), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"](`Unsupported MFA method: ${e}`);
            }
        },
        cancel () {
            ma.current?.reject(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("MFA canceled"));
        },
        async initEnrollmentWithSms (e) {
            let t = await Va();
            if (!t || !Qt) throw Error("Must have valid access token to enroll in MFA");
            await Qt.initEnrollMfa({
                method: "sms",
                accessToken: t,
                phoneNumber: e.phoneNumber
            });
        },
        enrollInMfa: (e)=>new Promise((t, a)=>{
                if (!e) return sr.closePrivyModal(), void t();
                Zt.mfa.noPromptOnMfaRequired && console.warn("[Privy Warning] Triggering the 'showMfaEnrollmentModal' function when 'noPromptOnMfaRequired' is set to true is unexpected. If this is intentional, ensure that you are building custom UIs for MFA verification."), na({
                    mfaEnrollmentFlow: {
                        mfaMethods: Zt.mfa.methods,
                        shouldUnlinkOnUnenrollMfa: Zt.passkeys.shouldUnlinkOnUnenrollMfa,
                        onSuccess: t,
                        onFailure: a
                    }
                }), Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].MFA_ENROLLMENT_FLOW_SCREEN);
            }),
        async initEnrollmentWithTotp () {
            let e = await Va();
            if (!e || !Qt) throw Error("Must have valid access token to enroll in MFA");
            let t = await Qt.initEnrollMfa({
                method: "totp",
                accessToken: e
            });
            return {
                secret: t.secret,
                authUrl: t.authUrl
            };
        },
        async submitEnrollmentWithSms (e) {
            let t = await Va();
            if (!t || !Qt) throw Error("Must have valid access token to enroll in MFA");
            await Qt.submitEnrollMfa({
                method: "sms",
                accessToken: t,
                phoneNumber: e.phoneNumber,
                code: e.mfaCode
            }), ie(await C.getAuthenticatedUser());
        },
        async submitEnrollmentWithTotp (e) {
            let t = await Va();
            if (!t || !Qt) throw Error("Must have valid access token to enroll in MFA");
            await Qt.submitEnrollMfa({
                method: "totp",
                accessToken: t,
                code: e.mfaCode
            }), ie(await C.getAuthenticatedUser());
        },
        async initEnrollmentWithPasskey () {},
        async submitEnrollmentWithPasskey ({ credentialIds: e }, t = {}) {
            let a = await Va();
            if (!a || !Qt) throw Error("Must have valid access token to enroll in MFA");
            await Qt.submitEnrollMfa({
                method: "passkey",
                accessToken: a,
                credentialIds: e,
                removeForLogin: t.removeForLogin
            }), ie(await C.getAuthenticatedUser());
        },
        async unenroll (e, t = {}) {
            let a = await Va();
            if (!a || !Qt) throw Error("Must have valid access token to remove MFA");
            "passkey" === e ? await Qt.submitEnrollMfa({
                method: "passkey",
                accessToken: a,
                credentialIds: [],
                removeForLogin: t.removeForLogin
            }) : await Qt.unenrollMfa({
                method: e,
                accessToken: a
            }), ie(await C.getAuthenticatedUser());
        },
        requestFarcasterSignerFromWarpcast: async ()=>{
            let e = await Va(), t = re?.linkedAccounts.find((e)=>"wallet" === e.type && "privy" === e.walletClientType);
            if (!e) throw Error("Must have valid access token to connect with Farcaster");
            if (!Qt || !t) throw Error("Must have an embedded wallet to use Farcaster signers");
            if (!re?.farcaster?.fid) throw Error("Must have Farcaster account to use Farcaster signers");
            if (!await sr.recoverPrimaryWallet()) throw Error("Unable to connect to wallet");
            let a = await Qt.initFarcasterSigner({
                address: t.address,
                hdWalletIndex: null,
                accessToken: e,
                mfaCode: null,
                mfaMethod: null,
                relyingParty: window.origin
            });
            "approved" === a.status && ie(await C.getAuthenticatedUser() || re || null), na({
                farcasterSigner: a
            }), Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].AWAITING_FARCASTER_SIGNER);
        },
        getFarcasterSignerPublicKey: async ()=>{
            let e, t = await Va(), a = re?.linkedAccounts.find((e)=>"wallet" === e.type && "privy" === e.walletClientType);
            if (!t) throw Error("Must have valid access token to connect with Farcaster");
            if (!Qt || !a) throw Error("Must have an embedded wallet to use Farcaster signers");
            if (!re?.farcaster?.fid) throw Error("Must have Farcaster account to use Farcaster signers");
            if (!await sr.recoverPrimaryWallet()) throw Error("Unable to connect to wallet");
            if (!re.farcaster?.signerPublicKey) throw Error("Must have a Farcaster signer public key to sign");
            return e = re.farcaster.signerPublicKey.slice(2), Uint8Array.from(e.match(/.{1,2}/g).map((e)=>parseInt(e, 16)));
        },
        signFarcasterMessage: async (e)=>{
            let t = await Va(), a = re?.linkedAccounts.find((e)=>"wallet" === e.type && "privy" === e.walletClientType);
            if (!t) throw Error("Must have valid access token to connect with Farcaster");
            if (!Qt || !a) throw Error("Must have an embedded wallet to use Farcaster signers");
            if (!re?.farcaster?.fid) throw Error("Must have Farcaster account to use Farcaster signers");
            if (!await sr.recoverPrimaryWallet()) throw Error("Unable to connect to wallet");
            if (!re.farcaster?.signerPublicKey) throw Error("Must have a Farcaster signer public key to sign");
            let r = await __turbopack_require__("[project]/node_modules/@simplewebauthn/browser/dist/bundle/index.js [app-ssr] (ecmascript, async loader)")(__turbopack_import__), n = await Qt.signFarcasterMessage({
                address: a.address,
                hdWalletIndex: null,
                accessToken: t,
                mfaCode: null,
                mfaMethod: null,
                payload: {
                    hash: r.bufferToBase64URLString(e)
                },
                fid: BigInt(re.farcaster.fid),
                relyingParty: window.origin
            });
            return new Uint8Array(r.base64URLStringToBuffer(n.signature));
        },
        createGuestAccount: async ()=>{
            if (re && !re.isGuest) throw Error("User cannot already be authenticated to create a guest account");
            return re?.isGuest ? re : sr.loginWithGuestAccountFlow();
        },
        signMessageWithCrossAppWallet (e, { address: t, chainId: a }) {
            let r = re?.linkedAccounts.some((e)=>"cross_app" === e.type && e.smartWallets.some((e)=>e.address === t));
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$sendCrossAppRequest$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sendCrossAppRequest"])({
                user: re,
                client: C,
                address: t,
                requesterAppId: Zt.id,
                request: {
                    method: r ? "privy_signSmartWalletMessage" : "personal_sign",
                    params: [
                        e,
                        t
                    ],
                    chainId: a
                },
                reconnect: ir
            });
        },
        signTypedDataWithCrossAppWallet (e, { address: t, chainId: a }) {
            let r = re?.linkedAccounts.some((e)=>"cross_app" === e.type && e.smartWallets.some((e)=>e.address === t)), n = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["generateTypedDataWithDomainType"])(e);
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$sendCrossAppRequest$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sendCrossAppRequest"])({
                user: re,
                client: C,
                address: t,
                requesterAppId: Zt.id,
                request: {
                    method: r ? "privy_signSmartWalletTypedData" : "eth_signTypedData_v4",
                    params: [
                        t,
                        n
                    ],
                    chainId: a
                },
                reconnect: ir
            });
        },
        sendTransactionWithCrossAppWallet (e, { address: t }) {
            let a = re?.linkedAccounts.some((e)=>"cross_app" === e.type && e.smartWallets.some((e)=>e.address === t));
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$sendCrossAppRequest$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sendCrossAppRequest"])({
                user: re,
                client: C,
                address: t,
                requesterAppId: Zt.id,
                request: {
                    method: a ? "privy_sendSmartWalletTx" : "eth_sendTransaction",
                    params: [
                        e
                    ],
                    chainId: e.chainId
                },
                reconnect: ir
            });
        },
        isModalOpen: x,
        mfaMethods: Zt.mfa.methods
    };
    Da = or.signMessage, Ma = or.signTypedData, La = async (e, t)=>await Za({
            transaction: e,
            ...t,
            signOnly: !1
        }), Pa = async (e, t)=>({
            signature: (await Za({
                transaction: e,
                ...t,
                signOnly: !0
            })).hash
        });
    let sr = {
        setAuthenticated: G,
        setUser: ie,
        isNewUserThisSession: Se,
        pendingTransaction: null,
        walletConnectionStatus: Lt,
        connectors: C.connectors?.walletConnectors ?? [],
        solanaWallets: ue,
        rpcConfig: Zt.rpcConfig,
        chains: Zt.chains,
        appId: v.appId,
        showFiatPrices: "native-token" !== Zt.embeddedWallets.priceDisplay.primary,
        clientAnalyticsId: C.clientAnalyticsId,
        customAuthStatus: pa,
        hideWalletUIs: Ta,
        emailOtpState: Bt,
        setEmailOtpState: Vt,
        smsOtpState: Ht,
        setSmsOtpState: Kt,
        oAuthState: qt,
        setOAuthState: $t,
        telegramAuthState: Yt,
        setTelegramAuthState: Xt,
        siweState: zt,
        setSiweState: Gt,
        isHeadlessOAuthLoading: Mt,
        nativeTokenSymbolForChainId: (e)=>Zt.chains.find((t)=>t.id === Number(e))?.nativeCurrency.symbol,
        initializeWalletProxy: async (e)=>{
            if (Qt) return Qt;
            let t = new Promise((e)=>{
                la(()=>(t)=>e(t));
            }), a = new Promise((t)=>setTimeout(()=>t(null), e)), r = await Promise.race([
                t,
                a
            ]);
            return la(null), r;
        },
        getAuthFlow: ()=>C.authFlow,
        getAuthMeta: ()=>C.authFlow?.meta,
        client: C,
        closePrivyModal: async (e = {
            shouldCallAuthOnSuccess: !0,
            isSuccess: !1
        })=>{
            let t, a = B && z && re;
            a && Aa.current && (t = ar(re)), "login" === _a.current ? e.shouldCallAuthOnSuccess && a && Aa.current ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onComplete", {
                user: re,
                isNewUser: Se,
                wasAlreadyAuthenticated: !1,
                loginMethod: Aa.current,
                loginAccount: t ?? null
            }) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].USER_EXITED_AUTH_FLOW) : "link" === _a.current && t ? e.isSuccess && a && Aa.current ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onSuccess", {
                user: re,
                linkMethod: Aa.current,
                linkedAccount: t
            }) : Aa.current && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].USER_EXITED_LINK_FLOW, {
                linkMethod: Aa.current
            }) : "update" === _a.current && t && (e.isSuccess && a && Aa.current ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "update", "onSuccess", {
                user: re,
                updateMethod: Aa.current,
                updatedAccount: t
            }) : Aa.current && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "update", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].USER_EXITED_UPDATE_FLOW, {
                linkMethod: Aa.current
            }));
            let r = Rt && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["FUNDING_SCREENS"].includes(Rt), n = Rt === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].ERROR_SCREEN && ra.errorModalData && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["FUNDING_SCREENS"].includes(ra.errorModalData.previousScreen);
            if ((r || n) && ra.funding) {
                let e, t = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["fundingScreenMethodMap"][Rt] ?? null;
                if ("solana" === ra.funding.chainType) {
                    let a = k(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$plugins$2f$solana$2d$funding$2f$id$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SOLANA_FUNDING_PLUGIN_ID"]);
                    if (!a) return void console.warn("Unable to load solana plugin, skipping balance");
                    try {
                        e = BigInt(await a.getBalance({
                            address: ra.funding.address,
                            cluster: ra.funding.cluster
                        }));
                    } catch  {
                        console.error("Unable to pull wallet balance");
                    }
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "fundSolanaWallet", "onUserExited", {
                        address: ra.funding.address,
                        cluster: ra.funding.cluster,
                        fundingMethod: t,
                        balance: e
                    });
                } else {
                    let a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$eth$2f$getPublicClient$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPublicClient"])(ra.funding.chain.id, Zt.chains, Zt.rpcConfig, {
                        appId: v.appId
                    });
                    try {
                        e = await a.getBalance({
                            address: ra.funding.address
                        });
                    } catch  {
                        console.error("Unable to pull wallet balance");
                    }
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "fundWallet", "onUserExited", {
                        address: ra.funding.address,
                        chain: ra.funding.chain,
                        fundingMethod: t,
                        balance: e
                    });
                }
            }
            na({
                ...ra,
                externalConnectWallet: {
                    suggestedAddress: void 0
                }
            }), _a.current = null, Aa.current = null, ht(!1), j(!1), setTimeout(()=>{
                C.authFlow = void 0;
            }, 200), C.createAnalyticsEvent({
                eventName: "modal_closed"
            });
        },
        solanaSignMessage: ({ message: e, options: t })=>new Promise(async (a, r)=>{
                if (!z || !re) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signSolanaMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED), void r(Error("User must be authenticated before signing with a Privy wallet"));
                let n = t?.address ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivySolanaWallet"])(re)?.address;
                if (!n) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("User must have an embedded wallet to sign a message.");
                let { signingWallet: i, rootWallet: o } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSolanaSigningAndRootWallet"])(re, n);
                if (!i || !o) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signSolanaMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), void r(Error("Must have a Privy wallet before signing"));
                if ("string" != typeof e || e.length < 1) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].INVALID_MESSAGE), void r(Error("Message must be a non-empty string"));
                aa(!0);
                let s = async ()=>{
                    if (!z) throw Error("User must be authenticated before signing with a Privy wallet");
                    let t = await C.getAccessToken();
                    if (!t) throw Error("User must be authenticated to use their embedded wallet.");
                    let a = sr.walletProxy ?? await sr.initializeWalletProxy(15e3);
                    if (!a) throw Error("Failed to initialize embedded wallet proxy.");
                    if (!await sr.recoverPrimaryWallet()) throw Error("Unable to connect to wallet");
                    if (!o) throw Error("No root wallet for signing wallet found");
                    let { entropyId: r, entropyIdVerifier: n } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(o), { response: s } = await a.rpc({
                        accessToken: t,
                        entropyId: r,
                        entropyIdVerifier: n,
                        chainType: "solana",
                        hdWalletIndex: i.walletIndex ?? 0,
                        request: {
                            method: "signMessage",
                            params: {
                                message: e
                            }
                        }
                    });
                    return s.data.signature;
                };
                if (va({
                    showWalletUIs: t?.uiOptions?.showWalletUIs
                })) try {
                    let e = await s();
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signSolanaMessage", "onSuccess", {
                        signature: new Uint8Array(Buffer.from(e, "base64"))
                    }), a({
                        signature: e
                    });
                } catch (e) {
                    r(e);
                }
                else {
                    let n = {
                        method: "solana_signMessage",
                        data: e,
                        confirmAndSign: s,
                        onSuccess: (e)=>{
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signSolanaMessage", "onSuccess", {
                                signature: new Uint8Array(Buffer.from(e, "base64"))
                            }), a({
                                signature: e
                            });
                        },
                        onFailure: (e)=>{
                            r(e);
                        },
                        uiOptions: t?.uiOptions
                    }, { entropyId: i, entropyIdVerifier: l } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(o);
                    na({
                        signMessage: n,
                        connectWallet: {
                            entropyId: i,
                            entropyIdVerifier: l,
                            onCompleteNavigateTo: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_SIGN_REQUEST_SCREEN,
                            onFailure: (e)=>{
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signSolanaMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR), r(e);
                            }
                        }
                    }), Ia(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_CONNECTING_SCREEN);
                }
            }),
        signSolanaTransaction: async ({ transaction: e, connection: t, uiOptions: a, transactionOptions: r, address: n })=>{
            let i = n ? Ee.find((e)=>e.address === n) : Ee.slice().sort((e, t)=>(e.walletIndex ?? 0) - (t.walletIndex ?? 0))[0];
            if (!i) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "signSolanaTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Embedded wallet not found", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND);
            let { signedTransaction: o } = await er({
                transaction: e,
                connection: t,
                transactionOptions: r,
                uiOptions: a,
                wallet: i,
                signOnly: !0
            });
            return o;
        },
        sendSolanaTransaction: async ({ transaction: e, connection: t, uiOptions: a, transactionOptions: r, fundWalletConfig: n, address: i })=>{
            let o = i ? Ee.find((e)=>e.address === i) : Ee.slice().sort((e, t)=>(e.walletIndex ?? 0) - (t.walletIndex ?? 0))[0];
            if (!o) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "sendSolanaTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Embedded wallet not found", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND);
            return await er({
                transaction: e,
                connection: t,
                transactionOptions: r,
                uiOptions: a,
                fundWalletConfig: n,
                wallet: o,
                signOnly: !1
            });
        },
        openPrivyModal: Ca,
        connectWallet: Oa,
        initLoginWithWallet: async (e, t, a)=>{
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$isBaseConnectedEthereumWallet$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBaseConnectedEthereumWallet"])(e) ? (Aa.current = "siwe", ba(e, t, a)) : (Aa.current = "siws", Ba(e, t, a));
        },
        loginWithWallet: async ()=>{
            let e, t, a;
            if (!B) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyNotReadyError"];
            if (C.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$siwe$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SiweFlow"] ? e = "siwe" : C.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$siws$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SiwsFlow"] && (e = "siws"), !e) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must initialize SIWE/SIWS flow first.");
            if (null !== await C.getAccessToken()) try {
                ({ user: t } = await C.link()), Aa.current = e;
            } catch (t) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onError", t.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: e
                }), t;
            }
            else try {
                ({ user: t, isNewUser: a } = await C.authenticate()), Aa.current = e;
            } catch (e) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].GENERIC_CONNECT_WALLET_ERROR), e;
            }
            ie(t || re || null), ht(a || !1), G(!0);
        },
        delegateWallet: async ({ address: e, chainType: t, showDelegationUIs: a })=>new Promise(async (r, n)=>{
                let i = await Va();
                if (!z || !re || !i) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("User must be authenticated and have an embedded wallet to delegate actions.");
                if ("solana" !== t && "ethereum" !== t) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Only Solana and Ethereum embedded wallets are supported for delegation and revocation.");
                let o = sr.walletProxy ?? await sr.initializeWalletProxy(15e3);
                if (!o) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Wallet proxy not initialized.");
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$delegated$2d$actions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isWalletDelegated"])({
                    address: e,
                    chainType: t,
                    user: re
                })) return r();
                let s = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$delegated$2d$actions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getDelegatedWalletsData"])({
                    address: e,
                    user: re
                }), l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$delegated$2d$actions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getRootWalletDataForDelegation"])({
                    address: e,
                    user: re
                }), c = async ()=>{
                    await o.createDelegatedAction({
                        accessToken: i,
                        rootWallet: l,
                        delegatedWallets: [
                            s
                        ]
                    }), await sr.refreshSessionAndUser();
                };
                if (!a) {
                    try {
                        await c(), r();
                    } catch (e) {
                        n(e);
                    }
                    return;
                }
                await sr.recoverPrimaryWallet(), na({
                    delegatedActions: {
                        consent: {
                            address: e,
                            onDelegate: c,
                            onSuccess: async ()=>{
                                r();
                            },
                            onError: async (e)=>{
                                n(e);
                            }
                        }
                    }
                }), Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_DELEGATED_ACTIONS_CONSENT_SCREEN);
            }),
        revokeDelegatedWallets: async ({ showDelegationUIs: e })=>new Promise(async (t, a)=>{
                if (!z || !re) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("User must be authenticated and have an embedded wallet to revoke a delegated wallet.");
                if (0 === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$delegated$2d$actions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getDelegatedWalletsForUser"])(re).length) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("User has no delegated wallets to revoke.");
                let r = async ()=>{
                    await C.revokeDelegatedWallet(), await sr.refreshSessionAndUser();
                };
                if (e) na({
                    delegatedActions: {
                        revoke: {
                            onRevoke: r,
                            onSuccess: async ()=>{
                                t();
                            },
                            onError: async (e)=>{
                                a(e);
                            }
                        }
                    }
                }), Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_DELEGATED_ACTIONS_REVOKE_SCREEN);
                else try {
                    await r(), t();
                } catch (e) {
                    a(e);
                }
            }),
        initLoginWithFarcaster: async (e, t)=>{
            let a = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$farcaster$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FarcasterFlow"](e, t);
            C.startAuthFlow(a);
            try {
                Aa.current = "farcaster", await a.initializeFarcasterConnect();
            } catch (e) {
                throw "login" === _a.current ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR) : "link" === _a.current && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR, {
                    linkMethod: "farcaster"
                }), e;
            }
        },
        loginWithFarcaster: async ()=>{
            let e, t;
            if (!B) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyNotReadyError"];
            if (!(C.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$farcaster$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FarcasterFlow"])) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must initialize Farcaster flow first.");
            if (null !== await C.getAccessToken()) try {
                ({ user: e } = await C.link()), Aa.current = "farcaster";
            } catch (e) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: "farcaster"
                }), e;
            }
            else try {
                ({ user: e, isNewUser: t } = await C.authenticate()), Aa.current = "farcaster";
            } catch (e) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), e;
            }
            ie(e || null), ht(t || !1), G(!0);
        },
        async loginWithGuestAccountFlow () {
            let e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$guest$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GuestFlow"](this.appId);
            C.startAuthFlow(e);
            try {
                _a.current = "login", Aa.current = "guest";
                let { user: e, isNewUser: t } = await C.authenticate();
                if (t = t || !1, !e) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unable to authenticate guest account");
                let a = await Va(), r = await sr.initializeWalletProxy(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WALLET_PROXY_TIMEOUT"]);
                if (a && r) try {
                    let t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$user$2f$shouldCreateEmbeddedEthWallet$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["shouldCreateEmbeddedEthWallet"])(e, Zt.embeddedWallets.ethereum.createOnLogin), n = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$user$2f$shouldCreateEmbeddedSolWallet$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["shouldCreateEmbeddedSolWallet"])(e, Zt.embeddedWallets.solana.createOnLogin);
                    if (t && n) {
                        let t = await $a(e, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WALLET_PROXY_TIMEOUT"]);
                        await r.createSolana({
                            accessToken: a,
                            ethereumAddress: t?.address
                        }), e = await sr.refreshSessionAndUser();
                    } else n ? (await r.createSolana({
                        accessToken: a,
                        ethereumAddress: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyEthereumWallet"])(e)?.address
                    }), e = await sr.refreshSessionAndUser()) : t ? (await $a(e, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WALLET_PROXY_TIMEOUT"]), e = await sr.refreshSessionAndUser()) : ie(e);
                } catch (t) {
                    ie(e), console.warn("Unable to create embedded wallet for guest account");
                }
                return ht(t), G(!0), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onComplete", {
                    user: e,
                    isNewUser: t,
                    wasAlreadyAuthenticated: !1,
                    loginMethod: "guest",
                    loginAccount: null
                }), e;
            } catch (e) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), e;
            }
        },
        async crossAppAuthFlow ({ appId: e, popup: t, action: a }) {
            let r = `privy:${e}`;
            Aa.current = r;
            let { url: n, stateCode: i, codeVerifier: o } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$authFlow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getCrossAppAuthorizationUrl"])({
                api: C.api,
                appId: e
            });
            if (!n) throw C.createAnalyticsEvent({
                eventName: "cross_app_auth_error",
                payload: {
                    error: "Unable to open cross-app auth popup",
                    appId: e
                }
            }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("No authorization URL returned for cross-app auth.");
            try {
                let s = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$popupCrossAppAuthFlow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["popupCrossAppAuthFlow"])({
                    url: n,
                    popup: t,
                    provider: r
                }), l = s.stateCode, c = s.authorizationCode;
                if (l !== i) throw C.createAnalyticsEvent({
                    eventName: "possible_phishing_attempt",
                    payload: {
                        provider: r,
                        storedStateCode: i ?? "",
                        returnedStateCode: l ?? ""
                    }
                }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unexpected auth flow. This may be a phishing attempt.", void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].OAUTH_UNEXPECTED);
                let d = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$authFlow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["authenticateCrossAppAccount"])({
                    appId: e,
                    codeVerifier: o,
                    stateCode: l,
                    authorizationCode: c,
                    action: a,
                    client: C
                });
                d && C.storeProviderAccessToken(e, d);
                let u = await sr.refreshSessionAndUser();
                if (!u) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unable to update user");
                return C.createAnalyticsEvent({
                    eventName: "cross_app_auth_completed",
                    payload: {
                        providerAppId: e
                    }
                }), u;
            } catch (e) {
                throw C.createAnalyticsEvent({
                    eventName: "cross_app_auth_error",
                    payload: {
                        error: e.toString(),
                        provider: r
                    }
                }), e;
            }
        },
        async initLoginWithOAuth (e, t, a) {
            if (Aa.current = e, !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isLocalStorageAccessible"])()) return void Ia(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].IN_APP_BROWSER_LOGIN_NOT_POSSIBLE);
            if ("google" === e && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$isEmbeddedWebview$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(window.navigator.userAgent)) return void Ia(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].IN_APP_BROWSER_LOGIN_NOT_POSSIBLE);
            "twitter" === e && window.opener && window.opener.postMessage({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["USE_BROADCAST_CHANNEL_EVENT_TYPE"]
            }, "*"), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].del(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HEADLESS_OAUTH_KEY"]), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].del(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["OAUTH_DISABLE_SIGNUP_KEY"]);
            let r = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$oauth$2f$OAuthFlow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["OAuthFlow"]({
                provider: e,
                disableSignup: !!a,
                withPrivyUi: !0
            });
            t && r.addCaptchaToken(t), C.startAuthFlow(r);
            let n = await C.authFlow.getAuthorizationUrl();
            n && n.url && ("twitter" === e && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$device$2d$detect$2f$dist$2f$lib$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isAndroid"] && (n.url = n.url.replace("x.com", "twitter.com")), window.location.assign(n.url));
        },
        async initLoginWithTelegram (e, t) {
            if (!B) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyNotReadyError"];
            Aa.current = "telegram";
            let a = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$telegram$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TelegramAuthFlow"](e, t);
            C.startAuthFlow(a), Xt({
                status: "loading"
            }), a.meta.telegramWebAppData = void 0, a.meta.telegramAuthResult = await new Promise((e, t)=>Zt.loginConfig.telegramAuthConfiguration ? window.Telegram ? void window.Telegram.Login.auth({
                    bot_id: Zt.loginConfig.telegramAuthConfiguration.botId,
                    request_access: !0
                }, (a)=>a ? e(a) : t(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Telegram auth failed or was canceled by the client"))) : t(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Telegram was not initialized")) : t(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Telegram Auth configuration is not loaded")));
        },
        async loginWithTelegram (e) {
            let t, a;
            if (!(C.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$telegram$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TelegramAuthFlow"])) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must initialize Telegram flow before calling loginWithTelegram");
            C.authFlow.meta.captchaToken ||= e?.captchaToken;
            let r = await Va(), n = e?.intent || _a.current;
            if ("login" === n) try {
                let e = await C.authenticate();
                t = e.user, a = e.isNewUser, Aa.current = "telegram";
            } catch (e) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), e;
            }
            else {
                if ("link" !== n) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unknown auth intent");
                try {
                    t = (await C.link()).user, Aa.current = "telegram";
                } catch (e) {
                    throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                        linkMethod: "telegram"
                    }), e;
                }
            }
            ie(t), ht(a || !1), G(!0), Xt({
                status: "done"
            });
            let i = t?.linkedAccounts.find(({ type: e })=>"telegram" === e) || null;
            return {
                user: t,
                isNewUser: a || !1,
                wasAlreadyAuthenticated: !!r,
                loginAccount: i
            };
        },
        async recoveryOAuthFlow (e, t, a) {
            let r, n;
            function i(t) {
                if (!t) throw C.createAnalyticsEvent({
                    eventName: "recovery_oauth_error",
                    payload: {
                        error: "Unable to open recovery OAuth popup",
                        provider: e
                    }
                }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Recovery OAuth failed");
            }
            switch(e){
                case "google-drive":
                    {
                        let t, o, { url: s, codeVerifier: l, stateCode: c } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$embeddedWalletRecovery$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getRecoveryAuthorizationUrl"])({
                            api: Ra.api,
                            provider: e
                        });
                        i(s);
                        try {
                            let r = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$popupOAuthFlow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["popupOAuthFlow"])({
                                url: s,
                                popup: a,
                                provider: e
                            });
                            if (t = r.stateCode, o = r.authorizationCode, t !== c) throw C.createAnalyticsEvent({
                                eventName: "possible_phishing_attempt",
                                payload: {
                                    provider: e,
                                    storedStateCode: c ?? "",
                                    returnedStateCode: t ?? ""
                                }
                            }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unexpected auth flow. This may be a phishing attempt.", void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].OAUTH_UNEXPECTED);
                        } catch (t) {
                            throw C.createAnalyticsEvent({
                                eventName: "recovery_oauth_error",
                                payload: {
                                    error: t.toString(),
                                    provider: e
                                }
                            }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Recovery OAuth failed");
                        }
                        [r, n] = await Promise.all([
                            Va(),
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$embeddedWalletRecovery$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["authenticateRecovery"])({
                                api: Ra.api,
                                provider: e,
                                codeVerifier: l,
                                stateCode: t,
                                authorizationCode: o
                            })
                        ]);
                        break;
                    }
                case "icloud":
                    {
                        let { url: t } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$embeddedWalletRecovery$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getRecoveryAuthorizationUrl"])({
                            api: Ra.api,
                            provider: e
                        });
                        i(t);
                        let { ckWebAuthToken: o } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$popupOAuthFlow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["popupOAuthFlow"])({
                            url: t,
                            popup: a,
                            provider: e
                        });
                        n = o, r = await Va();
                    }
            }
            if (!Qt) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Cannot connect to wallet proxy");
            if (!r) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unable to authorize user");
            switch(t){
                case "recover":
                    {
                        let t = ra.recoverWallet?.entropyId, a = ra.recoverWallet?.entropyIdVerifier;
                        if (!t || !a) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Recovery OAuth failed");
                        C.createAnalyticsEvent({
                            eventName: "embedded_wallet_recovery_started",
                            payload: {
                                walletAddress: t,
                                recoveryMethod: e
                            }
                        }), await Qt.recover({
                            accessToken: r,
                            entropyId: t,
                            entropyIdVerifier: a,
                            recoveryAccessToken: n
                        }), C.createAnalyticsEvent({
                            eventName: "embedded_wallet_recovery_completed",
                            payload: {
                                walletAddress: t,
                                recoveryMethod: e
                            }
                        });
                        break;
                    }
                case "create-wallet":
                    {
                        C.createAnalyticsEvent({
                            eventName: "embedded_wallet_creation_started"
                        }), await Qt.create({
                            accessToken: r,
                            recoveryAccessToken: n,
                            recoveryMethod: e
                        });
                        let t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyEthereumWallet"])(await sr.refreshSessionAndUser());
                        if (!t) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_EMBEDDED_WALLET_ERROR), Error("Failed to create wallet");
                        C.createAnalyticsEvent({
                            eventName: "embedded_wallet_creation_completed",
                            payload: {
                                walletAddress: t.address
                            }
                        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onSuccess", {
                            wallet: t
                        });
                        break;
                    }
                case "set-recovery":
                    {
                        let t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyPrimaryWallet"])(re);
                        if (!t) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "setWalletRecovery", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), Error("Embedded wallet not found");
                        C.createAnalyticsEvent({
                            eventName: "embedded_wallet_set_recovery_started",
                            payload: {
                                walletAddress: t.address,
                                existingRecoveryMethod: t.recoveryMethod,
                                targetRecoveryMethod: e
                            }
                        });
                        let { entropyId: a, entropyIdVerifier: i } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(t);
                        await Qt.setRecovery({
                            accessToken: r,
                            entropyId: a,
                            entropyIdVerifier: i,
                            recoveryMethod: e,
                            recoveryAccessToken: n
                        });
                        let o = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyPrimaryWallet"])(await sr.refreshSessionAndUser());
                        if (!o) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_EMBEDDED_WALLET_ERROR), Error("Failed to set recovery on wallet");
                        C.createAnalyticsEvent({
                            eventName: "embedded_wallet_set_recovery_completed",
                            payload: {
                                walletAddress: t.address,
                                existingRecoveryMethod: t.recoveryMethod,
                                targetRecoveryMethod: e
                            }
                        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "setWalletRecovery", "onSuccess", {
                            method: e,
                            wallet: o
                        });
                        break;
                    }
                default:
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unsupported recovery action");
            }
        },
        async loginWithOAuth (e) {
            let t, a, r;
            if (!(C.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$oauth$2f$OAuthFlow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["OAuthFlow"])) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must initialize OAuth flow before calling loginWithOAuth");
            let n = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STATE_CODE_KEY"]), i = C.authFlow.meta.stateCode;
            if (n !== i) throw C.createAnalyticsEvent({
                eventName: "possible_phishing_attempt",
                payload: {
                    provider: e,
                    storedStateCode: n ?? "",
                    returnedStateCode: i ?? ""
                }
            }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unexpected auth flow. This may be a phishing attempt.", void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].OAUTH_UNEXPECTED);
            if (null !== await C.getAccessToken()) try {
                let a = await C.link();
                t = a.user, r = a.oAuthTokens, Aa.current = e;
            } catch (t) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onError", t.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: e
                }), t;
            }
            else try {
                let n = await C.authenticate();
                t = n.user, a = n.isNewUser, r = n.oAuthTokens, Aa.current = e;
            } catch (t) {
                throw "login" === _a.current ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onError", t.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR) : "link" === _a.current && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onError", t.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: e
                }), t;
            }
            return ie(t), ht(a || !1), G(!0), r && t && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "oAuthAuthorization", "onOAuthTokenGrant", {
                oAuthTokens: r,
                user: t
            }), r;
        },
        passkeyAuthState: xt,
        setPasskeyAuthState: jt,
        async initSignupWithPasskey ({ captchaToken: e, withPrivyUi: t }) {
            let a = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$passkey$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PasskeyFlow"]({
                captchaToken: e,
                setPasskeyAuthState: jt
            });
            C.startAuthFlow(a), _a.current = "login";
            try {
                Aa.current = "passkey", jt({
                    status: "generating-challenge"
                }), await a.initRegisterFlow(t), jt({
                    status: "awaiting-passkey"
                });
            } catch (e) {
                throw jt({
                    status: "error",
                    error: e
                }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), e;
            }
        },
        async signupWithPasskey () {
            let e, t;
            if (!B) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyNotReadyError"];
            if (!(C.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$passkey$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PasskeyFlow"])) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must initialize Passkey flow first.");
            if ("passkey" !== Aa.current) {
                let e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must init login with Passkey flow first.");
                throw jt({
                    status: "error",
                    error: e
                }), e;
            }
            let a = await Va();
            try {
                Aa.current = "passkey", jt({
                    status: "awaiting-passkey"
                }), { user: e, isNewUser: t } = await C.authenticate();
            } catch (e) {
                throw jt({
                    status: "error",
                    error: e
                }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), e;
            }
            ie(e), ht(t || !1), G(!0), jt({
                status: "done"
            });
            let r = e?.linkedAccounts.find(({ type: e })=>"passkey" === e) || null;
            return {
                user: e,
                isNewUser: t || !1,
                wasAlreadyAuthenticated: !!a,
                loginAccount: r
            };
        },
        async initLoginWithPasskey ({ captchaToken: e, withPrivyUi: t }) {
            let a = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$passkey$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PasskeyFlow"]({
                captchaToken: e,
                setPasskeyAuthState: jt
            });
            C.startAuthFlow(a), _a.current = "login";
            try {
                Aa.current = "passkey", jt({
                    status: "generating-challenge"
                }), await a.initAuthenticationFlow(t), jt({
                    status: "awaiting-passkey"
                });
            } catch (e) {
                throw jt({
                    status: "error",
                    error: e
                }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), e;
            }
        },
        async loginWithPasskey (e) {
            let t, a;
            if (!B) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyNotReadyError"];
            if (!(C.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$passkey$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PasskeyFlow"])) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must initialize Passkey flow first.");
            if (e?.credentialIds && (C.authFlow.meta.allowedCredentialsIds = e.credentialIds), "passkey" !== Aa.current) {
                let e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must init login with Passkey flow first.");
                throw jt({
                    status: "error",
                    error: e
                }), e;
            }
            let r = await Va();
            try {
                Aa.current = "passkey", jt({
                    status: "awaiting-passkey"
                }), { user: t, isNewUser: a } = await C.authenticate();
            } catch (e) {
                throw jt({
                    status: "error",
                    error: e
                }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), e;
            }
            ie(t), ht(a || !1), G(!0), jt({
                status: "done"
            });
            let n = t?.linkedAccounts.find(({ type: e })=>"passkey" === e) || null;
            return {
                user: t,
                isNewUser: a || !1,
                wasAlreadyAuthenticated: !!r,
                loginAccount: n
            };
        },
        async initLinkWithPasskey (e) {
            let t = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$passkey$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PasskeyFlow"]({
                captchaToken: e
            });
            C.startAuthFlow(t), _a.current = "link", Aa.current = "passkey", jt({
                status: "generating-challenge"
            });
            try {
                await t.initLinkFlow(), jt({
                    status: "awaiting-passkey"
                });
            } catch (e) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR, {
                    linkMethod: "passkey"
                }), jt({
                    status: "error",
                    error: e
                }), e;
            }
        },
        async linkWithPasskey () {
            let e;
            if (!B) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyNotReadyError"];
            if (!(C.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$passkey$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PasskeyFlow"])) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must initialize Passkey flow first.");
            if ("passkey" !== Aa.current) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must init login with Passkey flow first.");
            try {
                Aa.current = "passkey", { user: e } = await C.link();
            } catch (e) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: "passkey"
                }), e;
            }
            return ie(e || re || null), jt({
                status: "done"
            }), e;
        },
        async initLoginWithHeadlessOAuth (e, t, a) {
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isLocalStorageAccessible"])()) throw Error("It looks like you're using an in-app browser.  To log in, please try again using an external browser.");
            if ("google" === e && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$isEmbeddedWebview$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(window.navigator.userAgent)) throw Error("It looks like you're using an in-app browser.  To log in, please try again using an external browser.");
            let r = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$oauth$2f$OAuthFlow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["OAuthFlow"]({
                provider: e,
                withPrivyUi: !1,
                disableSignup: a ?? !1
            });
            t && r.addCaptchaToken(t), $t({
                status: "loading"
            });
            let n = await C.startAuthFlow(r).getAuthorizationUrl();
            n?.url && window.location.assign(n.url);
        },
        async loginWithHeadlessOAuth (e) {
            let t, a, r;
            Pt(!0), $t({
                status: "loading"
            }), C.startAuthFlow(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$oauth$2f$OAuthFlow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["OAuthFlow"](e));
            let n = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STATE_CODE_KEY"]), i = e.stateCode;
            if (n !== i) throw C.createAnalyticsEvent({
                eventName: "possible_phishing_attempt",
                payload: {
                    provider: e.provider,
                    storedStateCode: n ?? "",
                    returnedStateCode: i ?? ""
                }
            }), Pt(!1), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unexpected auth flow. This may be a phishing attempt.", void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].OAUTH_UNEXPECTED);
            if (null !== await C.getAccessToken()) try {
                ({ user: t, oAuthTokens: r } = await C.link()), Aa.current = e.provider;
                let a = ar(t);
                t && a && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onSuccess", {
                    user: t,
                    linkMethod: Aa.current,
                    linkedAccount: a
                });
            } catch (t) {
                throw Pt(!1), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onError", t.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: e.provider
                }), t;
            }
            else try {
                ({ user: t, isNewUser: a, oAuthTokens: r } = await C.authenticate()), Aa.current = e.provider;
                let n = ar(t);
                t && n && void 0 !== a && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onComplete", {
                    user: t,
                    isNewUser: a,
                    wasAlreadyAuthenticated: !1,
                    loginMethod: Aa.current,
                    loginAccount: n
                });
            } catch (e) {
                throw Pt(!1), $t({
                    status: "error",
                    error: e
                }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), e;
            }
            return ie(t), ht(a || !1), G(!0), Pt(!1), $t({
                status: "done"
            }), r && t && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "oAuthAuthorization", "onOAuthTokenGrant", {
                oAuthTokens: r,
                user: t
            }), t ?? void 0;
        },
        initLoginWithEmail: async ({ email: e, captchaToken: t, disableSignup: a, withPrivyUi: r })=>{
            let n = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$email$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EmailFlow"]({
                email: e,
                captchaToken: t,
                disableSignup: a
            });
            C.startAuthFlow(n);
            try {
                Aa.current = "email", Vt({
                    status: "sending-code"
                }), await n.sendCodeEmail({
                    withPrivyUi: r
                }), Vt({
                    status: "awaiting-code-input"
                });
            } catch (e) {
                throw Vt({
                    status: "error",
                    error: e
                }), "login" === _a.current ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR) : "link" === _a.current && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: "email"
                }), e;
            }
        },
        initUpdateEmail: async (e, t, a)=>{
            let r = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$email$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["UpdateEmailFlow"](e, t, a);
            C.startAuthFlow(r);
            try {
                await r.sendCodeEmail({
                    withPrivyUi: !0
                });
            } catch (e) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "update", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR, {
                    linkMethod: Aa.current
                });
            }
        },
        initUpdatePhone: async (e, t, a)=>{
            let r = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$sms$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["UpdateSmsFlow"](e, t, a);
            C.startAuthFlow(r);
            try {
                await r.sendSmsCode({
                    withPrivyUi: !0
                });
            } catch (e) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "update", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR, {
                    linkMethod: Aa.current
                });
            }
        },
        initLoginWithSms: async ({ phoneNumber: e, captchaToken: t, disableSignup: a, withPrivyUi: r })=>{
            Kt({
                status: "sending-code"
            });
            let n = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$sms$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SmsFlow"]({
                phoneNumber: e,
                captchaToken: t,
                disableSignup: a
            });
            C.startAuthFlow(n);
            try {
                Aa.current = "sms", await n.sendSmsCode({
                    withPrivyUi: r
                }), Kt({
                    status: "awaiting-code-input"
                });
            } catch (e) {
                throw Kt({
                    status: "error",
                    error: e
                }), "login" === _a.current ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR) : "link" === _a.current && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: "sms"
                }), e;
            }
        },
        resendEmailCode: async ()=>{
            await C.authFlow?.sendCodeEmail({
                withPrivyUi: !0
            });
        },
        resendSmsCode: async ()=>{
            await C.authFlow?.sendSmsCode({
                withPrivyUi: !0
            });
        },
        loginWithCode: async (e)=>{
            let t, a;
            function r(e) {
                C.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$email$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EmailFlow"] ? Vt(e) : C.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$sms$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SmsFlow"] && Kt(e);
            }
            if (r({
                status: "submitting-code"
            }), !B) {
                let e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyNotReadyError"];
                throw r({
                    status: "error",
                    error: e
                }), e;
            }
            if (C.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$email$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EmailFlow"]) C.authFlow.meta.emailCode = e.trim();
            else {
                if (!(C.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$sms$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SmsFlow"])) {
                    let e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must initialize a passwordless code flow first");
                    throw r({
                        status: "error",
                        error: e
                    }), e;
                }
                C.authFlow.meta.smsCode = e.trim();
            }
            let n = await Va();
            if ("link" === _a.current) try {
                ({ user: t } = await C.link());
            } catch (e) {
                throw r({
                    status: "error",
                    error: e
                }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: Aa.current
                }), e;
            }
            else if ("update" === _a.current) try {
                ({ user: t } = await C.link());
            } catch (e) {
                throw r({
                    status: "error",
                    error: e
                }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "update", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_UPDATE_ACCOUNT, {
                    linkMethod: Aa.current
                }), e;
            }
            else try {
                ({ user: t, isNewUser: a } = await C.authenticate());
            } catch (e) {
                throw r({
                    status: "error",
                    error: e
                }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), e;
            }
            let i = t || re;
            ie(i || null), ht(a || !1), G(!0), r({
                status: "done"
            });
            let o = null;
            return C.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$email$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EmailFlow"] ? o = i?.linkedAccounts.find(({ type: e })=>"email" === e) || null : C.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$sms$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SmsFlow"] && (o = i?.linkedAccounts.find(({ type: e })=>"phone" === e) || null), {
                user: i,
                isNewUser: a || !1,
                wasAlreadyAuthenticated: !!n,
                linkedAccount: o
            };
        },
        generateSiweMessage: async ({ address: e, chainId: t, captchaToken: a })=>{
            _a.current = "link", Aa.current = "siwe", Gt({
                status: "generating-message"
            });
            let r = await C.generateSiweNonce({
                address: e,
                captchaToken: a
            });
            return Gt({
                status: "awaiting-signature"
            }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$siwe$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["prepareSiweMessageWithNonce"])({
                address: e,
                chainId: t.replace("eip155:", ""),
                nonce: r
            });
        },
        generateSiweMessageForSmartWallet: async ({ address: e, chainId: t })=>{
            let a = await C.generateSiweNonce({
                address: e
            });
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$siwe$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["prepareSiweMessageWithNonce"])({
                address: e,
                chainId: t.replace("eip155:", ""),
                nonce: a
            });
        },
        linkSmartWallet: async ({ message: e, signature: t, smartWalletType: a })=>{
            let r;
            r = await C.linkSmartWallet({
                message: e,
                signature: t,
                smartWalletType: a
            }), ie((r = await sr.refreshSessionAndUser() ?? r) || re || null);
        },
        linkWithSiwe: async ({ message: e, signature: t, chainId: a, walletClientType: r, connectorType: n })=>{
            let i;
            Ka("siwe");
            let o = null;
            try {
                Gt({
                    status: "submitting-signature"
                }), i = await C.linkWithSiwe({
                    message: e,
                    signature: t,
                    chainId: a,
                    walletClientType: r,
                    connectorType: n
                }), i = await sr.refreshSessionAndUser() ?? i, Gt({
                    status: "done"
                }), (o = ar(i) || null) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onSuccess", {
                    user: i,
                    linkMethod: "siwe",
                    linkedAccount: o
                });
            } catch (e) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "linkAccount", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: "siwe"
                }), _a.current = null, Aa.current = null, Gt({
                    status: "error",
                    error: e
                }), e;
            }
            let s = i || re;
            return ie(s || null), _a.current = null, Aa.current = null, {
                user: s,
                linkedAccount: o
            };
        },
        refreshSessionAndUser: async ()=>{
            let e = await C.getAuthenticatedUser();
            return G(!!e), ie(e), e;
        },
        walletProxy: Qt,
        createAnalyticsEvent: ({ eventName: e, payload: t, timestamp: a })=>C.createAnalyticsEvent({
                eventName: e,
                payload: t,
                timestamp: a
            }),
        acceptTerms: async ()=>{
            let e = await C.acceptTerms();
            return ie(e), e;
        },
        getUsdTokenPrice: (e)=>C.getUsdTokenPrice(e),
        getUsdPriceForSol: ()=>C.getUsdPriceForSol(),
        getSplTokenMetadata: (e)=>C.getSplTokenMetadata(e),
        recoverPrimaryWallet: async (e)=>new Promise(async (t, a)=>{
                let r = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyPrimaryWallet"])(e?.user ?? re) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getImportedPrivyEthereumWallet"])(e?.user ?? re) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getImportedPrivySolanaWallet"])(e?.user ?? re);
                r || t(!0);
                let n = await Va();
                if (!n || !Qt || !r) return void a(Error("Must have valid access token and Privy wallet to recover wallet"));
                aa(!0);
                let { entropyId: i, entropyIdVerifier: o } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(r);
                try {
                    await Qt.connect({
                        accessToken: n,
                        entropyId: i,
                        entropyIdVerifier: o
                    }), t(!0);
                } catch (e) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["errorIndicatesRecoveryIsNeeded"])(e) && "privy" === r.recoveryMethod ? (C.createAnalyticsEvent({
                        eventName: "embedded_wallet_pinless_recovery_started",
                        payload: {
                            walletAddress: r.address
                        }
                    }), (await Qt.recover({
                        entropyId: i,
                        entropyIdVerifier: o,
                        accessToken: n
                    })).entropyId || a(Error("Unable to recover wallet")), C.createAnalyticsEvent({
                        eventName: "embedded_wallet_recovery_completed",
                        payload: {
                            walletAddress: r.address
                        }
                    }), t(!0)) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["errorIndicatesRecoveryIsNeeded"])(e) && "privy" !== r.recoveryMethod ? (na({
                        recoverWallet: {
                            entropyId: i,
                            entropyIdVerifier: o,
                            onFailure: a,
                            onSuccess: ()=>t(!0)
                        },
                        recoveryOAuthStatus: {
                            provider: r.recoveryMethod,
                            action: "recover"
                        }
                    }), Ca((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$embeddedWalletRecovery$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["embeddedWalletRecoveryScreen"])(r.recoveryMethod))) : a(e);
                }
            }),
        embeddedSolanaWallets: Ee,
        createEmbeddedSolanaWallet: async (e)=>{
            e && "target" in e && (e = void 0);
            let t = await sr.refreshSessionAndUser();
            if (!t) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED), Error("User must be authenticated before creating a Privy wallet");
            return (async (e, t, a)=>{
                let r = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivyEthereumWallet"])(e), n = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivySolanaWallet"])(e), i = a && "createAdditional" in a && a.createAdditional, o = a && "walletIndex" in a ? a.walletIndex : void 0, s = ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getLatestPrivySolanaWallet"])(e)?.walletIndex ?? -1) + 1;
                if (n && !i && "number" != typeof o) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_ALREADY_EXISTS), Error("User already has an embedded wallet.");
                if ("number" == typeof o && o < 0) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_CREATE_ERROR), Error(`A negative walletIndex (${o}) is invalid.`);
                let [l, c] = await Promise.all([
                    sr.initializeWalletProxy(t),
                    Va()
                ]);
                if (!l || !c) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(ga, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_EMBEDDED_WALLET_ERROR), Error("Failed to connect to wallet proxy");
                return await Qa({
                    user: e,
                    wp: l,
                    accessToken: c,
                    walletIndex: o ?? s,
                    ethereumWallet: r
                });
            })(t, 15e3, e);
        },
        exportSolanaWallet: (e)=>new Promise(async (t, a)=>{
                if (!z || !re) return void a(Error("User must be authenticated before exporting their Privy wallet"));
                let r = e?.address ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPrivySolanaWallet"])(re)?.address;
                if (!r) return void a(Error("User does not have an HD Solana wallet."));
                let { signingWallet: n, rootWallet: i } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSolanaSigningAndRootWallet"])(re, r);
                if (!n || !i) return void a(Error("Must have a Privy wallet before exporting"));
                if (aa(!0), !await Va() || !Qt) return void a(Error("Must have valid access token to enroll in MFA"));
                if (!Qt) return void a(Error("Must have a Privy wallet before exporting"));
                let { entropyId: o, entropyIdVerifier: s } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(i);
                na({
                    connectWallet: {
                        entropyId: o,
                        entropyIdVerifier: s,
                        onCompleteNavigateTo: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_KEY_EXPORT_SCREEN,
                        onFailure: a,
                        shouldForceMFA: !0
                    },
                    keyExport: {
                        appId: v.appId,
                        appClientId: v.clientId,
                        origin: C.apiUrl,
                        walletToExport: n,
                        primaryWallet: i,
                        onSuccess: t,
                        onFailure: a
                    }
                }), Ca(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_CONNECTING_SCREEN);
            }),
        setReadyToTrue: (e)=>{
            H(!0), ia?.(e);
        },
        updateWallets: ()=>qa(),
        fundWallet: async (e, t)=>{
            let a = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalScreen"].FUNDING_METHOD_SELECTION_SCREEN;
            na({
                funding: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$prepareFundingModalData$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["prepareFundingModalData"])({
                    address: e,
                    appConfig: Zt,
                    fundWalletConfig: t,
                    methodScreen: a
                })
            }), Ca(a);
        },
        openModal: Ca,
        requestFarcasterSignerStatus: async (e)=>{
            let t = await Va(), a = re?.linkedAccounts.find((e)=>"wallet" === e.type && "privy" === e.walletClientType);
            if (!t) throw Error("Must have valid access token to connect with Farcaster");
            if (!Qt || !a) throw Error("Must have an embedded wallet to use Farcaster signers");
            if (!re?.farcaster?.fid) throw Error("Must have Farcaster account to use Farcaster signers");
            let r = await C.requestFarcasterSignerStatus(e);
            return "approved" === r.status && ie(await C.getAuthenticatedUser() || re || null), r;
        },
        connectCoinbaseSmartWallet: async ()=>{
            Zt.externalWallets.coinbaseWallet.connectionOptions = "smartWalletOnly";
            let e = C.connectors?.findWalletConnector("coinbase_wallet", "coinbase_smart_wallet") || C.connectors?.findWalletConnector("coinbase_wallet", "coinbase_wallet");
            if (e) return e.updateConnectionPreference("smartWalletOnly"), Oa(e);
            await Ua("coinbase_wallet", "coinbase_smart_wallet");
        },
        initiateAccountTransfer: async ({ nonce: e, account: t, accountType: a, externalWalletMetadata: r, telegramAuthResult: n, telegramWebAppData: i, farcasterEmbeddedAddress: o, oAuthUserInfo: s })=>{
            let l = await C.sendAccountTransferRequest({
                nonce: e,
                account: t,
                accountType: a,
                externalWalletMetadata: r,
                telegramAuthResult: n,
                telegramWebAppData: i,
                farcasterEmbeddedAddress: o,
                oAuthUserInfo: s
            });
            return ie(l), l;
        }
    };
    Fa = sr.recoverPrimaryWallet, xa = sr.recoverPrimaryWallet, ja = sr.solanaSignMessage;
    let lr = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>({
            wallets: oe,
            ready: ca && fa
        }), [
        oe,
        ca,
        fa
    ]), cr = C.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$telegram$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TelegramAuthFlow"], dr = !Zt.headless && Zt.captchaEnabled && !z && (B || cr); /*#__PURE__*/ 
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$privy$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyContext"].Provider, {
        value: or,
        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PrivyEventsContext"].Provider, {
            value: ga,
            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$useWallets$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["UseWalletsContext"].Provider, {
                value: lr,
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$captcha$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CaptchaProvider"], {
                    ...Zt,
                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$internal$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InternalPrivyContext"].Provider, {
                        value: sr,
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$recent$2d$login$2f$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["RecentlyUsedAccountProvider"], {
                                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$modal$2d$context$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ModalProvider"], {
                                    data: ra,
                                    setModalData: na,
                                    setInitialScreen: Dt,
                                    initialScreen: Rt,
                                    authenticated: z,
                                    open: x,
                                    children: [
                                        v.children,
                                        dr && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$components$2f$Captcha$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Captcha"], {
                                            delayedExecution: !1
                                        }),
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$styles$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GlobalStyle"], {
                                            theme: {
                                                ...Zt.appearance.palette || {}
                                            }
                                        }),
                                        !Zt.render.standalone && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$components$2f$LoginModal$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LoginModal"], {
                                            open: x
                                        })
                                    ]
                                })
                            }),
                            ta && ea ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$EmbeddedWalletIframe$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EmbeddedWalletIframe"], {
                                appId: v.appId,
                                appClientId: v.clientId,
                                clientAnalyticsId: C.clientAnalyticsId,
                                origin: C.apiUrl,
                                mfaMethods: re?.mfaMethods,
                                mfaPromise: ma,
                                mfaSubmitPromise: ya,
                                onLoad: Jt,
                                onLoadFailed: ()=>null
                            }) : null,
                            Zt.loginConfig.telegramAuthConfiguration && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$LandingScreen$2f$styles$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Hide"], {
                                $if: !0,
                                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$components$2f$TelegramLoginButton$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TelegramLoginButton"], {
                                    scriptHost: v.apiUrl || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DEFAULT_PRIVY_API_URL"],
                                    botUsername: Zt.loginConfig.telegramAuthConfiguration.botName
                                })
                            })
                        ]
                    })
                })
            })
        })
    });
};
;
}}),

};

//# sourceMappingURL=node_modules_%40privy-io_react-auth_dist_esm_privy-provider-clgy2QJN_mjs_2dcbb0._.js.map